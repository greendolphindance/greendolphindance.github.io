[{"title":"解决“致命错误：无法读取远程仓库”问题","url":"/2024/01/19/解决“致命错误：无法读取远程仓库”问题/","content":"\n从昨天开始，我的博客出了故障。在终端输入hexo d，报错：\n\n<img width=\"600\" alt=\"错误信息\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b3e231d8-ad46-4414-9b1c-3145c152fab3\">\n\n我此前没有进行过任何修改，所以确定问题不是出在博客文件夹里的配置。初步判断是网络问题，但关闭或打开梯子、更换节点、更换梯子，都没有效果。于是开始瞎折腾。试了但没有效果的办法有：\n\n- 重新设置用户名和邮箱\n  - ```git config --global user.name \"yourname\"```\n  - ```git config --global user.email\"your@email.com\"```\n- 重设SSH Key（参考[这个教程](https://blog.csdn.net/iiiliuyang/article/details/104203197)）\n- 更新Hexo版本，重新安装所有npm插件\n- 重新添加SSH私钥路径\n  - ```ssh-add /path/to/your/private/key```\n\n折腾了一天，还是没有解决，很沮丧。男朋友报告他那边git pull出现了相同的问题，但是另一个用Hexo搭建博客的朋友却没有出现这个问题，非常奇怪。\n\n过了一会，男朋友说问题解决了，是机场把端口22封禁了，需要把SSH端口强制改成443。于是我照葫芦画瓢。在macOS的/Users/{用户名}/.ssh文件夹下（需要开启“显示隐藏文件”）建立一个叫config的文件，添加如下内容：\n\n```\nHost github.com\n  Hostname ssh.github.com\n  IdentityFile /Users/chumiaochen/.ssh/id_rsa\n  User git\n  Port 443\n  ProxyCommand nc -v -x 127.0.0.1:7890 %h %p\n```\n\n发现还是不行，错误信息如下：\n\n```\nssh_dispatch_run_fatal: Connection to UNKNOWN port 65535: Broken pipe\n```\n\n喂给GPT，叫我重新添加一下到私钥的路径：\n\n```\nssh-add /Users/{用户名}/.ssh/id_rsa\n```\n\n照做了。再次hexo d，出现新的错误：\n\n```\n致命错误：远端意外挂断了)\n```\n\n（这里不知道为什么有个右括号）\n\n再次询问GPT，叫我在config文件里再添加两句，添加后完整文件内容如下：\n\n```\nHost github.com\n  Hostname ssh.github.com\n  IdentityFile /Users/chumiaochen/.ssh/id_rsa\n  User git\n  Port 443\n  ProxyCommand nc -v -x 127.0.0.1:7890 %h %p\n  TCPKeepAlive yes\n  ServerAliveInterval 120\n  ```\n\n  再次hexo d，问题解决。","tags":["博客"],"categories":["折腾"]},{"title":"长沙人的长沙四日游","url":"/2024/01/12/长沙人的长沙四日游/","content":"由于男朋友访长，我和他进行了为期四日的长沙游。我作为长沙人，好像只带朋友来玩过一两次。事前我们并没有做很多攻略，基本上是拍脑袋想，不过从结果上来说，还是基本令人满意的。众所周知，长沙市中心人挤人。所以我们的基本思路是去人少的地方。又由于男朋友被我带入了攀岩坑，我们还划出一日去了攀岩馆。我将这次旅行的经验教训总结如下。\n\n# 商圈\n我热衷于网购，不爱逛街，因此去商圈基本是为了喝奶茶和吃饭。五一广场周边的商圈，不用想也知道人山人海。所以我们去了两个比较冷门的商圈，体验都还不错。\n\n## 华创\n华创国际广场是我家门口的商场，是近年才逐渐发展起来的。交通比较方便，位于地铁一号线开福寺站附近，出站后走十几分钟可以到达。也有一些公交车可以直达。里面主要是有一些吃的喝的。吃的选择挺多，就不一一列举了。茶颜悦色基本上不用排队，也有奈雪、喜茶、果呀呀、茉酸奶等等。特别推荐双双饮品店，豆沙主题的饮品都非常好喝。还有盒马。在这个商场吃了面屋猪一（下详）。\n\n## 银盆岭万达\n银盆岭万达广场（原来叫奥克斯广场）是河西的商场，离市中心比较远。交通还行，离地铁四/六号线六沟垅站很近。附近有茶颜，还有一家很大的鸳央咖啡（茶颜悦色旗下咖啡店），也有喜茶、果呀呀等。吃的不太多，推荐黄记煌，但我们吃的是一家叫君柒烤肉的自助烤肉店（下详，但不推荐）。我们去这家商场主要是为了攀岩，商场内有一家叫湘攀攀岩的攀岩馆，比较小，但难度和抱石都有（不过难度只有顶绳），难易适中（下详）。\n\n# 湖南博物院\n周三我们去了省博，体验很好。三层是梅山文化的展，似乎是展到今年年底。有很多怪力乱神的玩意我很喜欢。二层是马王堆的展。马王堆出土的展品种类繁多，令人目不暇接。必看的是省博三宝（我编的）：素纱禅衣、T型帛画、辛追夫人遗体。目前也有特展，但我们没去看。逛到半路有家咖啡厅，里面有T型帛画上的金乌主题的蛋糕，38元：\n\n<img width=\"600\" alt=\"金乌蛋糕\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/11b0e0bc-cde6-4d6e-a724-a71adad9c255\">\n\n卖相非常好，味道就那样，吃起来不像是手工蛋糕，估计是厂里做的。不过可以买一个拍照玩。逛展逛到一半有东西吃，这个设计还是挺人性化的。\n\n展厅内时不时会有志愿者带游客逛展并解说，坏处是人多，好处是可以听讲解。要不要蹭讲解，请自行决定吧。其实很多展品底下都会有二维码，扫了可以有讲解，但是我们太懒了就没扫。门口也可以租那种戴耳机的讲解，20块一个人，我们嫌贵没租。\n\n全馆我最喜欢的是辛追墓及棺椁的1:1模型，非常震撼。特定时间会有投影动画可以看，还挺有趣的，我第一次看的时候头皮发麻，但这次看不知道为什么没有这种感觉了。\n\n<img width=\"600\" alt=\"棺椁模型一角\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b1de38fe-bf62-4ec2-b48c-a54d8f34cf4c\">\n\n来都来了，怎么不买点文创呢？我比较喜欢的文创是有关锅碗瓢盆上的狸猫纹样（很怪的猫，完全没有猫样）和T型帛画上的金乌的。我买了两个手提包、一个金乌贴布、一套狸猫书签（商品名写的是回形针）。\n\n<img width=\"600\" alt=\"手提包\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/ba4a41a8-eeb1-408e-928f-272210fbac51\">\n\n手提包是狸猫（这次画得比较有猫样）和金乌组合的纹样，比我想象得大，因为之前看到有人吐槽不实用。我觉得装个手机钱包啥的还是挺好的。\n\n<img width=\"600\" alt=\"金乌贴布\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/781c66fc-6b86-4758-9b65-9b174f710afb\">\n\n这个贴布可以贴在包、书本或衣服上。我把它贴在我的MUJI手提包上，红蓝绝配！\n\n<img width=\"600\" alt=\"狸猫书签\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/fd9f1b2f-a264-4a0f-88ec-0bc6786b8875\">\n\n怪怪的猫的真面目。还没舍得拆，所以不知道实际上是否好用。\n\n需要注意的是，省博有淘宝旗舰店，但是很多文创产品旗舰店是没有的。所以如果有机会来，还是可以买点回去，送人自用都好。\n\n# 饮食\n\n## 茶颜悦色及其旗下饮品店\n\n关于茶颜悦色我要说的是，茶颜悦色很好喝，但是不值得排队一小时去买，更不值得为了它特意来一趟长沙。关于在哪里买茶颜悦色不要排队，我在上文已经推荐了一些冷门商场。顺着这个思路，可以再找找其他的冷门商场，或者干脆点外卖。根据我的经验，无奶油顶的饮品到手和当场喝只有比较小的差别，有奶油顶的饮品奶油和撒料是分装的，有点没有那个感觉了，还是比较推荐现场喝。\n\n茶颜悦色饮品的个人推荐：\n\n- 有奶油顶：三季虫（很浓的红茶香，口味略重）、蔓越阑珊（加了蔓越莓果酱之类的，口感偏酸）\n- 无奶油顶：声声乌龙（招牌）、桂花弄（桂花香气）、嫌弃黄茶版（豆香）\n- 奶盖：全部（literally全部，无一踩雷）\n\n茶颜悦色旗下还有鸳央咖啡和古德墨柠。其实比起茶颜悦色本色，我更推荐这两家。一是它们各有特点，二是不要排特别久的队。前者主打“日咖夜酒”——特调茶咖和低度数酒（每天16:30以后售卖），后者主打柠香味的奶茶，也有酒（同样是16:30后提供）。\n\n鸳央咖啡和古德墨柠饮品的个人推荐：\n\n- 鸳央咖啡·咖啡：没有特别讨厌的，随便点吧\n- 鸳央咖啡·酒：庄生晓梦蝶（紫苏桃子味，清甜。另外紫苏桃子是湖南特色小吃，也一并推荐）\n- 古德墨柠·奶茶：有凉风（基本上是散发柠檬香气的茶颜悦色）、春眠不觉晓（稍微有一点沙冰，柠檬味比有凉风重）\n- 古德墨柠·酒：还没喝过\n\n## 面屋猪一\n新开的，星期二吃了这家，据说是什么网红店，在深圳还是哪里很火？\n\n<img width=\"400\" alt=\"面屋猪一店面\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/2abc7dad-5da7-453d-a7da-66f9c21e1b32\">\n\n店面很小，目测可以坐十个人左右吧，所以虽然取号显示前面只有两桌，还是等了很久的位。服务态度很好，我们坐在店门口等，服务员看我们等了很久，给我们拿了两罐芬达，吃的时候还多送了一份小食，说不好意思让你们等了这么久。令人暖心！\n\n点单的纸上详细写了面的粗细、软硬程度、汤的浓淡、辣度等等，服务员会详细指导，也会告知怎样买单更优惠。价格大概是人均40，可以免费加两次面。我们只加了一次就吃饱了。\n\n<img width=\"600\" alt=\"面屋猪一（面、饮料、小食）\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/4be173be-1cfb-4796-9f07-3a87a763adc6\">\n\n一尝发现很好吃！不愧是网红店。汤很香，辣酱也很香（图里的还没放辣酱），但是有点辣，建议少放。图片中左的玉米粒是加的，之后倒进碗里了。中间的是小食——土豆泥沙拉、海草、腌笋。小食倒是中规中矩，可能是批发大包装。我以前很喜欢吃海草，每餐必点，结果看到淘宝有卖那种很大一包做好了的海草，只要十几块钱，大受震撼，从此不点了。但免费的还是爱吃。\n\n## 鲁哥饭店\n老朋友了，我自己经常吃，朋友聚会也在这吃过几次。味道很正宗，菜品基本没踩过雷。推荐酸萝卜牛百叶、咸蛋黄茄子。虽然是我个人的推荐，但这两个菜其实也是大众点评上大家最推荐的菜。所以来旅游的朋友可以照着大众点评点，一般不出错。我们那天点了三个菜：孜然牛肉、酸包菜粉条、藕汤。都很好吃，我尤其喜欢喝那个藕汤，它里面可能放了点糖，喝起来清甜爽口，搭配粉藕更是锦上添花。\n\n## 君柒烤肉\n\n看到店门口贴着“湘派烤肉”，想看看到底是怎么个湘派就进去了。价格很便宜，大众点评双人套餐人均55，是自助餐！可以说是白菜价了。\n\n但是吃了一餐，始终没get到“湘派”到底体现在哪里。感觉就是很普通的烤肉，没有特色，味道也很一般。所以外地来的朋友就不用吃这一家了。\n\n里面倒是有挺多好玩的，有烤肠机（好吃，但我为什么要在这里吃烤肠），还有自己打冰淇淋的机器（但不好吃）。除了烤物之外，还有炸物、蒸物（包子烧卖啥的）、甜品，但除了炸物我们没吃之外，其他的都挺不好吃的，尤其甜品，一吃就是厂里做的。\n\n总之不推荐。当时真应该去吃彭耕记的。\n\n## 三和面馆\n\n也是老朋友了，上回朋友来长沙请他们吃这个，惊艳所有人。我自己也点过很多次外卖。码子最推荐黄瓜皮牛肉，黄瓜皮很脆且有清香；其次是雪里红肉泥。主食推荐干拌面。粉我没吃过，不知道好不好吃。\n\n湖南的碱面似乎很出名，和北方的面不是一个风味，是偏硬的细面。喜欢的会很喜欢。如果没吃过，推荐尝试一下，反正也不贵，大众点评买那个18元的套餐即可，可以选黄瓜皮牛肉、红烧肉和雪里红肉泥，不过红烧肉的我没吃过。\n\n## 比例咖啡\n\n或许是长沙最出名的独立咖啡店？距一号线侯家塘站大概十几分钟步行的路程。我没有踩雷过，所以基本上都可以点。最推荐Dirty和手冲。Dirty的豆子偏苦，和冰牛奶相得益彰。手冲每天的豆单不一样，会写在正对着门的小黑板上。我周五点的是肯尼亚，是偏酸的莓果风味，闻起来确实有莓果香。我不太擅长分辨咖啡的风味，什么坚果、红酒之类的啥也闻不出，但花香和果香我闻出来很明显，而且很喜欢。所以我比较喜欢偏酸的咖啡。如果喜欢偏苦的，可以让店员推荐。咖啡上来时，一个店员小哥充满激情地介绍了该咖啡的风味特点，很有感染力。\n\n店内店外都有座位，天气好的话可以坐在店外边晒太阳边喝。店内比较小，空调效果很足很暖和，但歌单不怎么样。\n\n## 旺旺小吃\n\n老朋友三号，每次路过母校长郡中学（地铁一号线南门口站）都会买。面对着长郡校门右拐，直走到尽头就可以看到。一般打烊比较早，不清楚具体是几点，我周五是下午快五点的时候买的。\n\n个人的推荐是招牌香干、土豆丝和捆鸡。香干是那种很干很硬的，有嚼劲，回味无穷。土豆丝脆脆的，捆鸡是新品，也都很好吃。需要注意的是很辣！尤其是香干，非常辣，连我都需要喝很多水。但是有一开始吃就停不下来的魔力。\n\n我从2013年开始吃旺旺小吃，如今已经超过十年了。我看着它从长郡左边搬到右边，从5块一盒涨价到25（荤）/10（素）块一盒，感觉时光飞逝。现在荤菜的价格确实有点贵了，但又不是天天吃，偶尔买一次不要紧的。\n\n另有凉皮和凉面出售，也都非常推荐。喜欢清爽挂的朋友记得让店家别放芝麻酱（还是花生酱？不记得了）。\n\n# 攀岩\n考虑到城市面积，长沙的攀岩馆算是挺多的。比较出名的有两家香蕉攀岩、瞿海滨攀岩馆、湘攀攀岩。我们周四去的是湘攀攀岩。\n\n关于四家的概况：\n\n- 香蕉攀岩（凯德壹中心店）：很小，只有抱石\n- 香蕉攀岩（珠江星环店）：比较大，难度比较多，抱石只有中间一个岛。有设定儿童区，适合小孩玩\n- 瞿海滨攀岩馆：难度和抱石都有，抱石区很大，线路各个等级都有\n- 湘攀攀岩：难度和抱石都有，比较小，但比凯德壹香蕉要大\n\n湘攀白天基本没人，晚上人会比较多（不过基本所有的攀岩馆都这样，都是社畜）。社恐的建议白天去，想和大部队一起磕线的可以晚上去。我们爬了一个下午加一个晚上，下午教练和前台姐姐会（闲着没事地）来指导你，或者跟你一起爬。晚上氛围很好，大家会轮流爬同一条线，失败了会获得鼓励，成功了会收获掌声和欢呼。不过想来其他的攀岩馆应该也是这样的氛围。\n\n湘攀的线定得挺有意思的，大部分线需要一点技巧，基本没有纯粹的引体线。我尤其喜欢slab墙上的那些线路，有难度又好玩。\n\n# 总结\n\n以上就是一个长沙人的长沙旅行攻略，纯主观，有偏见，仅供参考。虽然近年来游客增加，体验有所下降，但是长沙确实是一个适合旅游的城市，如果思路得当，可以玩得很舒服。欢迎大家来长沙玩（最好在淡季虽然我也不知道什么时候是淡季）！","tags":["食物","运动","旅行"],"categories":["攻略"]},{"title":"购物分享（4）","url":"/2024/01/01/购物分享（4）/","content":"回国了！回国前后买的一大批东西到了。挑几个来写购物分享。\n\n# 衣服\n\n## 新雪丽棉服\n\n<img width=\"600\" alt=\"新雪丽棉服-卖家秀\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/2f05f4f6-6efa-480f-9239-de993c30dff8\">\n\n价格：¥295\n\n来源：小红书@For her\n\n---\n\n我钟爱的穿搭博主希希（小红书@For her）自制的棉服外套！采用高端原料、精致工艺、时尚设计（瞎吹）。领子可以立起或放下，共两种穿法。我上身如图（分别是领子立起、领子放下）：\n\n<img width=\"600\" alt=\"棉服上身-领子立起\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/745cd5a3-7553-4b21-84d0-79fee1973bc6\">\n\n<img width=\"600\" alt=\"棉服上身-领子放下\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/1094b411-d124-40ca-b0f3-b66a61db7a94\">\n\n怎么说呢，有一种老干部风（？）的同时又有一些山系，反正我是很喜欢。希希刚发设计图开预售的时候，我想这啥啊不买，结果做出来了，她一发上身图，我就后悔没有上车！于是连夜转账，看到希希确认收款，终于松了一口气。\n\n有一些设计上的小细节我很喜欢：（1）口袋带按扣；（2）内衬是好看的格子图案，敞开穿或者把袖子翻上去的时候会有一种别致心机感。一些做作摆拍：\n\n<img width=\"600\" alt=\"棉服内衬及美甲\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/247dd2b5-f35e-4864-b71a-564be7778e0b\">\n\n（顺便展示一下自己做的美甲）\n\n## 粉红围巾\n\n<img width=\"600\" alt=\"粉红围巾\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b5165c71-7f49-4c27-91ee-3d9916b145e4\">\n\n价格：¥129.9\n\n来源：微店（已售罄）\n\n---\n说是某品牌（看图）的原单，不知真假。不过挺舒服也挺好看的。材质是羊绒羊毛混纺。我拍得太丑了就不放上身图了，总之挺好看百搭一围巾。\n\n## 便宜牛仔裤\n\n\n<img width=\"600\" alt=\"牛仔裤\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d6c26ec4-4b2e-4cc1-9f45-c4733f940170\">\n\n价格：¥23.8\n\n来源：拼多多（已售罄）\n\n---\n\n希希粉丝群的群友喵少推荐的便宜裤子。斜拉链的设计我有点不喜欢，但二十块钱要什么自行车呢？而且我平常也不爱把上衣扎到牛仔裤里，主打一个怎么舒服怎么来。\n\n上身是阔腿裤的版型：\n\n<img width=\"600\" alt=\"牛仔裤上身\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/15f6c71d-423e-4e5e-97f2-9d6086ac8e56\">\n\n居然无可挑剔！明天就穿这一套出门吃烧鸟（并没有什么关系就是了）。\n\n# 书\n\n## 《离开学术界实用指南》\n\n<img width=\"600\" alt=\"离开学术界实用指南\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/e17e9680-679b-45a0-9a78-79e5afa012d2\">\n\n价格：¥25.78\n\n来源：多抓鱼（品相良好）\n\n---\n\n正适合我的一本书。拿到手发现开本比较小，可以放在包里，需要时随时拿出来阅读（不是）。目前看了一章，觉得说的很多事情都有些道理，如果读完有收获的话可能会在博客写读后感吧。\n\n## 《我破碎的真理子》\n\n<img width=\"600\" alt=\"我破碎的真理子\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/8f9f5be7-eaf4-45ee-a9fb-1d73bee969dc\">\n\n价格：¥32\n\n来源：天猫·红阅图书专营店（我买的链接没了，最新的链接在[这里](https://item.taobao.com/item.htm?id=737920486590)，比我买的便宜，快买）\n\n---\n\n早就在汉化组的微博看过的漫画，终于引进了实体书，于是购买补档。我看过最好的短篇之一，但建议在情绪稳定的时候阅读。首发送了很多周边，有明信片光栅卡等等，我最喜欢的是这个：\n\n<img width=\"600\" alt=\"透明卡片\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/9afaafef-dcf4-41e4-a869-85e3436aafda\">\n\n卡面是透明的，可以像这样叠在不同背景上，形成不同的颜色。我特意选了在LA看到的大海作为背景，想和剧情呼应。\n\n此外，本书还贴心地附送了两封信：\n\n<img width=\"600\" alt=\"信\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d931b62d-7fe0-45c7-977c-d7fa049b3ed8\">\n\n我还没看，准备读一遍实体书复习再看。不过既然是那样的剧情，感觉这两封信确实很有必要。\n\n国内实体书删减了一段未成年人抽烟的场景，对剧情没有影响。但我其实挺喜欢那一段来着。\n\n# 贝尔金手机支架\n\n<img width=\"600\" alt=\"手机支架\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/ca89cd5b-e778-4b8a-adfd-2dae391aa644\">\n\n价格：¥137.98\n\n来源：[天猫超市](https://item.taobao.com/item.htm?id=710304946420)\n\n---\n\n之前不是分享过买的泡泡骚吗，其实在那之前，我就买了一个贝尔金的磁吸手机支架寄到了家。只是我迫切想要一个支架，国外泡泡骚又便宜五十块钱，所以又买了一个泡泡骚。计划是回去把泡泡骚淘汰给我爸，然后我用贝尔金。\n\n结果回来之后给爸一试，爸说他要贝尔金，我只好继续用泡泡骚了（悲）。\n\n贝尔金这个金属支架明显质感比塑料的泡泡骚要好。如图所示，它立起来是个支架，不过在手持手机时也可以把手指穿过去起到辅助作用。用爸的手机简单一试：\n\n<img width=\"600\" alt=\"手机支架-手持\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/20ab00ff-8282-4265-9a2a-4f11b5068ef5\">\n\n总之，我的评价是，好好好，快买。而且这个比泡泡骚便宜！\n\n# 盒马草莓盒子蛋糕\n\n<img width=\"600\" alt=\"蛋糕\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/3bb24293-456a-4d6c-b097-372c16733566\">\n\n价格：¥79\n\n来源：盒马\n\n---\n\n好吃快吃！今天跟表妹逛盒马的时候买的，据她说很好吃，回来一尝果然惊艳。是比较淡的味道，草莓是新鲜草莓的味道（而不是裹了糖浆那种），吃得出来品质很好。奶油是动物奶油。蛋糕胚也很松软。唯一的不足可能是上面草莓果酱的味道不是很突出，但这更像是个人口味差异，而不是它的缺陷。\n\n盒马另有99块的车厘子蛋糕在售，不知道怎么样，有机会尝试一下。","tags":["工具","服饰","食物","书籍"],"categories":["购物"]},{"title":"制作Hexo标签墙","url":"/2023/12/22/制作Hexo标签墙/","content":"\n# 背景\n今天闲来无事，想起cyx曾经发给过我的一个人的博客的[标签墙](https://mantyke.icu/tags-wall)。她是用Hugo搭的博客，研究了一下代码，感觉Hugo有一个特定的插件可以实现这个，但是Hexo没有。于是准备手搓一个。\n\n这一过程当然得到了ChatGPT的很多帮助，或者说Javascript代码基本上都是它写的（我才刚学到用Javascript算小学数学题……）。我只是修改了一些CSS样式等等。过程如下。\n\n# 步骤\n\n## 1. 准备数据\n\n首先，我创建了source/_data目录，并在其下创建了一个tag_groups.yml文件，用来定义标签及其分类。\n\n```\n标签1: 分类A\n标签2: 分类B\n标签3: 分类C\n……\n```\n\n## 2. 修改tag.ejs\n\n在我的主题模板文件 tag.ejs 中，我添加了以下代码来展示标签，并为每个标签添加了一个数据属性来存储其分类。\n\n```html\n<div class=\"tag-cloud-tags\">\n    <% sortedTags.forEach(function(tag) { %>\n        <% var tagName=tag.name; %>\n            <% var tagGroup=tagGroups[tagName] ? tagGroups[tagName] : '未分类' ; %>\n                <a class=\"tag\" href=\"<%- url_for(tag.path) %>\"\n                    data-tag-group=\"<%- tagGroup %>\">\n                    <%- tagName %><small>(<%- tag.length %>)</small>\n                </a>\n                <% }); %>\n</div>\n\n<% } else { %>\n    <p>未找到标签分组数据。</p>\n    <% } %>\n\n        <div id=\"tag-background\"></div>\n        <div id=\"tag-group-name\"></div>\n ```\n\n## 3. CSS样式\n\n为了使标签墙看起来更美观，我添加了一些基本的 CSS 样式，并为夜间模式定义了不同的颜色。\n\n```css\n:root {\n    --tag-border-color: #ddd;\n    /* 标签文本颜色 */\n}\n\nbody.dark-theme {\n    --tag-border-color: #a9a9b3;\n    /* 夜间模式下的边框颜色 */\n}\n\n.tag {\n    display: inline-block;\n    margin: 0 10px;\n    padding: 5px 10px;\n    border: 1px solid var(--tag-border-color);\n    transition: opacity 0.3s;\n}\n\n.tag:hover {\n    cursor: pointer;\n    opacity: 1;\n    /* 鼠标悬停时，标签不会减淡 */\n}\n\n.dimmed {\n    opacity: 0.3;\n    /* 减淡显示的样式 */\n}\n\n#tag-group-name {\n    display: none;\n    /* 默认不显示 */\n    position: fixed;\n    left: 50%;\n    bottom: 10%;\n    /* 或根据需要调整 */\n    transform: translateX(-50%);\n    font-size: 3em;\n    /* 大字号，根据需要调整 */\n    z-index: 9999;\n    /* 确保它在页面内容之上 */\n    color: var(--tag-border-color);\n    /* 使用同样的颜色 */\n    padding: 0.5em 1em;\n    /* 内边距，根据需要调整 */\n    border-radius: 10px;\n    /* 圆角边框 */\n    transition: opacity 0.3s, bottom 0.3s;\n    /* 平滑过渡效果 */\n    opacity: 0;\n    pointer-events: none;\n    /* 确保鼠标事件可以透过它传递 */\n}\n\n@media (prefers-color-scheme: dark),\n.dark-theme {\n    #tag-group-name {\n        color: var(--tag-text-color);\n        /* 夜间模式的文本颜色 */\n    }\n}\n```\n\n## 4. JavaScript交互\n\n最后，我通过 JavaScript 添加了交互效果，当鼠标悬停在标签上时，显示标签的分类，并减淡其他分类的标签。\n\n```html\n<script>\n    document.addEventListener('DOMContentLoaded', function () {\n        var tags = document.querySelectorAll('.tag-cloud-tags a');\n        var groupNameDisplay = document.getElementById('tag-group-name');\n\n        tags.forEach(function (tag) {\n            tag.addEventListener('mouseover', function () {\n                var group = this.getAttribute('data-tag-group');\n                groupNameDisplay.textContent = group; // 设置分类名称文本\n                groupNameDisplay.style.display = 'block'; // 显示分类名称\n                groupNameDisplay.style.opacity = 1; // 使其可见\n                groupNameDisplay.style.bottom = '20%'; // 提高位置使其更可见\n\n                tags.forEach(function (otherTag) {\n                    if (otherTag.getAttribute('data-tag-group') !== group) {\n                        otherTag.classList.add('dimmed');\n                    }\n                });\n            });\n\n            tag.addEventListener('mouseout', function () {\n                groupNameDisplay.style.opacity = 0; // 使其透明\n                groupNameDisplay.style.bottom = '10%'; // 降低位置\n                groupNameDisplay.style.display = 'none'; // 再次隐藏\n\n                tags.forEach(function (otherTag) {\n                    otherTag.classList.remove('dimmed');\n                });\n            });\n        });\n    });\n</script>\n```\n\n## 5. 小修改：移动端的点击效果\n\n如果仅做此前的修改，会导致在移动端时，点击标签直接跳转了子页面，没有显示标签墙的突出选中分类的效果。因此，我希望实现移动端点击一次时突出显示选中分类、点击两次时才跳转至子页面。添加如下Javascript代码：\n\n```html\n<script>\n    document.addEventListener('DOMContentLoaded', function () {\n        var tags = document.querySelectorAll('.tag-cloud-tags a');\n        var groupNameDisplay = document.getElementById('tag-group-name');\n\n        function handleTagInteraction(currentTag, isMouseOver) {\n            var group = currentTag.getAttribute('data-tag-group');\n            groupNameDisplay.textContent = group;\n            groupNameDisplay.style.display = isMouseOver ? 'block' : 'none';\n\n            tags.forEach(function (tag) {\n                if (isMouseOver && tag.getAttribute('data-tag-group') !== group) {\n                    tag.classList.add('dimmed');\n                } else {\n                    tag.classList.remove('dimmed');\n                }\n            });\n        }\n\n        tags.forEach(function (tag) {\n            // 鼠标悬停效果\n            tag.addEventListener('mouseover', function () {\n                handleTagInteraction(this, true);\n            });\n\n            tag.addEventListener('mouseout', function () {\n                handleTagInteraction(this, false);\n            });\n\n            // 移动端点击效果\n            tag.addEventListener('touchend', function (event) {\n                // 阻止默认的链接跳转\n                event.preventDefault();\n\n                // 切换激活状态\n                if (!this.classList.contains('active')) {\n                    // 移除之前激活的标签的激活状态\n                    document.querySelector('.tag-cloud-tags a.active')?.classList.remove('active');\n\n                    // 激活当前标签并应用效果\n                    this.classList.add('active');\n                    handleTagInteraction(this, true);\n                } else {\n                    // 如果已经激活，则允许链接跳转\n                    window.location.href = this.href;\n                }\n            });\n        });\n    });\n</script>\n```\n即可。\n\n## 不知道什么修改\n\n由于（1）排序逻辑突然挂了，（2）移动端不显示分类大字，我在GPT的指导下修改了一些代码。作为备份，我把修改后tag.ejs的完整代码放在下面（有些缩进是乱的，我懒得改了）：\n\n```html\n<%# this page will judge whether current page is 'tag.' url:'http://localhost:4000/tag/' return false.\n    url:'http://localhost:4000/tags/test/' return true. if you enter 'tag' page by click link will show all tags.\n    otherwise if you enter 'tags' by click post header link will show the single tag of this post. how to add a tag\n    page: 1. hexo new page \"tag\" 2. cd source/tag/index.md 3. add layout pattern like this: --- title: '''tag''' date:\n    2019-06-09 09:56:49 layout: tag --- %>\n\n    <% if(is_tag()){ %>\n        <%- partial('_page/tag', {pagination: config.tag, index: true}) %>\n            <% }else{ %>\n                <div class=\"container\">\n                    <div class=\"post-wrap tags\">\n                        <h2 class=\"post-title\">-&nbsp;标签&nbsp;-</h2>\n                        <% if (site.data.tag_groups) { %>\n                            <% var tagGroups=site.data.tag_groups; %>\n                                <% var tagsArray=[]; site.tags.each(function(tag) { tagsArray.push({ name: tag.name,\n                                    path: tag.path, length: tag.length }); }); var sortedTags=tagsArray.sort(function(a,\n                                    b) { return a.name.toLowerCase().localeCompare(b.name.toLowerCase()); }); %>\n\n                                    <div class=\"tag-cloud-tags\">\n                                        <% sortedTags.forEach(function(tag) { %>\n                                            <% var tagName=tag.name; %>\n                                                <% var tagGroup=tagGroups[tagName] ? tagGroups[tagName] : '未分类' ; %>\n                                                    <a class=\"tag\" href=\"<%- url_for(tag.path) %>\"\n                                                        data-tag-group=\"<%- tagGroup %>\">\n                                                        <%- tagName %><small>(<%- tag.length %>)</small>\n                                                    </a>\n                                                    <% }); %>\n                                    </div>\n\n\n                                    <% } else { %>\n                                        <p>未找到标签分组数据。</p>\n                                        <% } %>\n                                            <div id=\"tag-background\"></div>\n                                            <div id=\"tag-group-name\"></div>\n                    </div>\n                    <% } %>\n\n<style>\n    :root {\n        --tag-border-color: #ddd;\n        --tag-text-color: #ddd;\n        /* 标签文本颜色 */\n    }\n\n    body.dark-theme {\n        --tag-border-color: #a9a9b3;\n        /* 夜间模式下的边框颜色 */\n        --tag-text-color: #a9a9b3;\n    }\n\n    .tag {\n        display: inline-block;\n        margin: 0 10px;\n        padding: 5px 10px;\n        border: 1px solid var(--tag-border-color);\n        transition: opacity 0.3s;\n    }\n\n    .tag:hover {\n        cursor: pointer;\n        opacity: 1;\n        /* 鼠标悬停时，标签不会减淡 */\n    }\n\n    .dimmed {\n        opacity: 0.3;\n        /* 减淡显示的样式 */\n    }\n\n    #tag-group-name {\n        display: none;\n        /* 默认不显示 */\n        position: fixed;\n        left: 50%;\n        bottom: 10%;\n        /* 或根据需要调整 */\n        transform: translateX(-50%);\n        font-size: 3em;\n        /* 大字号，根据需要调整 */\n        z-index: 9999;\n        /* 确保它在页面内容之上 */\n        color: var(--tag-border-color);\n        /* 使用同样的颜色 */\n        padding: 0.5em 1em;\n        /* 内边距，根据需要调整 */\n        border-radius: 10px;\n        /* 圆角边框 */\n        transition: opacity 0.3s, bottom 0.3s;\n        /* 平滑过渡效果 */\n        opacity: 0;\n        pointer-events: none;\n        /* 确保鼠标事件可以透过它传递 */\n    }\n\n    @media (prefers-color-scheme: dark),\n    .dark-theme {\n        #tag-group-name {\n            color: var(--tag-text-color);\n            /* 夜间模式的文本颜色 */\n        }\n    }\n</style>\n\n<script>\n    document.addEventListener('DOMContentLoaded', function () {\n        var tags = document.querySelectorAll('.tag-cloud-tags a');\n        var groupNameDisplay = document.getElementById('tag-group-name');\n\n        tags.forEach(function (tag) {\n            tag.addEventListener('mouseover', function () {\n                var group = this.getAttribute('data-tag-group');\n                groupNameDisplay.textContent = group; // 设置分类名称文本\n                groupNameDisplay.style.display = 'block'; // 显示分类名称\n                groupNameDisplay.style.opacity = 1; // 使其可见\n                groupNameDisplay.style.bottom = '20%'; // 提高位置使其更可见\n\n                tags.forEach(function (otherTag) {\n                    if (otherTag.getAttribute('data-tag-group') !== group) {\n                        otherTag.classList.add('dimmed');\n                    }\n                });\n            });\n\n            tag.addEventListener('mouseout', function () {\n                groupNameDisplay.style.opacity = 0; // 使其透明\n                groupNameDisplay.style.bottom = '10%'; // 降低位置\n                groupNameDisplay.style.display = 'none'; // 再次隐藏\n\n                tags.forEach(function (otherTag) {\n                    otherTag.classList.remove('dimmed');\n                });\n            });\n        });\n    });\n\n</script>\n\n<script>\n    document.addEventListener('DOMContentLoaded', function () {\n        var tags = document.querySelectorAll('.tag-cloud-tags a');\n        var groupNameDisplay = document.getElementById('tag-group-name');\n        var currentlySelectedTag = null;\n\n        function applyDimEffect(tagToHighlight) {\n            var group = tagToHighlight.getAttribute('data-tag-group');\n            groupNameDisplay.textContent = group;\n            groupNameDisplay.style.display = 'block';\n\n            tags.forEach(function (tag) {\n                if (tag !== tagToHighlight && tag.getAttribute('data-tag-group') !== group) {\n                    tag.classList.add('dimmed');\n                }\n            });\n        }\n\n        function clearDimEffect() {\n            groupNameDisplay.style.display = 'none';\n            tags.forEach(function (tag) {\n                tag.classList.remove('dimmed');\n            });\n        }\n\n        tags.forEach(function (tag) {\n            // 鼠标悬停效果（桌面端）\n            tag.addEventListener('mouseover', function () {\n                applyDimEffect(this);\n            });\n\n            tag.addEventListener('mouseout', clearDimEffect);\n\n            // 移动端点击效果\n            tag.addEventListener('click', function (event) {\n                if (currentlySelectedTag !== this) {\n                    // 阻止默认行为并应用减淡效果\n                    event.preventDefault();\n                    clearDimEffect();\n                    applyDimEffect(this);\n                    currentlySelectedTag = this;\n                } else {\n                    // 允许默认行为，跳转链接\n                    currentlySelectedTag = null;\n                }\n            });\n        });\n\n        // 在移动端，点击页面其他部分移除减淡效果\n        document.addEventListener('click', function (event) {\n            if (event.target.closest('.tag-cloud-tags a') === null) {\n                clearDimEffect();\n                currentlySelectedTag = null;\n            }\n        });\n    });\n</script>\n```\n\n# 结语\n希望这篇文章能帮到有同样需求的人。但是本人不会写代码，只是把GPT给我写的代码原样抄上来，所以不对任何可能出现的bug负责，也不知道该怎么调试……如果按照我的步骤来，但出现了bug，就请自己加油吧！","tags":["博客"],"categories":["折腾"]},{"title":"2023小结","url":"/2023/12/15/2023小结/","content":"不记得是生病起还是疫情开始起，我的生活就失去了实感。我每度过一天都像没有度过一样。但今年按理来说应该是较为特殊的一年，因为这一年我大部分时间都在国外。然而我对所有事情都没有太深的印象。我开始翻阅今年写过的日记，发现年初说过想要多写日记，“像是为未来的失忆做准备那样、事无巨细地写下来吧”。但我现在连写过这句话的事情都不记得了。\n\n2月7日和cyx出去玩，日记记载吃了土豆泥卤粉、喝了4M咖啡。土豆泥卤粉我有印象，很是不错，但是咖啡的味道我已经忘了。聊了什么也不记得了。那天还有一件重要的事情，就是我抽了好几个扭蛋，其中有一个镜音连。我当时想着如果有机会见面的话，送给rhl。rhl现在是我的男朋友。\n\n<img width=\"400\" alt=\"扭蛋\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/4e45bbad-3c21-4489-9f1e-ce20f227ebdc\">\n\n我和rhl在英国见了很多次面，第一次在5月21日。中途发生了很多事，回过头来才发现已经交往这么久了。比较印象深刻的是他有一天（当时好像还不是特别熟）突然问我要不要一起去酒吧看欧联杯。这好像是首次正式约会。日记记载，他说手臂被蚊子咬了很痒，我就抠他的手臂，然后他突然把我的手抓起来玩。牵手的一瞬间我突然心动了一下。但这件事情也是看了日记才想起来的。还有一次是在6月14日的晚上，我们打电话聊到两点半，然后他提议睡觉的时候也不挂电话，我说这样好像情侣哦，他说想趁着我没走给我多一点体验（情侣体验卡？）。于是我们听着对方的呼吸声睡着（假的，被微信降噪掉了），第二天5点多醒来聊了两句，之后他手机没电了，才结束通话。\n\n<img width=\"200\" alt=\"通话记录\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/139e992c-2fce-42d5-9c86-8afb435c9ee2\">\n\n过了几天我们就在一起了。\n\n这段关系能成需要多方面的条件，其中之一就是我得肉身前往英国。2023年的前两个月我一直在为雅思焦虑，第一次起初没过，然后考了第二次，刚考完（2月27日）就收到了第一次复议成功的通知。口语增加了0.5分，意味着小分刚好够了。但当时第一反应是：第二次考试的两千块白花了。日记记载，得知复议成功的前一天晚上，也就是考完第二次的当天晚上，我点了安妮意大利餐厅的外卖吃。一百二十块的东西一扫而光，像是一种提前庆祝。\n\n后来收到了第二次的成绩，口语仅6分，令我百思不得其解。我第二次口语比第一次发挥好太多，和考官谈笑风生。如果我更好奇一些，我就复议了，但我忍住了。\n\n雅思之后让我焦虑的是mgfm（我在牛津和伯克利的合作导师）和研院的行政。等mgfm的邮件很令人心焦。他有一次突然去度假，隔了半个月还是一个月才回我邮件，差点错过了ddl。但是还是要为他辩解，因为他正常工作的时间回邮件是挺快的。研院的行政一开始同意我先去英国后去美国，答应给我三个月英国的资助和三个月美国的资助，但我去找她时又换了说法，说学校没同意，只是先看看。还说我去英国的话，现在办签证，只能去一个月，没有必要。我说我签证已经办好了。她大惊，问我的财产证明从哪来的，我说现在办学生签可以不用财产证明。她大怒又不能发作，只能咬牙切齿地说你这样是违规的，我说好的老师我知道了。\n\n这段时间我经常呕吐，不知道是压力大还是身体不行，但无论如何可以确定不是怀孕。似乎是从今年开始，我刷牙之后刷舌苔，会因为戳得太里面而干呕数次，但不戳那么里面我又会觉得刷不干净。不记得是谁跟我说这是否是一种变相自残，我大骇。\n\n3月5日去了闭社社聚，主要活动是喝酒和打德扑。其实我对德扑并不是那么的感兴趣，比起这个我更希望玩玩喝酒游戏，或者来点真心话大冒险啥的。但是这样未免太不健康（难道赌博游戏就健康了吗？）。结果，大家很矜持地每人点了一杯酒，只有我在吭吭喝。最后结账的时候调酒师说，你喝得多，用美团买券吧。\n\n<img width=\"400\" alt=\"闭社社聚\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/4dad9f85-1dd0-464f-94fd-a86c7e1da97e\">\n\n有点想念闭社了，希望开学再多多组织社聚。\n\n3月7日去复诊，跟医生据理力争让减药，医生一听说我要出国，连连摇头，说到了陌生环境，减药可能有风险，只让我把两颗碳酸锂都放在晚上吃。我只好作罢。其实下半年来美之后，有一段时间我托妈寄的药被卡在海关，我的药不够吃，于是我每天只吃原来1/4的药量，差不多就是本来一天吃四种药，现在我拉到四天吃，每次吃一种。即便这样也平安无事。我就想我是不是好了。但是尝试验证这件事可能会付出极大代价，所以我放弃。下次复诊是4月4日，在我的软磨硬泡之下，医生终于同意给我减一颗碳酸锂。我心情大好，带着相机去了小红书上刷到的网红地铁站——奥林匹克公园——拍海棠花。结果当天下雨，海棠花掉了很多，导致我拍到了一些滑稽的照片：\n\n<img width=\"600\" alt=\"海棠花\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/f8897220-bb87-4873-9a48-a2b586b2aa05\">\n\n3月17日我报名了吉他协会组织的编曲课，但是到现在还有两节课没上，因为我太拖延了，一首曲子到现在也没写完，就没法上课。\n\n3月24日和mj出去玩，这是他去德国之前我们最后一次出去玩。去了双风车咖啡馆，用三顿半的罐子兑换礼品。我兑了一杯咖啡、一个猫围兜和一个不知道叫什么的可以反光的带子。猫围兜有防窒息设计，如果受了太大的力，卡扣会打开，围兜会脱落。我给猫戴上之后，每过一个夜，第二天早上就会发现卡扣打开的围兜出现在地上，每晚如此，很神秘。但是白天刚给他戴上的时候，猫与围兜看似相安无事。终于有一天，猫不知道把围兜脱到哪去了，不记得有没有找到了，也可能找到了但随手放到哪里去了。\n\n4月5日去文身。其实仔细看画面是有bug的，但我不说应该没人会注意看，所以我不说。\n\n<img width=\"400\" alt=\"文身\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/058cfe3e-066c-4577-b959-58112a29d7c1\">\n\n然后就去了英国。起初住的是一个Airbnb。巴基斯坦房东令人惊异地友好，甚至承包了我每天的晚饭。但是学校方面让我遭受了很大的打击：我上课一点也听不懂。而且不是英语的问题，我每个词都能懂，但是没有办法把这些词连成句子。我觉得我负责这方面的器官受到了一些不可逆的损伤，而且这个损伤还在加重。原本只有阅读时没办法把词连成句子，现在居然听别人说话也这样了。并且经过我这一年的实验，只有比较艰涩的哲学文本或对话会让我这个样子，其他比如日常聊天或者看前端课程都不会这样。所以今年终于下定决心，想要离开学术界另谋出路。\n\n抱着这种心情我来了美国。放弃听懂任何课程之后，我的生活就变得轻松。我还发现我在和mgfm单独交流的时候是可以听懂大部分的，难道是因为我太紧张于是集中了注意力？于是我猜测这是否是注意力的问题，并且想着在美国看一下ADHD。最后因保险不包而作罢。\n\n这之后的重大事件是给mgfm坦白了我因为吃药而注意力受损的事情，以及跟导师坦白了我毕业后不想留在学术界的事情。两人都表示理解，但mgfm说他不能替我的人生做决定。没错，不过我自己也已经做好了决定。rhl说我做这个决定的时候没有考虑他，说得不错，但我的状态只有我自己知道，这件事没办法和他人商量，或者就算商量也是一样的结果。\n\n不做学术了我能干嘛呢？一个选项是仍然做学术相关的工作，比如当编辑。另一个选项是做完全不同的工作，比如转码。我很怀疑我在后一个选项上是否有足够的恒心，但是即便选前一个，我也想必会比较快乐，虽然钱不如转码多，校稿也没有写代码开心。\n\n感受到写代码的开心是因为搭了这个博客。虽然严格来说，这代码不是我写的，是ChatGPT写的，但GPT是我调教的。每解决一个细小的问题都让我欢呼雀跃，而且我似乎很擅长发现这种细小的问题……也许我更应该当一个产品经理？\n\n不过，我更想每天躺在家里然后有钱从天上掉下来。\n\n12月去了友人hlx及其丈夫在LA的家。他们这个房子基本上就是我的梦中情房，除了我不会展示太多收藏品之外（他们展示了相机、黑胶、各种摆件等等）。我的最低要求是有咖啡机、烘干机和洗碗机，并且装修不能太丑，这个房子都满足。我在他们家享受了两天小资生活，第一天喝的拿铁（含拉花），第二天喝手冲，hlx丈夫甚至买了一套两只杯子，说是形状不同，会导致风味物质的挥发速度不同，进而会导致风味的不同。让我尝一尝是否真的有不同。真的。但我只喝出一个浓一点，一个淡一点，更多的我就品不出来了。hlx说这是智商税，我大笑。\n\n我的人生目标可能就是住上这样的房子吧！不过最好是可以买下来。\n\n（LA海边非常好看！）\n\n<img width=\"600\" alt=\"海滩\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/6082cba0-ffff-4dde-8964-a0443664dd0b\">\n\n站在海边我就在想今年到底成就了些什么事。谈了个恋爱、出了两趟国，这算不算某种成就？或者下了离开学术界的决定，这又算不算成就呢？也许只能以后再复盘了。","tags":["总结","置顶"],"categories":["随笔"]},{"title":"最近下载的小玩意：Sleeve 2、巴别塔圣歌、一生足迹、Bark+短信转发器、Niagara Launcher","url":"/2023/12/07/最近下载的小玩意：Sleeve 2、巴别塔圣歌、一生足迹、Bark-短信转发器、Niagara-Launcher/","content":"\n# Sleeve 2\n<img width=\"100\" alt=\"Sleeve 2图标\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/2b0f82c3-5848-45ae-9d79-dc7711e50f3c\">\n\n平台：macOS\n\n价格：$5.99\n\n---\n\n在主屏幕上显示正在播放的音乐的小工具，支持高度自定义。没有播放音乐的时候，显示是这样的（可以隐藏，但是它默认双击打开音乐APP，我觉得很方便，便保留了）：\n\n<img width=\"600\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b812d018-c321-4ca2-8acf-b258141aa2c0\">\n\n播放音乐的时候是这样的：\n\n<img width=\"600\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/57bbcf8d-73c7-4a0c-b8c9-36d0321bb80e\">\n\n其中需要说一下这个的位置。它的初始位置不是这样的，是我强迫症，想要它和其他小组件对齐（具体而言，是没有播放音乐时，右边缘和小组件右边缘对齐；播放音乐时，左右两边都和小组件对齐）。刚才说了，Sleeve 2支持高度自定义，所以我便修改参数实现了这一点。具体参数导出如下：\n\n> https://cowtransfer.com/s/4a7da3486bcd48 点击链接查看 [ BillowingSunset.sleevetheme ] ，或访问奶牛快传 cowtransfer.com 输入传输口令 xwi0p2 查看；\n\n其实我也不知道到底有没有对齐，懒得折腾了，看着像是对齐一样就行了。\n\n# 巴别塔圣歌\n\n<img width=\"400\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/0a4daeef-aabc-4f36-94a1-b50b0b8a7582\">\n\n平台：Windows\n\n价格：¥64\n\n---\n\n为了玩这个游戏安装了虚拟机（VMWare）。虚拟机本机有点卡，有时会闪退，其他的还好，但是不做推荐了。\n\n游戏本身很精美，视觉和音乐方面都是。游玩方式很特别，需要破译不同种族（职业？）的文字。除了破译文字之外，这个游戏以解谜为主，其中甚至包括类似华容道的关卡。多的不说了，免得剧透。\n\n我目前的进度是破译了第一种文字，然后在第二个种族那里卡关了，因为需要潜行，我很不擅长这类需要把握时机的游戏（但我也很不擅长华容道，所以也可以说我in general就不擅长游戏）。\n\n总之推荐，好游戏。\n\n# 一生足迹\n\n<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/4db00e2c-17a2-431d-a3e0-0741737f360e\">\n\n平台：iOS\n\n价格：¥0（会员¥12/年）\n\n---\n\n可以将你去过的地方在地图上点亮的APP，轨迹可以连成线。效果如下（图片来自APP的示例壁纸）：\n\n<img width=\"400\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/c83bcdfe-0098-4d61-8020-3c7dc54964fb\">\n\nAPP还是非常精美的。但我太宅了，下载它之后的几天都没有出门……所以只有从照片导入的位置有零星几个小点。不过总之还是挺好看的，而且本体免费，会员也不贵。推荐。\n\n# Bark+短信转发器\n\n<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/7a0667ee-37a1-4555-b819-f9ecc3385021\">\n\n<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b981587d-e90a-41c9-a7c8-58a0e322a2ef\">\n\n平台：iOS（Bark）、Android（短信转发器）\n\n价格：¥0\n\n---\n\n是看了少数派的[这篇文章](https://sspai.com/post/84621)从而下载的。我只实施了文章的前半段，也就是安卓手机短信转发至iPhone的部分。\n\n我的备用机是冷门的Sony Xperia Ace II，目前插着国内卡接收验证码用。然后我之前登录美区Apple ID，总是要短信验证（最近不知道为啥突然不用了），而我基本上总是刚好不在家的时候需要登录美区Apple ID，然后经常忘记带备用机出门，所以就没法登录。而且就算带了备用机，要把它拿出来看短信也很麻烦（懒）。这两个APP解决了这一痛点。\n\n具体的设置请看少数派的文章。实现效果如下：\n\n<img width=\"400\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/9cac0cca-646e-47af-a293-744bed8375aa\">\n\n其中，手机图标来自[iconfont](https://www.iconfont.cn)，URL是[这个](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/ee922467-016d-4407-8236-58612d3d4021)。\n\n# Niagara Launcher\n\n<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/3a7db44e-ef77-4e85-a6cd-0113c72bdc31\">\n\n\n平台：Android\n\n价格：¥0（订阅$9.99/年或$29.99买断）\n\n---\n\n订阅价格昂贵的启动器。我本来想支持正版的，但是那个付款界面一直显示错误啥的，我无奈只好下了盗版……\n\n虽然现在没啥人用第三方启动器了，但是我这个索尼备用机的默认界面实在是有点丑。我一开始在Play商店乱逛的时候看到了把安卓手机变成iOS样式的APP，于是试了一下，发现广告很多，而且在一些微妙的地方和iOS有差别，从而整体上显现一种劣质感。所以在好友mj的推荐下，下载了Niagara Launcher。\n\n折腾完了之后发现少数派也写过[相关文章](https://sspai.com/post/65279)，所以我在此就不多介绍了，只放几张效果图。\n\n主界面（播放音乐时）：\n\n<img width=\"400\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/9e2d5e43-615a-480e-8ffb-1a6efe5e0cb9\">\n\n搜索界面：\n\n<img width=\"400\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d6fde824-f6e4-4eb2-8225-73f53035b48f\">\n\n最喜欢的！字母导航栏！滑动手指会有极顺滑的体验：\n\n<img width=\"400\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/2c070d48-526e-4b84-8864-7a917b785f35\">\n\n这个启动器的缺点就是太极简了，主屏幕只能放最多8个APP，对我来说刚好，但对于平常需要使用大量APP的人士来说就不合适了。所以出于相同的原因，不推荐主力机使用这个启动器。但是备用机就是拿来折腾的！所以非常推荐！","tags":["工具","游戏"],"categories":["折腾"]},{"title":"购物分享（3）","url":"/2023/12/04/购物分享（3）/","content":"\n竟然，连发三篇购物分享。回国之前一定不能再买了。\n\n# MUJI的一些衣服\n\n<img width=\"600\" alt=\"MUJI\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/2ae7af43-29a6-4ba0-9525-e829c7faf266\">\n\n价格：如图\n\n来源：[MUJI USA官网](https://www.muji.us)\n\n---\n\n主要是为了买第二件，在国内没买到的大棉袄子。第一件摇粒绒套头衫是凑单的，不记得是因为两件打折还是两件包邮了，总之不是重点。\n\n<img width=\"400\" alt=\"大棉袄子\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/5a453114-4b8f-4222-ad5f-942d5e1aa249\">\n\n（没有全身镜，将就一下。）\n\n大棉袄子和我想象的几乎完全一致，就是袖子有点长。衣长倒是差不多合适，可能稍微长了一点，但是我买这件基本上是为了搭配长裙的，所以外套长一点也无所谓。\n\n<img width=\"400\" alt=\"摇粒绒\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/f1f2281b-92a2-4f64-93e4-f42db2d77426\">\n\n摇粒绒这件版型居然很好，穿上像泰迪熊很可爱。就是颜色比较普通，不过不是这个色就不像泰迪熊了吧！\n\n# Adidas的一些衣服\n\n<img width=\"600\" alt=\"Adidas\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/e150f8d3-aeff-4f26-a5e6-8bedd560f82b\">\n\n价格：如图\n\n来源：[Adidas官网](https://www.adidas.com/us)\n\n---\n\n买前两件是因为便宜，后一件是因为好看。结果到手一试，都挺好看的。\n\n<img width=\"400\" alt=\"帽子\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/f9b29ce9-21a5-4599-a006-e9bda9a217ae\">\n\n帽子颜色很可爱！冷色调的粉色帽身搭配橙色的LOGO，居然不显得很突兀。我就是为了颜色才买的。帽型就是不出错的那种，也判断不出是否好看，毕竟我基本上戴所有帽子都合适（得意），所以没办法看出这顶帽子是否衬人。\n\n无论如何，它挺便宜的，满意。\n\n<img width=\"400\" alt=\"背心\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/206e0729-62c1-4b00-bd9a-d459b8c9a0cf\">\n\n这个背心，我发这张照片到一个大群里，群友都说我瘦了，还问我要链接！但我大概没瘦，所以是这个背心和拍照角度显瘦。\n\n这个背心国内卖两百多呢，所以如果人在美国的话可以买一件试试，确实挺好看的。明天准备穿着去爬墙。\n\n<img width=\"400\" alt=\"卫衣\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/293bc07b-c0f0-425d-922f-a04ef7b048ff\">\n\n一眼就被吸引住了的蓝色卫衣！这个蓝好特别！立刻花大价钱买了回来。到手一看，居然是加薄绒的，惊喜（因为感觉加一层绒会增加一些成本）。这个款式比较短，下摆又是收的，对我来说有点太时尚了，可能走运动风的时候可以穿。但是，我的原则是长裙搭一切，所以我认为它也可以搭长裙！特别是由于我太矮了，穿着这件衣服不会像模特那样露肚脐，所以穿一些中腰长裙应该也不会露肚脐，重大利好。\n\n唯一的缺点就是有点贵……\n\n# AirTag\n\n（都知道长啥样就不放图了）\n\n价格：$77.16（含税）\n\n来源：[Amazon](http://amazon.com)\n\n---\n\n去年过生日的时候，我的好友mj送了我两个AirTag，是从第三方店铺买的，应该是别人刻了字但不要了的。他本来选的是刻有“🐯”“🐱”还是啥的两个Emoji的AirTag，结果发过来的上面刻着“❤️至死”和“不渝❤️”。要不是他是gay，我都感动哭了，立刻想嫁了（不是）。之后他想去店铺追责，竟发现店铺倒闭了！\n\n这都是题外话了。这次我自己买了4个全新AirTag，把三个行李箱里各放了一个。剩下一个准备放钱包，然后至死不渝那两个，准备一个藏在自行车里，一个戴猫脖子上。为此还要购买相关的自行车配件和猫项圈。\n\nAirTag刚出来的时候我还想傻子才会买，结果转眼间就真香了，唉！\n\n# MOFT iPad mini保护套、笔套、磁吸贴纸\n\n<img width=\"600\" alt=\"MOFT\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/6b71109a-8497-4a4a-aed7-4920b96bab40\">\n\n价格：如图\n\n来源：[MOFT官网](https://www.moft.us)\n\n磁吸贴纸是凑单买的，因为是一次性的，准备拿回国再用，所以暂时无法测评，只能测评另外两样。\n\n这个保护套，它厉害了！可以通过不同的折叠方式实现不同角度的放置，甚至可以抬高iPad并将其立起：\n\n<img width=\"400\" alt=\"保护套/支架\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/fce1a227-b487-47eb-b0eb-6efe53b4b110\">\n\n我无法描述是怎么折的，有兴趣的朋友可以去官网看看。这是国内的品牌，淘宝也有官方店，比国外官网便宜很多。我是急需（不想iPad裸奔）所以才在国外买了。以后我可能想买它那个桌垫，不过感觉宿舍桌子放不下，再说吧。\n\n笔套相对而言就比较普通了。它的好处是增强了磁力，让Pencil可以吸在iPad的背面。不过吸在背面不就无法充电了吗！尝试把它吸在侧面，不是很稳当，而且也并没有充上电。所以我觉得它的使用场景可能是，要带出门的时候把笔吸到背面防丢，然后坐着不动的时候把笔从套子里取出来充电？未免有些太麻烦了吧？\n\n总之，保护套，推荐购买；笔套，不推荐。\n\n# 苏糖酸镁、甘氨酸镁\n\n<img width=\"600\" alt=\"iHerb\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/3947b176-bc6c-408f-bce1-8a769ad24d92\">\n\n价格：如图\n\n来源：[iHerb](https://www.iherb.com)\n\n---\n\n小红书上看到的，据说早上吃苏糖酸镁可以改善认知、思维等等，晚上吃甘氨酸镁能提高睡眠质量。我就买来尝尝。\n\n结果好像没什么用啊！\n\n其实是能感觉到有一点用的。早上吃了苏糖酸镁之后会比平常精神一点，但是持续时间不长，如果不喝咖啡的话，下午就想睡了。甘氨酸镁的作用时有时无。我的睡眠差主要差在质量差而不是入睡困难，就是我会做很多梦，睡很久（10+个小时），但是醒来还是很累。吃了它之后，有几天我会做梦比较少，早上也有动力起床，但也有几天我还是照旧。所以说好像没什么用。\n\n但也许是长期吃才有效？买都买了我就多吃一吃吧……\n\n# Butora攀岩鞋\n\n<img width=\"400\" alt=\"攀岩鞋\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/6ce0922d-d8c3-4446-a5e5-d9c0b923b07e\">\n\n价格：$129.26（含税）\n\n来源：[Amazon](http://amazon.com)\n\n---\n\n我买的是Butora Acro Comp这个型号，尺码是6 Narrow。之前买了一双5码的Butora，也能穿进去，就是紧得我难受，就退了买了这双。\n\n刚刚点进去看发现同一尺码又降了十几刀……难受。\n\n攀岩队的群友推荐的是Spider这个型号，但是亚马逊没有，我又急着要穿，想买个送货快点的（基本上就只有亚马逊了）。所以买了这一款。我个人喜欢穿鞋头尖一点的鞋，因为我不太擅长在小点上换脚，鞋头尖的话稍微好换一点。不过鞋头尖的鞋一般也比较aggressive，我是无所谓啦。\n\n群友还说Butora的鞋很适合亚洲人的脚后跟，确实，我的脚后跟基本上充满了鞋后跟，只有一点点空隙。不过我的那双Futura女款也差不多是这样，所以没感觉Butora比La Sportiva更适合亚洲人很多。\n\n穿着爬了一次墙，感觉没有Futura（35码）紧，不过也挺紧的（？什么废话）。Futura是我每爬完一条线都要马上把鞋脱下来，否则就痛得要死的程度，Butora这双是我可以不脱下来，但是这样也会很不舒服的程度。所以某种意义上算是刚好？\n\n# 其他\n还买了久仰大名的Fulton鸟笼伞，但是它一直running late，我现在好像不太想要了，应该会退掉。其他还买了花王的洗手液，挤出来是猫爪的形状，很可爱。再其他好像就没什么了。","tags":["工具","服饰","运动","健康"],"categories":["购物"]},{"title":"购物分享（2）","url":"/2023/11/25/购物分享（2）/","content":"\n购买的物品居然又攒到了一篇购物分享的量，这才过了多久！\n\n# Anker充电座、无线充电宝\n\n价格：充电座$112.46；充电宝$37.5\n\n来源：[Anker官网](https://www.anker.com)\n\n---\n\n一直很喜欢Anker这个品牌，买了不少他们家的产品。[上次](https://greendolphindance.com/2023/11/16/购物分享（1）/)购入无线充电座之后，觉得充电太慢，就又买了Anker这个，思前想后还是把原来的退了（如果以后有需要，再买一个Anker！）。又因为两件打折，又凑了一个无线充电宝。但这样一来我就有三个充电宝了，带不回国，刚好男朋友又来了，便把一个旧的Anker送给了他。完美解决！\n\n## 充电座\n\n<img width=\"400\" alt=\"Anker充电座\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/df20610b-c851-431c-93aa-54f5681441dd\">\n\n第一感觉：非常精致非常重，设计很巧妙。刚买回来的时候爱不释手，频频把玩。它不用的时候可以收成一个立方体随身携带：\n\n<img width=\"400\" alt=\"Anker充电座（折叠时）\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/91f4fb87-c904-4bfb-93b4-5d14db79f6bc\">\n\n用的时候再打开。斜面用于充手机，斜面后方的平面用于充AirPods，侧边伸出的部分用于充Apple Watch。连接方式是C to C，送一个充电头。\n\n充电当然不如有线快充快，但是比我之前买的第三方那个还是快多了。而且这个东西的使用场景就是没事的时候贴上去放着，所以我也不是很追求充电速度。 \n\n我的朋友jw想买Belkin的这一款充电座：\n\n<img width=\"400\" alt=\"Anker充电座（折叠时）\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/28e1f67f-b0c5-4a52-9a30-775bd87084c8\">\n\n但我觉得这个圆圆的好丑啊！不如Anker方方正正的好看！\n\n总之这个东西虽然贵，是否物有所值见仁见智，但是我还是非常满意非常喜欢。预计它将会陪伴我很多年。\n\n## 充电宝\n\n<img width=\"400\" alt=\"Anker充电宝\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/adda7ed3-d88a-4687-8126-92614564d4fa\">\n\n第一感觉仍然是非常精致，虽然是凑单随便买的，但是品质在线。拿来充了几分钟，有一个不满意的点是它比我的12 mini大一点，充的时候并非我想象的那样三边对齐，这一点不如原装的无线充电宝。除此之外应该是没有缺点的。\n\n# 泡泡骚\n\n<img width=\"400\" alt=\"Anker充电宝\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d7fe5464-5264-4250-bcff-be747f11d854\">\n\n价格：$24.8（含税）\n\n来源：[Amazon](https://www.amazon.com)\n\n---\n\n购入了久仰大名的泡泡骚！因为比国内便宜大概五十块钱。买的是透明的，因为感觉别的颜色和花纹都好丑。\n\n第一感觉还是好精致，但是又说不上来哪里精致，可能是价格比较精致？？就是我找不到任何可以让它掉价的东西，比如塑料接缝或者啥的。但值不值25刀还是见仁见智吧，我个人觉得挺好的。\n\n我是裸机，没有Magsafe壳，吸附的效果也很不错。基本上只要不狂甩都是不会掉的。取下来也很方便。直接拔比较难拔下来，技巧是抓住泡泡骚往平行于背板的方向挪，这样很容易就可以扯下来。\n\n唯一的不满就是无线充电的时候要把泡泡骚取下来，好麻烦啊（？）。但是不取下来是不可能的吧！所以算了！\n\n# iPad mini（官翻机）\n\n（大家都知道长啥样就不拍图了）\n\n价格：$609.27（含税）\n\n来源：[苹果官网](https://www.apple.com)\n\n---\n\n把手上的iPad air trade in，换了一个iPad mini。看起来是一次消费降级，实际上体验感飙升。我平常不太用iPad看视频等，所以大屏幕对我没有啥用处。倒是会看漫画，不过其实iPad mini的屏幕尺寸更接近于纸质漫画的页面大小。然后mini显然更加便携，这使得我平常甚至可以提一个小袋子出门，而不用背书包。等回国了，这个iPad甚至可以装进一般大小的皮包，刚好我平常喜欢背皮包。\n\n这台机器没有什么缺点，不过苹果员工的业务能力倒是需要培训一下。我由于买的是官翻机，trade in的钱不能直接抵扣付款，需要转换成礼品卡。我打电话询问，苹果员工一开始告诉我，如果我买了iPad mini，那礼品卡的钱可以作为退款退回到我的信用卡里。而当我拿到礼品卡，想再打电话询问如何操作时，另一个员工却告诉我礼品卡不可能折现，并且只能在美区使用。所以我得到了325刀用不出去的钱……于是立马买了一副AirPods pro二代，花费$249，但它又送了我$50的礼品卡……你妈的，套娃啊！我还买了小火箭（此前一直蹭朋友的用），但其他的真不知道往哪花了。我跟男朋友说，如果你下一台电脑换MacBook，我就把礼品卡里剩的钱都给你，然后在美国买了电脑人肉背回国。但是我们研究了一下午，感觉换Mac并不是最佳选择。所以可能最终这个钱还是花不出去。气死我啦！\n\n# 森永Hi-Chew（嗨啾）水果软糖\n\n<img width=\"400\" alt=\"Anker充电宝\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/80f3bad1-f4f3-497d-ace5-518b05971d2d\">\n\n价格：$6.49（两包，含税）\n\n来源：[Amazon](https://www.amazon.com)\n\n和男朋友及其友人攀岩后去吃了一家拉面店，吃完后服务生给我们分发的糖。浓浓的水果味，很好吃，回来之后立刻下单了。\n\n两包里一包是经典口味，另一包是热带口味。经典包括青苹果、葡萄、草莓三种口味，热带是菠萝、芒果、橙子，不过后者我还没拆，不知道味道。\n\n总之好吃好吃好吃，我昨天连续吃了一个小时，终于醒悟过来，停止了进食。一包不多，需要省着点吃！\n\n淘宝搜了一下，发现国内也有卖，可能有点小贵。感兴趣的朋友不妨一试。\n\n# GPT4\n\n价格：$20/月\n\n来源：[ChatGPT官网](https://chat.openai.com)\n\n---\n\n刚需，最近阅读障碍愈发严重，需要拿它来辅助读文献。虽然让它重构论证有点超过，但在文章里找东西、给一些总结等等，还是挺好使的。尤其是找东西，比肉眼找快太多了。\n\n除此之外还可以用来解读塔罗占卜牌面什么的（咦）。\n\n# 预告\n\n其实最近买的东西不止可以发一篇购物分享，甚至可以发两篇……除了以上物品以外，我还买了但是尚未送到的东西有：\n\n- Butora攀岩鞋\n- Fulton的鸟笼伞\n- 保健品（苏糖酸镁、甘氨酸镁）\n- MOFT的平板支架等\n- 四个AirTag\n- 阿迪达斯的一些衣服\n- 无印良品的一些衣服\n\n列出来发现也太多了！？而且除了这些可能值得一写的东西之外还买了攀岩镁粉、沐浴露、洗手液、一些菜啊等等，这个月可以说是超高消费了！但是我最近好像只有拆包裹的时候才会很快乐（悲）。","tags":["工具","食物"],"categories":["购物"]},{"title":"购物分享（1）","url":"/2023/11/16/购物分享（1）/","content":"\n最近买了不少东西，一是黑五到了，二是突然冒出来了各种需求……所以分享在这里。没有广告！\n\n# 阿玛尼5G唇釉\n\n<img width=\"400\" alt=\"Armani\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/6cd8cea3-6900-4786-b759-1b9230f8b76e\">\n\n\n价格：$87.75（三支）+$9（税）\n\n来源：[Armani官网](https://www.giorgioarmanibeauty-usa.com)\n\n---\n\n这个在国内被叫做5G唇釉，不知道为啥。英文名是Ecstasy Mirror Lip Gloss。我买了三个色号：400、502、503。\n\n## 400\n<img width=\"400\" alt=\"400\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/5a120e54-6b01-4208-8472-c17c164e6f02\">\n\n算是正红色？买之前在网上做功课，说是血浆红，但上嘴有点发玫。显白，我素颜涂都显得很白，但我没有特别多显白的需求。看全脸感觉素颜涂这个颜色显得特别煞有介事（？），有点太超过了，还是要带妆比较好。\n\n这一支的颜色我是不太满意的。因为平常我基本涂裸色，涂大红色的场合比较少，所以更想买一支拥有了就一劳永逸、不用买其他大红色口红的产品。但这个，就有点玫红，不是那种纯正大红色……所以回国了看看能不能出掉吧。\n\n## 502\n\n<img width=\"400\" alt=\"502\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/329a4d88-49ac-4099-a65c-2ee345b67edb\">\n\n好看！比503（见下文）更偏粉紫。我是素颜涂的，可以看出来不是很衬肤色，素颜看起来有一丢丢荧光，但是带妆涂肯定很美！\n\n买之前做功课说是樱花粉，实际上嘴也差不多是这个颜色，所以不错！\n\n## 503\n\n<img width=\"400\" alt=\"503\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/c5c6cea5-9a09-4959-94c8-e887b2245536\">\n\n\n三支里最喜欢的一支。比502偏红（橘？）一些。虽然不是那种显白型但是感觉素颜和带妆都可！带妆涂是这样：\n\n<img width=\"400\" alt=\"503带妆\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b6945c5e-7b68-4d16-8406-bef01de8336e\">\n\n（我的马赛克是不是很精妙！）\n\n感觉这两张照片，不同光线下颜色有点不同，但大致就是那么个色吧！总之是挺好看的！\n\n## 赠品\n买唇釉送了两个香水小样，红色的Si Passion（区别于粉色的Si），还有ADGH Parfum：\n\n<img width=\"400\" alt=\"香水小样\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/a9692bd4-6342-47d1-8f9c-72a6ecd7a0e2\">\n\n两个都挺好闻的。Si是我一直喜欢但没买正装的（一直薅小样），是甜甜的有点女人的香味，ADGH是清新的味道，两者都不是很重。我没有很多形容香水的词汇量，但是这两个都还不错！\n\n# 戴森直板夹（翻新）\n\n<img width=\"400\" alt=\"直板夹\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/dedc7921-a7ed-4fd0-bdda-1925714dd407\">\n\n价格：$199.99（商品）+$20.50（税）\n\n来源：[NORDSTROM RACK](https://www.nordstromrack.com/?utm_source=NR_transactional&utm_medium=email&utm_campaign=RACK400Shipcfm&utm_channel=email_tran_ret_p&utm_term=744309&utm_content=20231115_tlogo)\n\n---\n\n下血本了！但也比淘宝自营店的官翻机（¥1890）便宜了几百块。关于这个东西，我根本没做功课，纯属冲动购买。所以拿到手发现它除了可以插着电用之外，还可以充电后无线使用，还是蛮惊喜的。\n\n拿到手迫不及待想试一试，结果没电。我就把它插在充电座上去做别的事，过了大概一个小时再去看，已经充满了。续航还没测试过，也懒得测试。而且要测试的话，把它一直开在那里还挺危险的（？）。\n\n充好电之后就可以试啦！调到了最低档（330华氏度），大概二十秒就加热完成了，很快！浅卷一个刘海：\n\n<img width=\"400\" alt=\"直板夹效果\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/addcdf93-ca2b-4ba8-882a-014b6f0aa081\">\n\n昨天没洗头，太油了，不好意思。一个初步印象是造型很快，不像我其他某些直板夹一样要夹好几次才能达到同样的卷度。此外，我感觉这个直板夹不会让头发被夹了之后变得毛躁，这可能也是戴森的卖点之一。但除此之外，好像没啥特别的。\n\n我不知道快速加热、快速造型、防止毛躁在技术上是否比较难实现，所以不知道这份溢价是否值得。但戴森总归是一个一劳永逸的选择。而且这是final sale，不能退换！所以我就既来之则安之了。明天拿给男朋友试下（？）。\n\n# 三合一无线充电座\n\n<img width=\"400\" alt=\"充电座\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/e933b984-3ab9-41f9-9376-468b8c6442c1\">\n\n价格：$19.99（商品）+$2.05（税）\n\n来源：[Amazon](https://www.amazon.com)\n\n杂牌的。之所以没在国内买，是因为价格差不多的情况下，国内的大多有点丑（比如我这个上面只有一个圈圈，但国内厂商会把丑丑的品牌名和LOGO印上去），而且我有点急着用，所以就买了。\n\n这个有圈圈的板子是充手机的，手表可以挂在上方进行充电，底座上还有一个突出用以充AirPods。很方便，出门只要带这一个东西就行了。缺点当然就是充得慢，还有一个小缺憾是AirPods实际上是有线充电，就没有那么优雅。\n\n<img width=\"400\" alt=\"充电座效果\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/e999b72c-e738-42f4-9632-070b8579783e\">\n\n除此之外还买了苹果官方推荐的Anker的三合一充电座（再次下了血本），是快充，而且耳机似乎也是无线充。等到货了补充到这里。准备回头一个充电座放家里，另一个充电座放学校，就不用带来带去的。工作了之后就单位放一个，租的房子里放一个，完美（想得好远）！\n\n# 首饰\n<img width=\"400\" alt=\"首饰1\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/0c45a3ec-f848-4168-a8f3-40c0cba056d3\">\n\n价格：找不到了！\n\n来源：应该是[SELENICHAST官网](https://selenichast.com)\n\n---\n\n官网账号里找不到这个订单，所以要么不是在官网买的，要么是作为Guest结算的，没有计入我的账号。诡异的是搜邮件也搜不到这个订单。所以不记得价格是多少了。\n\n买了蝴蝶耳坠、蝴蝶项链，还有一个塔罗牌主题的项链（命运之轮）。都很精致！但是塔罗牌项链意外地大，可能需要精心搭配一下。\n\n因为太满意所以又下了一单！\n\n<img width=\"400\" alt=\"首饰2\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/c27bcb9d-a068-4118-8e1a-732b8bfb06cf\">\n\n感觉都挺好看的，都想买！最终精选了三样。最期待那个星星月亮的手链！\n\n# 一些衣服\n\n## Theory牛仔裤\n\n<img width=\"400\" alt=\"牛仔裤\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/86aeda6e-196d-482e-afcf-11396170ef7a\">\n\n价格：$64.99（不含税）\n\n来源：[SAKS OFF 5TH](https://www.saksoff5th.com)\n\n---\n\n版型、做工、颜色都堪称完美的一条牛仔裤！原价$215，断码打折，火速购入最小码（24），感觉血赚。颜色大概这个样子：\n\n<img width=\"400\" alt=\"牛仔裤细节\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d2e9a813-8c08-40f6-bd49-a4c111ecf280\">\n\n缺点就是吃饱了饭腰稍微有一点紧。不过我可以忍。\n\n## Sam Edelman及膝靴\n\n<img width=\"400\" alt=\"及膝靴\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/af23d373-4623-4ab5-860e-0b105adbf3f0\">\n\n价格：$55.98（不含税）\n\n来源：[SAKS OFF 5TH](https://www.saksoff5th.com)\n\n---\n\n原价$225，又被我捡了便宜了（不是）。因为不能退换，Final Sale就像是一场赌博，还好我裤子和鞋子都赌赢了。我不太穿迷你裙，但配稍微长一点的裙子也非常好看。颜色很特别，而且是真皮，很爱！\n\n图上的裙子也是我这一波一起买的，Tommy Hilfiger的皮裙，$~~89~~19.97。这一个比较失败，因为没仔细看详情，导致腰买大了一圈！其实还是可以穿的，它可以卡在屁股上不掉下去，而且上面似乎有两块固定皮带的布料，但是就是有点难受。所以没有拍特写照片。\n\n总之，虽然有得有失，但下次Final Sale我仍然必参加！\n\n# 新秀丽行李箱\n\n<img width=\"400\" alt=\"行李箱外观\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/440ff90f-8cc7-4052-b241-2cf056ec3e0c\">\n\n价格：$88.99（商品）+$9.12（税）\n\n来源：[新秀丽官网](https://shop.samsonite.com)\n\n---\n\n原价$159.99，是谁又捡漏了呀！\n\n买行李箱的起因是发现回家的航班可以托运两个大箱子。我手上本来有一大一小两个箱子。然后就想，反正我要寄东西回去，不如再买一个大箱子，把小箱子装满东西寄回去，然后坐飞机的时候托运两个大箱子。多么完美的计划（消费借口）！就是不知道我妈看到会不会杀了我，家里已经有好几个行李箱了。\n\n刚拿到手拖着它上楼，轮子的顺滑令我惊异。比我用过的任何行李箱都滑（当然，我并没有用过高端行李箱）。箱子的内部如图所示：\n\n<img width=\"400\" alt=\"行李箱内部\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/a143b449-0c26-4d1b-bc02-7e25d02a723f\">\n\n就是一个普通行李箱的内部，没啥特别的。但总之人民币几百块买个新秀丽的大箱子也还蛮划算的！\n\n# 其他\n\n最近雀魂和魔法少女伊莉雅联动，氪了不少，抽到了美游（和那个男的），买了美游皮肤，美滴很！但是还是很想要伊莉雅TT。\n\n还托表妹买了麦当劳猫窝，不过暂未送到我家，无法测评。等强子用上再来写！","tags":["工具","美妆","服饰"],"categories":["购物"]},{"title":"最近下载的小玩意：Input Source Pro、Maccy","url":"/2023/11/16/最近下载的小玩意：Input-Source-Pro、Maccy/","content":"\n# Input Source Pro\n\n<img width=\"100\" alt=\"ISP图标\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b2ef0be9-c837-4720-af51-59e3e159a737\">\n\n平台：macOS\n\n价格：¥0\n\n---\n\n这是一个输入法管理应用，主要功能有二：（1）在切换输入法或切换应用时显示当前的输入法；（2）为每个应用指定不同的默认输入法。由于我使用的系统已有类似功能（1）的功能（如下图），我只开启了功能（2）。\n\n<img width=\"185\" alt=\"原始输入法切换提示功能\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/c2d577f8-0e5d-4e27-8087-0b8e503bca99\">\n\n但还是介绍一下（1）吧。在长按鼠标左键、切换输入法或切换应用（以上均可选）时，光标上方、应用右下角或屏幕右下角（以上均可选）会出现一个小方框，提示正在使用的输入法。如图所示：\n\n![功能（1）示例](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/8ca39f20-7587-4330-974a-be7fa57efbfc)\n\n也可以调这个方框的颜色、大小啥的，比较好的一点是支持夜间模式。但是从图上也可以看到，这个功能和系统自带的功能有重复，于是我就把它关了。\n\n接下来是（2）。功能的使用很简单，如图所示：\n\n<img width=\"780\" alt=\"功能（2）示例\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/0a7ca8a2-824e-4e6b-b8d8-9d1b02dd35c6\">\n\n这不就是我梦寐以求的功能吗！功能比较一目了然，就不多介绍了，感兴趣的朋友去下载看看吧，目前还是免费的。\n\n# Maccy\n\n<img width=\"100\" alt=\"Maccy图标\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/379dda6a-de30-4da3-b8c6-c2444f58f883\">\n\n平台：macOS\n\n价格：¥0（这个APP的付款机制是任意选一个价格付款，我就选了0元，白嫖了）\n\n---\n\n简洁、没有多余功能的剪贴板管理应用，支持搜索。呼出的快捷键是Shift+Command+C。\n\n剪贴板管理应用我试过挺多的，但名字都忘了。我的需求很少，只需要能够记忆历史剪贴板内容，再加一个搜索功能就好了。也因为需求少，我希望应用免费或比较便宜。另外，外观风格和系统能够融合是加分项。市面上大多数剪贴板管理应用都花里胡哨的，好多功能我用不到，又丑，所以一直没有找到合适的。然后我就发现了Maccy，它完全符合我的需求。它呼出的界面是这样子的：\n\n<img width=\"781\" alt=\"Maccy界面\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/82670058-f210-4c84-890c-446a6e701c14\">\n\n和系统风格很匹配吧！这其实是我选择它的最大原因。\n\n总之，这个小玩意挺好用的，感兴趣的话可以试一下。","tags":["工具"],"categories":["折腾"]},{"title":"最近下载的小玩意：iBar","url":"/2023/11/04/最近下载的小玩意：iBar/","content":"\n<img width=\"100\" alt=\"logo\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b86e5392-8728-4be4-aabe-f58f1dfbc251\">\n\n平台：macOS\n\n价格：¥0\n\n下载地址：App Store\n\n---\n\n因为平常使用的小工具太多（……），我的电脑顶上那一栏的图标基本上是满的。然后打开某个APP时，顶栏左边的菜单项就会把右边的图标挤没。有时候要点图标，还得返回到桌面再点，很麻烦。\n\n我一直想解决这个问题，但没想出来可以怎么解决。直到我随便点了一篇微信推给我的公众号文章，里面提到了这个工具。\n\n使用很简单：安装这个APP，做好必要的授权，然后配置。我的配置是这样的：\n\n<img width=\"860\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/f75345c1-cd16-41bc-bc1d-96a69b1a208b\">\n\n于是平常的时候，菜单栏的图标是全部隐藏的，只有少量图标（包括iBar的图标）和日期时间等显示。点击菜单栏空白处的时候，所有图标会展开显示在下方，如图所示：\n\n<img width=\"1439\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/ac917719-cdbf-4088-ab79-f40a7902c997\">\n\n如果点击展开的栏中的某个图标，该图标会短暂地显示在顶栏中，但过不了多久就会消失。不知道这个特性有什么意义。\n\n一个实用功能是，你可以选择始终显示在顶栏的图标。比如Wi-Fi、蓝牙、耳机等，设置成始终显示就比较方便。设置方法是在图标上右键—偏好设置—菜单栏布局：\n\n<img width=\"860\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b5f28f6f-45b7-4b59-b466-2e0e41dc45bd\">\n\n效果如下：\n\n<img width=\"442\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/6cbb718a-1cf5-45cf-b572-d6c05ee41141\">\n\n暂时还没发现这个APP有什么大缺陷，除了展开的栏中的图标不能改顺序，但我好像没这需求。再就是这个APP本身是一个蛮丑陋的解决方案，但我好像想不到更好的。","tags":["工具"],"categories":["折腾"]},{"title":"最近下载的小玩意：Visual Studio Code","url":"/2023/10/24/最近下载的小玩意：Visual-Studio-Code/","content":"<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/4900959c-0d87-4978-a5c3-6d2e66b1ac5c\">\n\n\n平台：Windows、macOS、Linux\n\n价格：¥0\n\n下载地址：[官网](https://code.visualstudio.com)\n\n---\n\n终于，我还是用上了VS Code。这应该不算小玩意了吧……毕竟功能还挺多的。但是为了维持这个系列，还是叫它“小玩意”吧。\n\n[上篇小玩意](https://greendolphindance.com/2023/10/17/最近下载的小玩意：Typewriter/)说没有用VS Code的理由是已经有了Sublime Text和XCode，不想再下一个写代码的应用，但是今天一想，我所有的东西都在VS Code里写不就行了吗？这样岂不是能够把工具更精简。于是配置好VS Code之后，就卸载了Typewriter、Sublime Text和Skim（用来搭配Sublime Text进行预览的）。XCode没删，因为莫名感觉之后还会用到（？）。\n\n下面我分Markdown和LaTeX两方面来介绍VS Code的配置方法和使用体验。\n\n# Markdown\n\n## 配置\n\n我参考的是[这个教程](https://zhuanlan.zhihu.com/p/56943330)。需要下载Markdown All in One和Markdown Preview Github Styling两个插件。下载好后，书写Markdown文档会有相应高亮，点击工作区右上角的这个图标：\n\n<img width=\"19\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/a9272159-0c34-4151-8de4-4b08e9bf49fa\">\n\n可以显示预览。\n\n## 和Typewriter对比\n虽然[上篇小玩意](https://greendolphindance.com/2023/10/17/最近下载的小玩意：Typewriter/)里没写，但是我在使用过程中发现了Typewriter的一个最大缺点：工作区和预览的位置不同步。就是说，虽然预览区和工作区可以同步滚动，但是那个位置对应不是很精确，有时候工作区滚到的位置上的文字，在预览区甚至没有出现。所以我经常需要单独滚动预览区，以把位置对应好。VS Code在这一点上就做得好太多。\n\nVS Code还有一个优势，就是预览的渲染速度非常快，甚至和Typora不相上下。后者是所见即所得，更需要快速的渲染，所以对于VS Code能做到Typora的速度，我是很惊奇的。就感觉好用心的一款产品啊……相比之下Typewriter就慢得多。\n\n我在[上篇小玩意](https://greendolphindance.com/2023/10/17/最近下载的小玩意：Typewriter/)里介绍了Typewriter的一些缺点，接下来我会逐一列举VS Code在这些方面的表现。\n\n首先，关于FrontMatter，VS Code显然不会出现任何错误，因为人家的预览里压根就不显示FrontMatter……其实我觉得还是显示了好一点，至少把标题写出来吧。\n\n然后，关于Typewriter把代码里的注释显示成标题格式的bug。首先复习一下Typewriter里的显示：\n\n<img width=\"1221\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/39bbcb60-06c2-42f1-a73f-e63cea15548c\">\n\n可以看到注释“# scripts loaded in the end of the body”在工作区里显示的格式和下方的标题“# 订阅”相同。\n\n相反，VS Code仍然不会出现任何这样的问题，因为它的工作区压根就不会显示标题格式。它除了高亮以外啥也没有：\n\n<img width=\"1310\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/38bd744b-f5b6-43cb-bf98-a9dab17839d8\">\n\n其实我觉得啥也没有挺好的，反正有高亮，而且格式啥的在预览区都会显示出来。不过这个见仁见智吧。\n\n关于目录，首先似乎需要装一个叫Markdown Preview Enhanced的插件，然后预览区右上角会显示一个目录图标，点击就可以展开目录。虽然不能固定在边栏，不如Typewriter直观，但也还行。\n\n# LaTeX\n\n## 配置\n\n参考的教程是[这个](https://zhuanlan.zhihu.com/p/166523064)。需要下载LaTeX Workshop这个插件。然后在JSON文件中加入配置代码。其中，我相较于教程做了一点修改，把自动编译改成了onSave。\n\n## 和Sublime Text对比\n\n一眼看去，二者最大的区别就是VS Code内置了预览功能，而Sublime Text的预览功能需要通过Skim等外部应用实现。这应该有利有弊，因为我看的教程里有教如果有需要的话，怎么从内部预览切换到外部预览。但看了一下，我大概用不到。\n\n另一个区别在于目录。Sublime Text的目录是直接显示出来的，而VS Code要点击最左边那一栏的“TeX”图标才能看到目录，稍微麻烦一点，不过我可以忍。\n\n此外，二者在语法检查上也有区别。在Sublime Text上，我使用了一个插件让我可以在内部使用Grammarly进行拼写检查。而在VS Code上，我根据[这个教程](https://zhuanlan.zhihu.com/p/139210056)下载并配置了LaTeX插件。\n\n# 写代码\n因为刚开始学前端，写代码的机会还不多，所以没法写出VS Code和其他编辑器（比如XCode）的对比。不过我上的网课是Angela Yu的，她是Mac电脑，但推荐使用的是VS Code而不是XCode，所以可能是有她的道理吧。","tags":["工具"],"categories":["折腾"]},{"title":"博客崩了记录","url":"/2023/10/20/博客崩了记录/","content":"\n如题，昨天博客突然崩了。当时是想尝试添加置顶功能，然后不知道为什么编译报错，页面整个404。然后把指定功能相关的代码删除了，但仍然报错。好奇怪！\n\n用Mac的时间机器将它恢复到了15号的样子，但是编辑任意文件，提示文件已锁定，且不能解锁。试着生成网页，也提示没有权限。于是一气之下建立了一个新的博客文件夹，把所有东西复制一份过去，然后把原文件夹删除，cd到新目录再编辑里面的内容。比较惊讶的是删除原文件夹竟然没有提示权限不够！？\n\n于是15号之后的修改都要重做了。花了一天时间，根据之前的[笔记](https://greendolphindance.com/2023/10/07/博客搭建小记/)重新操作。但是！明明是一模一样的代码，却出现了新的bugs！\n\n解决这些bugs的过程中参考了社友AliceZ的建议，并接受了社友茨月的科普，在此感谢。\n\n# Bug 1：切换到与系统偏好相反的颜色模式后，再切换页面，颜色模式跳回到和系统偏好一致\n\n把夜间模式相关的代码改成和[这个页面](https://greendolphindance.com/2023/10/07/博客搭建小记/#夜间模式随系统颜色模式开启)所写的一致（2023-10-19版本），结果出现了这个问题。以前从未有过。解决方案如下：\n\n```html\n<script>\n    (function() {\n        // 在页面加载时根据存储的主题或用户的系统偏好设置主题\n        const savedTheme = sessionStorage.getItem('theme') || localStorage.getItem('theme');\n        const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n        const useDarkMode = savedTheme ? savedTheme === 'dark' : userPrefersDark;\n\n        if (useDarkMode) {\n            document.documentElement.classList.add('dark-theme');\n        }\n    })();\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const themeToggleCheckbox = document.getElementById('switch_default'); // 复选框\n    const themeToggleMobile = document.getElementById('mobile-toggle-theme'); // 移动端切换按钮\n\n    function updateButtonText(isDark) {\n        themeToggleMobile.textContent = isDark ? '· Dark' : '· Light';\n    }\n\n    function toggleTheme() {\n        const isDark = document.documentElement.classList.toggle('dark-theme');\n        document.body.classList.toggle('dark-theme', isDark);\n        sessionStorage.setItem('theme', isDark ? 'dark' : 'light');\n        updateButtonText(isDark);\n    }\n\n    // 初始化按钮文本\n    const initialIsDark = document.documentElement.classList.contains('dark-theme');\n    updateButtonText(initialIsDark);\n\n    // 为复选框和移动端的切换按钮添加事件监听器\n    themeToggleCheckbox.addEventListener('change', function() {\n        const isDark = themeToggleCheckbox.checked;\n        document.documentElement.classList.toggle('dark-theme', isDark);\n        document.body.classList.toggle('dark-theme', isDark);\n        sessionStorage.setItem('theme', isDark ? 'dark' : 'light');\n        updateButtonText(isDark);\n    });\n\n    themeToggleMobile.addEventListener('click', toggleTheme);\n});\n</script>\n```\n\n中途发生了一件神奇的事情：ChatGPT给我生成的代码，Light和Dark刚好是反的……我手动更换了一下才正确。实在是非常奇怪，居然出现这样的失误？\n\n# Bug 2：菜单展开时将页面左上角的内容挤到一起\n\n如图：\n\n![9a149dc368370a0bb795a5f783e992f3](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/10c6e13a-c760-4202-9a8b-09390276932e)\n\n也是之前根本没出现过的问题！\n\n最后的解决是让展开的菜单栏“浮在”左上角各个元素之上，让它直接覆盖在这些元素的上面而不是挤到它们：\n\n```css\n@media screen and (max-width: 479px) {\n    .navbar-mobile .menu {\n        position: absolute;\n        top: 80.66px; /* 调整这个值，使菜单栏下移 */\n        left: 0;\n        width: 100%;\n        background-color: #fff; /* 或其他颜色 */\n        z-index: 2; /* 确保在其他元素之上 */\n        display: none; /* 默认隐藏 */\n    }\n\n    .navbar-mobile .menu.active {\n        display: block; /* 当菜单激活时显示 */\n    }\n\n    .navbar-mobile .navbar-header,\n    .navbar-mobile .menu-toggle {\n        z-index: 1; /* 确保在菜单之下 */\n    }\n}\n```\n\n其中80.66px是用网页检查器测量出来的上方元素的高度。这样修改后就没问题了。\n\n# 反思\n在这个事件中，我显然犯了一些错误。下面进行反思。\n\n## 不要急着推倒重来\n博客刚崩掉并且回滚代码恢复不了时，我的第一反应是用时间机器恢复到以前的版本。但是仔细想想，应该有更优的解决方案。首先，GitHub上有历史记录可以恢复！这个我根本就不知道，还是我男朋友告诉我的。但他告诉我时，我已经重建了博客文件夹，历史记录就没有了。\n\n而且我发现我缺乏一种刨根问底的精神，觉得只要问题解决了就可以了。诚然，重建博客文件夹或许可以解决这个问题，但是一旦重建，我就没法知道究竟是什么原因导致博客崩掉的了。虽然据说程序员的原则是“能跑就行”，但是我不是程序员啊！我只是一个普通的爱好者！作为爱好的话，还是尝试深入理解其本质比较合适吧。\n\n## 版本控制\n在这两天之前我完全没听说过“版本控制”这个词……结果AliceZ和茨月都强调了版本控制的重要性。于是去查了，以下是GPT的解说：\n\n> Version control（版本控制）是一种记录文件更改历史的系统，以便将来可以查看特定版本的文件。版本控制系统对于软件开发项目特别有用，因为它们帮助开发团队跟踪和管理代码的更改。GitHub 是一个基于 Git 的在线版本控制系统，用于协作开发项目。\n>\n> 以下是如何在 GitHub 上进行版本控制的基本步骤：\n>\n> ### 1. **创建仓库（Repository）**\n>    - 访问 [GitHub](https://github.com/)。\n>    - 点击右上角的 \"+\"，然后选择 \"New repository\"。\n>    - 填写仓库名称、描述等信息，然后点击 \"Create repository\"。\n>\n> ### 2. **克隆仓库（Clone）**\n>    - 找到你想要克隆的仓库。\n>    - 点击 \"Code\" 按钮，复制 URL。\n>    - 在本地计算机上打开命令行，输入以下命令：\n>      ```\n>      git clone [复制的URL]\n>      ```\n>\n> ### 3. **创建和切换分支（Branch）**\n>    - 在命令行中，进入你的项目目录。\n>    - 输入以下命令创建并切换到新分支：\n>      ```\n>      git checkout -b [分支名称]\n>      ```\n>\n> ### 4. **添加和提交更改（Add & Commit）**\n>    - 对项目进行更改。\n>    - 使用以下命令将更改添加到暂存区：\n>      ```\n>      git add .\n>      ```\n>    - 使用以下命令提交更改：\n>      ```\n>      git commit -m \"[提交信息]\"\n>      ```\n>\n> ### 5. **推送更改到 GitHub（Push）**\n>    - 使用以下命令将更改推送到 GitHub：\n>      ```\n>      git push origin [分支名称]\n>      ```\n>\n> ### 6. **创建拉取请求（Pull Request）**\n>    - 返回 GitHub 的仓库页面。\n>    - 点击 \"Pull requests\"，然后点击 \"New pull request\"。\n>    - 选择你推送的分支，然后点击 \"Create pull request\"。\n>\n> ### 7. **合并拉取请求（Merge Pull Request）**\n>    - 在拉取请求页面，点击 \"Merge pull request\"，然后点击 \"Confirm merge\"。\n>\n> ### 8. **拉取最新更改（Pull）**\n>    - 在本地项目目录中，切换回主分支：\n>      ```\n>      git checkout main\n>      ```\n>    - 拉取最新更改：\n>      ```\n>      git pull origin main\n>      ```\n>\n> 以上是 GitHub 版本控制的基本流程。根据项目和团队的不同，可能会有更多的步骤和策略，如代码审查、持续集成/持续部署（CI/CD）等。\n\n大概意思是要做什么修改的时候，就切换到一个新分支，然后修改成功之后再把它拉回主分支吧。我学习！以后一定吸取教训！！\n\n## 情绪管理\n这一点就不多说了。昨天修了一天bug还没修好，大崩溃。今天修好了，心情就大好。感觉情绪忽上忽下的，总之还是没能成为一个成熟的大人。\n\n## 寻求帮助\n出现这两个新bug之后不好意思问男朋友具体的解决办法，毕竟他已经多年没写前端了（更正：他说他其实从来没写过前端……），问他会给他增加额外的学习成本。之后在闭社发嘟文吐槽，附上了问题描述，其实有暗戳戳期待会不会有人来帮忙。好在最后没有尴尬收场：茨月和AliceZ在评论区提出了观点和建议，让我学到很多，我也根据这些建议解决了部分问题。\n\n发现我在寻求帮助的时候总是很别扭，一方面希望有人帮忙，另一方面又怕麻烦别人，于是就采取了这种迂回的方式求助（而不是比如直接给了解前端开发的社友发私信）。这跟我的性格有关，我的默认状态是不向任何人求助，自己独立解决问题。这在人生的早期比较好使，因为我当时算是同龄人中较聪明者，遇到问题的时候每每自己就给它解决了，不会造成很多困难。但是现在，我的能力渐渐触碰到天花板，遇到的无法独立解决的棘手问题越来越多，这种时候一个人内耗就不好使了。\n\n所以真的很感谢GPT（的开发者）……虽然它经常不怎么靠谱，但是我可以一直问它而没有心理负担。但一直依赖GPT也不是办法，我总要找到一个适合我的向活人求助的方式，因为总会有需要这样的场合出现。所以还是得继续探索自我。","tags":["博客"],"categories":["折腾"]},{"title":"最近下载的小玩意：Typewriter","url":"/2023/10/17/最近下载的小玩意：Typewriter/","content":"<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/04b81b8a-3ecd-4ee1-90eb-41e0341af953\">\n\n平台：macOS、iOS、iPadOS\n\n价格：¥0\n\n下载地址：App Store\n\n---\n\n终于被我找到了，全家桶适用的免费Markdown编辑器！\n\n本来一直在用Typora的试用版的，但是发现了一些问题。有时候代码的预览不是很灵，而且一旦转为预览的格式，再编辑就有点麻烦。总之是一些小问题，但还是让我有点困扰。所以有想过改用一个编辑和预览分开的编辑器。\n\n之前社友Origakid推荐了VS Code。但是我这人比较奇怪，想要一个专门用来写Markdown的编辑器，二来电脑里已经装了Xcode和Sublime Text两个用来写代码的工具，总觉得再装一个好难受啊！所以暂时把寻找Markdown编辑器的计划搁置了。\n\n结果刚好，今天在微博看到少数派发了[一篇文章](https://sspai.com/prime/story/free-markdown-editor-2023)，介绍各个平台上的免费Markdown编辑器。虽然是介绍免费编辑器，但文章本身竟是收费的，要开会员才能看。但是！天无绝人之路，在手机端看文章，刚好可以在试读部分的最后看到在macOS和iOS上的推荐！\n\n![IMG_4953](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/b5659f46-6c86-41b4-9a3a-7684eee5d11a)\n\n就是你了！Typewriter！马上下载了来试试看。发现这个编辑器的编辑和预览不完全是分离的，编辑板块也有一些格式，比如标题和链接。\n\n先说缺点。预览有时候显示是错误的，比如我这篇文章的FrontMatter：\n\n<img width=\"1248\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/15dd77ca-7991-45c8-a0f1-479ad4ebeb63\">\n\n这个信息本来不会出现在正文中的，但Typewriter不仅让它显示在了正文中，而且自作多情地给它把格式转换了：Categories类目下的“- 折腾”被直接转换成了无序列表。相反，Typora会用单独的格式将这部分信息标示出来。\n\n另一个例子，我在另一篇文章里插入了一个代码块，其中有一个注释，以“#”开头。结果Typewriter把这个井号判定成了标题的标志，在编辑板块显示成了标题的样子：\n\n<img width=\"1221\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/39bbcb60-06c2-42f1-a73f-e63cea15548c\">\n\n此外，可以发现在预览板块，这一段代码是没有格式的。虽然这段代码取自yml文件，Typewriter可能不支持高亮，但是至少要体现一下它是一段代码吧！\n\n总之，感觉Typewriter的这些细节抓得不是很好，让我强迫症有点难受。\n\n但是，它毕竟不要钱啊！而且其他方面都还可以，例如可以在编辑板块显示文章目录：\n\n<img width=\"192\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/8985b299-077d-41c0-9a67-bcc9f53a1260\">\n\n这点比Typora好（或者也可能是我没用会Typora？），我在写[《博客搭建小记》](https://greendolphindance.com/2023/10/07/博客搭建小记/)时，因为文章太长，所以没有目录的Typora用得很难受。今天补充内容时用Typewriter编辑，感觉比较不错，可以快速跳转到各个小标题去。\n\n总而言之，虽然Typewriter还有一些缺点，但我暂时就用它了。如果有更好的再说吧！\n\n2023-10-24更新：已转投VSCode。","tags":["工具"],"categories":["折腾"]},{"title":"最近下载的小玩意：QSpace Pro","url":"/2023/10/10/最近下载的小玩意：QSpace-Pro/","content":"\n<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/43f93acf-2cda-4f5a-b44c-80220a455b5f\">\n\n平台：macOS\n\n价格：¥79（官网下载，APP内购买，网上找了个邀请码便宜10块）\n\n---\n\n想找[之前的文章](https://greendolphindance.com/2023/10/08/最近下载的小玩意/)提过的TotalFinder的替代品了，一来想支持正版，二来Apple似乎在给它设置重重险阻，感觉该APP的未来不容乐观。\n\n一开始还不太想放弃，于是点进TotalFinder官网的“Support”页面看看它还在不在维护。发现其实四月份的时候还是更新了的，但我又在评论区看到了这样一条：\n\n<img width=\"787\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/69ad0ba1-7ef6-4d10-a2ff-5e7736e068a4\">\n\n里面推荐了QSpace Pro，也就是本文的主角。我立刻就去下载了，并开启了30天的试用。\n\nQSpace Pro和TotalFinder最大的不同是，前者是一个单独的APP，而后者类似于访达的一个插件。所以使用QSpace Pro时，最好使其在程序坞中保留。（然后我就不想用原生的访达了，但是不知道怎么把它隐藏掉，难受。）\n\n在使用上，QSpace Pro和TotalFinder也有区别。QSpace Pro没有tabs，只有双栏或多栏显示，但这对我来说已经够用。下图为四栏显示，如需调整栏数和排列方式，只需点击窗口右上角的“田”字，再选择需要的显示方式。\n\n<img width=\"1224\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/031a9d8a-ba94-4de5-bed5-a4cdf1982efb\">\n\n还有一个我看中的功能，就是新建文件。Windows用户看到这里可能一头雾水，这不是很基础一功能吗？可是，是的，访达没有这个功能……这也是我从Windows转Mac遇到的众多不适应的地方之一。现在，我终于能解决这个问题了！只需点击右键，选择“新建文件”，就能拥有和在Windows上一样的丝滑体验！\n\n在默认情况下，点击“新建文件”会建立一个txt文档。但你可以在QSpace Pro的设置里添加，让它能够生成docx文档等：\n\n<img width=\"915\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/1e4b298c-f8bb-4571-9ad7-ca38d1b2e1bb\">\n\n添加后效果如下：\n\n<img width=\"277\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d3f10a5d-aaee-4706-88d8-3fc3283e558a\">\n\n我还想提到一个功能，就是分组。QSpace Pro可以以不同的方式将文件夹的内容进行分组。我比较喜欢的是按类型分组，效果如下：\n\n<img width=\"503\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/50c4e981-6386-4985-b34b-d1a29b327a80\">\n\n这个作用一看就知道吧！我就不介绍了。\n\n“设置”里还可以根据个人习惯进行一些设置。比如回车、删除键等对应什么功能。我使用了“Windows模式”：\n\n<img width=\"766\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/224c34c8-e688-49d9-a779-3e9cf8eeb703\">\n\n还有一些小细节，比如排序的快捷键（QSpace Pro点选排序方式有点麻烦，所以有快捷键是极好的）：\n\n<img width=\"638\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/8b90f59e-72ec-45c2-8d66-a4d1bc2e4ebc\">\n\n到目前为止，这个APP还没有什么令我不满意的地方，所以果断地买断了。以后如果有新的心得，会在这里更新。\n","tags":["工具"],"categories":["折腾"]},{"title":"塔罗牌、生命灵数、星座和MBTI","url":"/2023/10/09/塔罗牌、生命灵数、星座和MBTI/","content":"众所周知我最近在频繁使用塔罗牌。我也经常在小红书上浏览相关内容用以打发时间。有一天，我发现一个塔罗师针对新手的免费分享活动，于是添加了她的微信。她把我拉进一个小群，里面其他人也都是新接触塔罗牌的人。\n\n然后，她竟然开始给大家布置作业，让每天抽一张日签并分析，发到群里，然后她来给大家点评。我觉得这一整件事情都挺好玩的，而且反正她暂时还没有收钱的迹象，我就还真的每天认真完成作业。\n\n# 生命灵数\n\n前两天她突然提到一个什么“生命灵数”，要求我们大家都算一下自己的并相互分析。算法是这样的：\n\n>1、生命灵数（性格数字）=年+月+日（加到个位数）\n>eg:20020824,2+0+0+2+0+8+2+4=18，1+8=9，生命灵数就是9隐士\n>\n>2、生命角色=月+日（加到个位）\n>eg:20020824,0+8+2+4=14，1+4=5，生命角色是5教皇,教皇有“教育、辅导、援助”这些意思，他喜欢辅导别人，没可能是学些传统的东西，发挥纯正，也会是以为很棒的心灵导师\n>\n>3、态度品质=小牌元素+生命灵数\n>小牌元素第一种算法（态度品质1）=年+月+日相加总和/4的余数\n>eg:20020824，2+0+0+2+0+8+2+4=18,18/4=4余\n>\n>小牌元素第二种算法（态度品质2）=月+日相加总和/4的余数\n>eg:20020824，0+8+2+4=14,14/4=3余\n>\n>从余数看态度品质，余数1代表权杖，余数2代表圣杯，余数3代表宝剑，余数0没有余数代表星币。\n>\n>那么20020824的态度品质就是圣杯9\n\n其中，生命灵数（性格数字）代表了一个人内在的真实性格，而生命角色的数字代表了ta表现出来的个性。小牌元素的两种算法需要综合考虑，两者算出来的结果共同作用于一个人的态度品质。\n\n虽然我对塔罗的接受度还算比较高，但我一看到这个生命灵数等的算法就很排斥，起初还不知道为什么。后来一想，这样会导致同天生日的人有一模一样的性格、角色和态度品质。\n\n相信生命灵数的人会说：可能同天生日的人，在性格方面也会有神秘的相似之处。假设这个是对的吧。但是内在性格、外在性格、态度品质这些东西都一样，是不是太超过了！\n\n这时候还有一个补救的方法，就是说这些灵数都对应着塔罗牌，而对塔罗牌的解读可能是丰富的。比如两个同天生日的人的生命灵数对应的牌都是魔术师，那么可能一个人表现为沟通能力强，一个人表现为行动力强这样子。在这里魔术师是作为一个性格的“原型”而被参考的，这说明成千上万的同天生日的人的性格都与这一原型相似，但相互可能不相似，表现为一种家族相似性。我觉得这个补救没有从根本上解决问题，因为对原型的解读再丰富，它也是有限的，那么仍然会存在很多同日生的人，他们算出来的内在性格、外在性格、态度品质全都是相像的。\n\n我查到有些生命灵数的版本是生命灵数直接对应了一段性格描述，而不是对应塔罗牌，这个我就更排斥了。对应到塔罗牌要稍好一些，因为有解读的空间，但我并不是完全满意。\n\n这件事情有一个导火索：就是我的生命灵数对应的塔罗牌实在是太不像我了！我算出来的生命灵数和生命角色都是3（皇后），证明我表里如一，而且性格符合如下关键词：\n\n> 生育力、多产、财富。母亲、姊妹、妻子。婚姻。忠诚、理想主义。优雅、迷人魅力、亲切殷勤。喜爱交际。行动、计划、担保承诺。实际动作、进展、进步。晦涩难解、暧昧隐密、未知事物。象征、人物形象、意象、寓意。（摘自《跟着大师学塔罗逆位牌》）\n\n这是什么！！我本人没有任何母性，已经决定不生孩子。也没有什么迷人魅力。喜爱交际就更不像了，本人i值高达97%，平常最喜欢的事就是一个人呆着。\n\n群里的同学（？）跟我互相解读的时候，我告诉了她这些说得不准的地方，然后老师（？）就说那她来解读一下。然后我发现她鸡贼地避开了这些方面的大部分：\n\n> 皇后，一个富贵人家，给人的感觉就是好有气质，身边不缺朋友的感觉，和你在一起吃喝玩乐非常开心，总感觉你的点子很多，甚至觉得你的衣品都很不错。\n> 性格是皇后，这个交际能力还是很不错的，让你去热场绝对没有问题，尤其看到大家冷场的时候，你是那个调动大家情绪的高手。另外呢，你对艺术美丽的东西都是情有独钟，这方面的动手能力也是比较强的，比如画画，手工，唱歌之类的。\n> 那么从态度宝剑三和星币三，给我的感觉是你善于服务群众，就比如一针见血看到别人的问题，但又能一招致胜给对方药方的感觉。其实挺适合公关，疗愈，社区服务，设计之类的工作的，不知你自己有没这样的想法\n\n但是老师，我说了我的交际能力很差啊！这一点你怎么还是给我写上了啊！我提出抗议，结果她居然说：\n\n> 是你觉得你差而已[偷笑]，当你把内心的恐惧宝剑三，转化为疗愈能力，你会很厉害的\n\n好一个“是你觉得你差而已”！什么万能模板，下次我给别人算没算准，我也跟ta说是你觉得没算准而已，我不要你觉得，我要我觉得。我开始思考她到底是真信还是骗子啊？（仔细一想，应该是真信。）\n\n# 星座\n\n与上述有关生命灵数的结论相同的结论可以推广到星座，因为星座也是由人的生日决定的。现在星座有了一个内容更丰富的版本，叫星盘，但似乎也是根据生日来的，只是精确到了时和分。\n\n星座其实就和上面所说的“直接对应到性格描述的生命灵数”类似，它的描述也是死的。所以我从来没有相信过。而且二者结合来看，星座只关乎月份，生命灵数关乎年月日，也就是说这两个没有什么对应关系，那么就有可能你星座对应的性格和生命灵数对应的性格是矛盾的！（当然要是你说“人就是矛盾的”，那我确实一点办法也没有。）\n\n总而言之我不是很相信星座和生命灵数这一套东西。总体的感觉就是它们是“死”的东西，而塔罗牌等是“活”的，有很大解读空间，也更大程度地满足了“科学”占卜所需要的随机性。\n\n# MBTI\n\n最后来说一下MBTI。这个东西不好说是否科学，但至少大部分人都没有以科学的方式去使用它。我这个科学的方式，意思是就事论事。比如一个人自称是i人，然后你据此推测出ta性格内向，这是科学的使用。但是大部分人的使用总带着一股标签化、刻板印象化的意味，比如觉得INTP不爱收拾房间，这是哪里来的刻板印象！本INTP东西都是放得整整齐齐的。这样子弄感觉有种生命灵数和星座的意思了，反正就感觉很奇怪。\n\n还有小红书上经常有类似于“xxxx（MBTI）怎么追”的问题。这不是要看每个人的喜好吗！我曾经好奇点进去看过一个“INTP怎么追”，结果满屏都是“快逃”，说跟INTP谈恋爱很没前途什么的。笑死，我和我男朋友都是INTP……相互没前途？\n\n总之，警惕MBTI星座化！\n","tags":["占卜"],"categories":["随笔"]},{"title":"最近下载的小玩意","url":"/2023/10/08/最近下载的小玩意/","content":"\n因为又菜又爱折腾，所以我下载并使用了很多现成的小工具。本文章旨在分享这些小工具的使用体验（也许会成为一个系列）。\n\n我的设备：MacBook Pro M1、iPad Air、iPhone 12 mini。另有安卓备用机一部，是日产的Sony Xperia Ace II（不推荐）。\n\n# Foldery\n\n![logo](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/7f9e037e-878e-414a-b46d-09764a5417d8)\n\n平台：macOS\n\n价格：¥0（限免）\n\n更新时间：2023-10-8\n\nFoldery是一个给文件夹图标改颜色的小工具。应用场景大概就是希望文件夹显得更加醒目的场合吧。使用方法很简单，打开Foldery和访达，在Foldery窗口上选好颜色，再把想要改颜色的文件夹拖拽到Foldery窗口就可以了。使用效果如图：\n\n![image-20231008104357029](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/4ddae0e1-b8fa-47e9-9965-c81c0f87de38)\n\n里面默认的颜色都蛮和谐的，当然也可以自定义颜色，但是我懒。如果想要把文件夹还原为默认的颜色，就点文件夹图标左上角的叉叉，再把想要还原颜色的文件夹拖拽过去就好：\n\n![image-20231008104557637](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/1f2a824c-7f81-4255-9f47-e75e7e53a6ed)\n\n就是这样啦！\n\n# TotalFinder\n\n<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/022bc32e-b82c-4d92-84eb-7878319d526e\">\n\n平台：macOS\n\n价格：¥0（官网的购买渠道点开是一份2021年发表的停止维护声明，没法买，所以我下了破解版。但是刚才发现最新版本更新时间是今年？不知道怎么回事。）\n\n更新时间：2023-10-8\n\n访达增强器！让访达更好用的小工具。可以让访达有tabs，以及支持dual mode。其实它还有一个功能，就是让文件夹标签的颜色成为文件夹的背景色，这个功能如果可以用的话就不用下载Foldery了，但是我开启了这个功能没反应。\n\n具体功能及使用方法可以去[官网](https://totalfinder.binaryage.com)查看。我记得用这个要给一个什么权限来着，很麻烦，印象中重启了两次。然后开启了这个权限的话，Mac上有的APP就不能用了，比如微信读书、微博轻享版。所以需要作出一些权衡。\n\ntabs和dual mode演示：\n\n![tabsanddualmode](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/629adc35-3db8-4eed-8a44-98940bbec656)\n\n一个小tip：TotalFinder会修改访达的图标，有点丑，可以在访达 -> 设置 -> TotalFinder -> Dock里勾选“使用原Finder图标”来改回去。\n\n# Bob\n<img width=\"100\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/4ce5b05a-c5f5-4eb1-90d3-f3ebe40f96f6\">\n\n平台：macOS\n\n价格：好像是¥50\n\n更新时间：2023-10-8\n\n图标很丑但很强大的一款翻译软件，官网[在这](https://bobtranslate.com)。可以通过API Key连接到各式翻译网站，然后选择词句并按下Option+D就可以翻译（配合[PopClip](https://www.popclip.app)食用更佳）。会出来如下界面：\n\n![display](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/eb502dd2-7a60-4c81-8030-b0b598dd48ce)\n\n不难发现，它支持ChatGPT的翻译和润色功能，但是很遗憾，我的从某一天开始就不能用了……应该是ChatGPT那边的问题，不怪Bob。我还没有排查过原因。但是DeepL经常比ChatGPT更好用，所以我感觉DeepL能用就行。\n\nBob的配置有点小麻烦，但是一旦配置好了就能一劳永逸。除了一般的翻译功能以外，它还能够截图进行OCR识别并翻译，非常好用。\n\n# OnyX\n\n![onyxlogo](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/bc42635d-c27d-4ec2-8781-21cfcbc14946)\n\n平台：macOS\n\n价格：¥0\n\n更新时间：2023-10-8\n\n官网[在这](https://www.titanium-software.fr/en/onyx.html)。系统清理软件，没啥好说的。免费，好用。\n\n之前用它，发生了一件神奇的事情。众所周知Mac的系统文件体积庞大，且无法清理，十分神秘。以前用过[腾讯柠檬](https://lemon.qq.com)，没有效果。然后我试着下载了OnyX，系统文件突然大大减小了！但我仔细一看，才发现它只是被分成了两个类：一个是iPhone和iPad的本地备份，另一个是其他的系统文件。所以OnyX其实是无法清理很多系统文件的，只是给它重新分类了，但有这个功能也比没有好（？至少我知道占据空间的其实是备份文件，而不是其他的怪东西。\n","tags":["工具"],"categories":["折腾"]},{"title":"博客搭建小记","url":"/2023/10/07/博客搭建小记/","content":"\n# 为什么要搭建博客\n\n以前用Wordpress弄了一个[学术主页](http://chumiaochen.com)，还比较满意。但是最近又在琢磨着弄一个博客，分开弄主要是想着把学术和生活分开。\n\n但我其实并没有很强的表达欲，所以还没想好博客里主要放一些什么内容。第一篇文章是关于塔罗牌的，是我最近感兴趣的东西。所以这个博客应该主打一个“一时兴起”，最近在做什么就写什么。\n\n# 做法\n首先声明：我本人没有任何的写码能力，所有的代码都是网上查阅得来或是由ChatGPT生成。所以我不知道这些代码是否是可复现的。请谨慎参考。\n\n我首先搜索的关键词是“GitHub 搭建博客”，参考的教程是[这个](https://zhuanlan.zhihu.com/p/28321740)（搜出来的第一个）。因为我npy的个人主页（不是Links里的那个博客）是用GitHub弄的，所以我只知道GitHub似乎可以搭博客的样子。用这个教程我弄出了一个简陋的页面，上书一行小字：“Hello World”。\n\n然后我发现了Hexo这个东西。不记得是怎么知道的了，可能是出现在刚才的搜索结果里。点进去看好像不是很难的样子。然而真正动起手来bug还是层出不穷……\n\n不过现在我相信使用它们是正确的做法。一个优点在于它使得我的文件都保存在本地，让人很有安全感。（我本人对非本地的存储等等都不是很放心，因此购买了一个512G、一个2T的移动硬盘用来备份我手机、iPad和电脑里的破烂。但是我设备里也没啥很珍贵的东西，其实没了就没了。某种敝帚自珍！）\n\n我参考的教程主要有[这个](https://zhuanlan.zhihu.com/p/60578464)和[这个](https://blog.csdn.net/qq_62928039/article/details/130248518)。其实都大同小异，因为步骤实在也不多。但我在建站的过程中居然屡屡受挫。我用Hexo创建并部署了站点之后，等了很久，页面还是一开始的Hello World（而不是Hexo的那个默认界面）。经过一番猜测和思考，我折腾了一通又将配置文件恢复成原来模样，结果——好了。完全不知道怎么回事。也许是我其实做了一些正确的修改，也许就是玄学。\n\n接下来开始选主题。我希望整个网站的风格比较极简，留白比较大，以及最好有夜间模式（不强求）。我最开始选择的主题叫“paper”，长下面这样：\n\n![Paper](https://d33wubrfki0l68.cloudfront.net/728712a1f41e64de505ff5828ac3e4fe1c7a6b83/7bac2/themes/screenshots/paper.jpg)\n\n结果，完全不能用……生成的页面都是无格式的样子，而且我最后也没有找到问题出在哪里。所以下一个，leedom：\n\n![leedom](https://d33wubrfki0l68.cloudfront.net/a24b24a00ebb6960b6697e1f24a04b1589bedac9/43e59/themes/screenshots/leedom.jpg)\n\n这个倒是可以用，不过它的字体对我来说有些花哨了。所以我继续寻找下一个。这次找到的是名为“july”的主题：\n\n![July](https://d33wubrfki0l68.cloudfront.net/3e136050f67788d5a51592abc70d6241b64987b7/b1257/themes/screenshots/july.jpg)\n\n多么简洁！完全！戳中了我的审美点！我立刻将其配置好，并添加了Categories和Tags页面。然后两个页面分别出现了不同的问题！\n\n先说Tags：页面上没有内容。因为我的index文档里写了“title: Tags”，所以页面上有标题格式的“Tags”字样，但除此之外就没有别的了。按道理，只要index文档里写了“type: tags”，它就会自动生成一个列举了所有标签的页面。但是并没有。我查了半天，试了无数方法，都无法解决。\n\n最后我发现：这个主题好像不包含Tags和Categories的页面……只好又换一个主题。这最后一个主题名叫“Chic”：\n\n![Chic](https://d33wubrfki0l68.cloudfront.net/e3707c8ed851e560211b81491b5cef21da46b3f9/a8675/themes/screenshots/chic.jpg)\n\n我把主页的那些图标删掉了，就显得简洁了一些。虽然我比较喜欢在主页显示Recent Post的那种主题，但是这个已经是我能找到的最好的了。而且它还有夜间模式诶！只是要手动开启就是了。\n\n说回Categories的问题。我点开Categories，页面404。然后我把问题发在闭社，社友nullptr（感谢！！）指出是大小写的问题，把链接“greendolphindance.github.io/categories”中的“categories”改成大写就好了。所以我把配置文件中的“categories”改成了大写，暂时解决了这个问题。\n\n但是！只有“Categories”是大写，而“archive”、“tags”等都是小写，这让我很不爽！我就想从根本上解决这个问题。nullptr说是文件夹名称的问题，这让我想起我一开始建立Categories文件夹的时候不小心打成了大写。但问题是！我明明早就改成小写了！于是我删掉了整个categories文件夹，重新在大小写正确的情况下建立了一遍。但问题仍然存在。所以这件事情可能就这样了……\n\n在使用“July”主题时，还出现了一个问题，就是我点击主页的文章标题没反应。社友Origakid（感谢！！）指出是URL配置得不对。我于是右键标题并复制链接，结果发现链接是<a class=\"break-link no-style\"> “https://<span></span>greendolphindance.github.io/greendolphindance.github.io/2023/10/06/塔罗牌为什么不会出错/”</a>，“greendolphindance.github.io”神秘地出现了两次！我再试着输入<a class=\"break-link no-style\">“greendolphindance.github.io/2023/10/06/塔罗牌为什么不会出错”</a>，发现可以正常打开。那么问题就很明显了。\n\n但是为什么会出现这样的问题呢？经过一番艰难思索，我突然悟了，是我很早之前跟着某个教程在URL下面添加了一行：“root: greendolphindance.github.io”，为了解决前面出现的某个问题。然后可能问题用其他的方法解决了，但是这一行就忘记删掉了。所以通过某种机制，它让我的URL出现了问题。然后这个问题也解决了。\n\n总而言之最后还是有惊无险地成功了！我之所以喜欢折腾就是因为喜欢寻找解决方案的过程以及找到解决方案带来的成就感，所以对这一过程我表示十分满意。一些小缺憾就是上述某些问题没有找到根本性的解决方法，或是解决了却不知其原理。但是我居然做出了一个可以运转的博客呢！想想就很激动。\n\n其实还想试试添加评论和浏览量功能，但经过一番考察，我发现这些功能好像是挂靠（？）在主题下的，也就是说有的主题的文件包含和评论功能相关的代码，因此可以添加评论功能，但有的主题不行（也许可能可以自己写吧但是这对我来说太超过了……）。我这个主题大概不行，所以就干脆地放弃了。\n\n# Markdown\n\n本站的所有文章都在本地以.md格式储存。所以要写文章，需要一个Markdown编辑器。\n\n我一开始使用的是Xcode，因为双击文件就自动用它打开了……它很明显完全不适合，没有高亮也不能预览，不过也不能怪它，毕竟它被发明出来并不是用来写Markdown的。\n\n然后我想着能不能利用电脑上现成的工具，于是把目光转向了Sublime Text。我平常用它写LaTeX，然后它好像插件很丰富的样子，就想会不会有插件支持Markdown高亮（我对预览的需求不是很高）。结果确实有，但我试了好几个都不太行，不知道是我的问题还是它们的问题。所以放弃了。\n\n结果最后还是下载了Typora！我对它有好感的一点是它是买断制（点名批评某U姓APP），而且14.99刀也不算太离谱。其他的功能等等都蛮好的，不过我要求不高，只要高亮就可以（当然也可以Typora这种边写边预览的模式），也许一些免费的APP也可以满足，感觉还是有折腾的空间。但是再说吧！\n\n# 访问数和评论系统\n\n在Origakid的帮助下添加了访问数和评论系统！原来跟主题无关，只要找到合适的服务，然后在相应的文档里添加代码就可以。好玩！原话如下：\n\n> @Revolver Congratulations! 另外想添加评论功能的话可以参见[giscus](https://giscus.app/zh-CN) ，浏览量可以使用[不蒜子](http://busuanzi.ibruce.info) （记得对博客关闭AdBlock等屏蔽插件），这两个都是很简洁方便的实现方式，……\n\n我于是在giscus的网站上生成了代码块，然后粘贴到<a class=\"break-link no-style\">/greendolphindance/themes/Chic/layout/_page/post.ejs</a>里。为什么是这个post.ejs而不是别的post.ejs呢？因为我本来想每个都试一遍，结果第一个试的就是这个。然后网上有些教程说复制到article.ejs，但我压根没找到这个文档，我觉得post和article应该是一个意思吧？\n\n需要注意的是Origakid在评论区指出的那一点，即要把代码块复制到文档末尾“\\</article>”之前。否则评论区和文章会不等宽。\n\n不蒜子的话，因为官网只写了两行代码，没写咋用，所以我还参考了[这个](https://cloud.tencent.com/developer/article/1669144)教程。配置并不难。同样地，最好把标签代码放在版权信息之后、“\\</div>”之前，否则访问数会在版权信息的基础上另起一行，不够美观。\n\n我本来写的是“感谢xx位访客”，然后发现太长了手机端显示成了两行。所以干脆删掉文字直接显示了“xx”。\n\n# 回到顶部\n\n试着添加了“回到顶部”按钮！参考的教程是[这个](http://wuchong.me/blog/2014/01/08/hexo-scrollup/)。\n\n首先跟着教程添加了相应的文件和代码，然后hexo s，果然不行（。我已经逐渐习惯我的这种折腾难以成功的体质了……\n\n然后求助了我亲爱的男朋友，他说可能是因为这个用了jQuery，然后需要把jQuery的js文件也添加进去。\n\n我：什么事jQuery？什么文件？添加到哪里？\n\n（省略一些解释环节……）\n\n最后终于弄懂了，要去网上下载一个叫jQuery.js的文件，添加到博客目录下放js文件的地方（我的是/greendolphindance/themes/Chic/source/js）。放进去之后，还要进行一些配置，也就是在某个文件添加某一行代码。\n\n那么是哪个文件呢？我亲爱的男朋友推测是\\_config.yml。我机智地理解成主题文件夹内的\\_config.yml，而不是根目录下的那一个，事实证明是正确的。在该文档内搜索“js”，发现这么一段代码：\n\n```text\n# scripts loaded in the end of the body\nscripts:\n\t- /js/script.js\n\t- /js/tocbot.min.js\n```\n\n我努力理解了一下，这是在body的end加载这两个js文件的意思！然后一个天才的想法就出现在我的脑海里：我把jQuery.js加进去不就得了吗！\n\n但我又经过了一番缜密的思考：这个教程又叫我创建了一个名叫totop.js的文件，难道只加载jQuery.js，不加载这个吗？最后的结论是：两个都加上！\n\n然后就好了！！（其实最后分别把两个文件名注释掉进行试验，发现起作用的只有jQuery.js。）\n\n就这样，这个问题也被我在不明所以的情况下解决了！特别鸣谢我亲爱的男朋友！\n\n## 进阶\n突然（2023-10-18）觉得手机上的“回到顶部”图标太大了，于是想到修改代码。我分别下载了长宽为48px和32px的图标，分别命名为back-top-48.png和back-top-32.png，保存到/themes/light/source/imgs目录下。\n\n将totop.ejs的代码修改如下：\n```javascript\n<div id=\"totop\" style=\"position:fixed;bottom:20px;right:30px;cursor: pointer;\">\n    <a title=\"返回顶部\">\n        <img src=\"/imgs/back-top-32.png\" class=\"back-top-small\"/>\n        <img src=\"/imgs/back-top-48.png\" class=\"back-top-large\"/>\n    </a>\n</div>\n```\n\n在任意CSS文档里添加如下代码：\n```css\n.back-top-large {\n    display: none;\n}\n\n@media (min-width: 1281px) {\n    .back-top-small {\n        display: none;\n    }\n    .back-top-large {\n        display: block;\n    }\n}\n```\n\nJS代码无需修改。\n\n部署后发现，手机端出现了一大一小两个图标！电脑端正常。\n\n![IMG_4970](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/6686b688-6978-4c33-a5f1-0dac5056f8f1)\n\n排查发现，手机开启无痕浏览模式时显示正常。大概是缓存问题。于是清理缓存，问题解决。\n\n## 再进阶\n这个“回到顶部”的设置是，在页面没有滚动到指定高度时，按钮不显示；只有在页面滚动了一阵之后，按钮才出现。这本身没问题。问题在于在页面没有滚动到指定高度时，按钮并不是隐藏了，而只是变得透明了，仍然可以点击。有时候会误触，很难受，遂修改totop.js的代码：\n```javascript\n(function($) { \n    // When to show the scroll link\n    // higher number = scroll link appears further down the page \n    var upperLimit = 1000; // 您可以根据需要调整此值\n    \n    // Our scroll link element\n    var scrollElem = $('#totop'); \n    \n    // Scroll to top speed\n    var scrollSpeed = 500; \n    \n    // Hide the scroll to top link initially\n    scrollElem.hide();\n    \n    $(window).scroll(function () { \n        var scrollTop = $(document).scrollTop(); \n        if (scrollTop > upperLimit) {\n            $(scrollElem).stop().fadeIn(300); // fade in\n        } else { \n            $(scrollElem).stop().fadeOut(300); // fade out and hide\n        }\n    });\n    \n    // Scroll to top animation on click\n    $(scrollElem).click(function(){\n        $('html, body').animate({scrollTop:0}, scrollSpeed); return false;\n    });\n})(jQuery);\n```\n问题解决。\n\n## 再再进阶\n由于PNG格式的图片显示起来不太清楚，社友茨月建议我使用svg格式。于是修改totop.ejs代码如下：\n```javascript\n<div id=\"totop\" style=\"position:fixed;bottom:20px;right:30px;cursor: pointer;\">\n    <a title=\"返回顶部\">\n        <svg t=\"1697771647324\" class=\"icon back-top-svg\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2324\" width=\"32px\" height=\"32px\">\n            <path d=\"M946.494 754.216c19.445-19.445 19.445-51.265 0-70.711L547.355 284.368c-19.445-19.445-51.265-19.445-70.711 0L77.506 683.506c-19.445 19.445-19.445 51.265 0 70.711\" p-id=\"2325\" fill=\"#8a8a8a\"></path>\n        </svg>\n    </a>\n</div>\n\n<style>\n    .back-top-svg {\n        width: 32px; /* or any size you want */\n        height: 32px; /* or any size you want */\n    }\n\n    /* You can also use media queries to change the size based on screen width */\n    @media (min-width: 768px) {\n        .back-top-svg {\n            width: 48px;\n            height: 48px;\n        }\n    }\n</style>\n```\n并删除CSS文档里的代码。\n\n# 订阅\n\n添加了订阅功能。主要参考的教程是[这个](https://zhuanlan.zhihu.com/p/392900543)（生成RSS订阅文件）和[这个](https://backendology.com/2018/08/31/hugo-newsletter/)（自动发送邮件），实现后者使用的是[TinyLetter](https://app.tinyletter.com/)和[Zapier](https://zapier.com/)。过程中居然没出什么岔子，唯一的问题是我在测试订阅链接的时候，输入了清华邮箱想要订阅，结果一直收不到确认邮件。过了半个小时之后终于收到了，不过这时候我已经全部弄好了。\n\n~~那么，欢迎[订阅](https://tinyletter.com/greendolphindance)！~~\n\n2023-10-10更新：靠，订阅挂掉了，TinyLetter不知道为什么把我的账号ban掉了。我又从社友处了解到RSS订阅也可以采取邮件推送的形式，比如使用[Briefcake](https://app.briefcake.com)。所以就这样吧，请使用RSS订阅。\n\n# 留言板\n\n添加了留言板功能。起初搜了一些教程，但都是教你怎么建立Guestbook页面的，没有说怎么把留言板放到新页面里面去。所以自己动手吧！\n\n首先建立新页面，在博客根目录下执行：\n\n`hexo new page guestbook`\n\n然后进去把layout改成guestbook。所以我们现在需要一个叫guestbook的layout。在/greendolphindance/themes/Chic/layout里建一个叫guestbook.ejs的文档，然后把giscus上生成的代码块粘贴进去。完成了！\n\n不过怎么有点丑？这个评论框和网页是等宽的。所以接下来要调整它的宽度并且把它居中。html语法我是一点不会，于是求助了我亲爱的男朋友，他告诉了我宽度怎么调，但让我自己查居中怎么调（让我考考你.jpg）。然后我就查到了，其实很简单，用\n\n`<div style=\"width:80%; margin:auto;\">`\n\n和\n\n`</div>`\n\n把代码包起来就行了。\n\n## 进阶\n\n之前留言板的宽度设置为80%，电脑和手机端一样。这样的话，手机端似乎就有些太窄了。我想实现“电脑端宽度为80%，手机端宽度为100%”，怎么办呢？\n\n突然想起之前开了GPT-4。问问ChatGPT吧！\n\n<img width=\"845\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d81bf1e9-ded7-4abd-9be5-40399cc69d2c\">\n\n用GPT给的代码替换掉layout文件夹里原来文档中的代码，立刻解决了（后来觉得不好看，又把手机端的宽度改成了95%）。难道我真的是天才？\n\n然后发现给的代码是错的……它直接把整个网页的宽度变成了80%和95%，导致菜单之类的东西都挤到一起了。所以又追问了一下：\n\n<img width=\"813\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/53638a87-5764-4a14-86e0-480918d24946\">\n\n这样就好了。学到了！\n## 再进阶\n今天（2023-10-17）想到留言板应该和文章等宽。用网页检查器查到电脑端和iPad端宽度都是780px，手机端是370.67px，于是修改<head>部分的代码如下：\n```html\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Your Webpage</title>\n    <style>\n        .comment-box {\n            width: 100%;\n            max-width: 780px; /* 适用于桌面和横屏 iPad */\n            margin: auto; /* 居中显示 */\n        }\n\n        /* 适用于竖屏 iPad 和手机 */\n        @media (max-width: 1024px), (orientation: portrait) {\n            .comment-box {\n                width: 100%;\n                max-width: 780px;\n                margin: auto;\n            }\n        }\n\n        /* 适用于手机（横屏和竖屏） */\n        @media (max-width: 767px) {\n            .comment-box {\n                width: 100%;\n                max-width: 370.67px;\n                margin:auto;\n            }\n        }\n\n        body {\n            background-color: white;\n            color: black;\n        }\n        \n    </style>\n</head>\n```\n然后还是不对，因为手机竖屏时文章的宽度会根据手机型号的不同而不同。所以似乎需要找到一个相对宽度。我查找了iPhone SE、iPhone XR和iPhone 12 Pro上的文章宽度，并让ChatGPT根据手机尺寸进行计算：\n\n> - iPhone SE: 345.67 / 375 ≈ 0.922\n> - iPhone XR: 384.67 / 414 ≈ 0.929\n> - iPhone 12 Pro: 360.67 / 390 ≈ 0.925\n\n于是取了大致的中间值0.925。然后代码有点乱，又整理了一下，最后的成品是：\n```html\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Green Doplhin Dance</title>\n<style>\n    .comment-box {\n        width: 100%;\n        max-width: 780px; /* 适用于桌面和横屏 iPad */\n        margin: auto; /* 居中显示 */\n    }\n\n    /* 适用于屏幕宽度小于 767px 的所有设备，无论横屏还是竖屏 */\n    @media (max-width: 767px) {\n        .comment-box {\n            width: 92.5%; /* 相对于设备宽度的 92.5% */\n            margin: auto; /* 居中显示 */\n        }\n    }\n</style>\n</head>\n```\n其实最好还是找到不同手机型号文章宽度的规律，但是我不知道怎么找。只好用一个近似值了。但我这个代码也挺简洁的，而且显示效果八九不离十。\n# 域名\n\n一开始决定建博客的时候，没想到付出了如此巨大的努力。为了让自己的努力得到回报，奖励自己一个域名吧！\n\n在[Godaddy](https://www.godaddy.com/en-sg)上买了一个域名，用找券插件找了一个优惠券，竟然只花了$1.17（一年）。开始配置吧——\n\n果不其然，配置失败！页面404。\n\n首先参考的是[这个教程](https://www.jianshu.com/p/da20ddc03cdf)。配置好后，GitHub上的Pages页显示DNS check successful，但是网站打不开。然后我查到了[这个](https://blog.csdn.net/i_do_not_know_you/article/details/105594269)，上面说要添加的IP地址不是一个，而是四个。IP地址可以在GitHub的[这个](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site)官方页面找到。那就加吧！加了四个name为“@”的，还是404。\n\n这个时候Godaddy的DNS页面上有四个name为@的项目和一个name为www的项目。此时我已经精神错乱，想着这个www好难受啊，删了算了，于是把它删掉了。\n\n然后GitHub的Pages页面上的DNS check突然就不行了！\n\n这让我灵机一动，会不会应该添加的name不是@，而是www呢？于是一鼓作气用www作为name添加了四个IP地址。\n\n还是不行。我垂头丧气，决定先放它一放。\n\n过了大概十五分钟，我随便刷新了一下，突然就好了！\n\n然后我在GitHub的那个官方页面上看到这么一句话：\n\n> **Note:** DNS changes can take up to 24 hours to propagate.\n\n所以其实只是等一下就好了吗！我折腾了这么久，结果不知道起作用的究竟是我的折腾还是我的等待。因为太麻烦了，我也不想去测试，所以就这样吧。暂时没有很强的求知精神。\n\n刚发现换了新域名之后评论全都消失了！冷静下来瞬间发现了问题出在哪里。把GitHub的Discussion相应标题里的“greendolphindance.github.io“改成”greendolphindance.com“就好了。\n\n# 博文整理\n\n今天（2023-10-10）一早起来，突发奇想想把本地的所有博文放在一个以年份命名的文件夹里。但是这好像会改变文章的URL，再次导致评论消失，怎么办呢？\n\n答案在[这里](https://prinsss.github.io/hexo-posts-in-subfolder/)。只需要看文章的开头就可以了，开头是此文评论区提到的简便方法，其余的都是作者在瞎折腾。方法很简单，只需要在根目录下的\\_config.yml中搜索“new_post_name“，在相应位置改成`new_post_name: :year/:title.md`就可以了，其他地方不用改，也就是保持permalink那一行为`permalink: :name/ `。\n\n这样，就可以在不改变文章URL的前提下，把本地的博文按年份分类啦。\n\n# 音乐\n\n在About页面添加了一个[歌单](https://music.163.com/#/playlist?id=8793002560)。参考了[这个](https://blog.csdn.net/weixin_58068682/article/details/116612364)教程，尤其是“为博客添加音乐页面”小标题下的内容。方法很简单，安装[hexo-tag-aplayer](https://github.com/MoePlayer/hexo-tag-aplayer)插件并根据教程配置好，然后把以下这段代码\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css\"> \n<script src=\"https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js\"></script> \n<script src=\"https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js\"></script>\n{% meting \"7868005687\" \"tencent\" \"playlist\" \"theme:#555\" \"mutex:true\" \"listmaxheight:1000px\" \"preload:auto\" %}\n```\n\n中的“7868005687”和“tencent”分别改成我自己歌单的ID和“netease”，然后放入/greendolphindance/source/about/index.md内即可。\n\n# 夜间模式\n\n## 评论框的夜间模式\n\n本来一切都好好的，直到我在guestbook页面点开了夜间模式。漆黑的背景和惨白的评论框形成的鲜明对比，让我再也坐不住了。\n\n我的需求：我想使用giscus的noborder主题，同时又想让它跟随网页的色彩模式。没有现成的东西可抄，我得自己写。谁要自己写！问问ChatGPT吧！\n\n反复询问ChatGPT，失败无数次，终于被我问出了正确的代码：\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js\"></script>\n{% meting \"7868005687\" \"tencent\" \"playlist\" \"theme:#555\" \"mutex:true\" \"listmaxheight:1000px\" \"preload:auto\" %}\n<script>\n\tdocument.addEventListener('DOMContentLoaded', function() {\n\tfunction changeGiscusTheme() {\n\tconst theme = document.body.classlist.contains('dark-theme') ? 'dark' : 'light';\n\tfunction sendMessage (message) {\n\tconst iframe = document.querySelector('iframe.giscus-frame');\n\tif (liframe) return;\n\tiframe.contentWindow postMessage(f giscus: message }, 'https://giscus.app');\n\t}\n\tsendMessage ( {\n\tsetConfig: {\n\t｝\n\ttheme: theme === 'dark' ? 'noborder_dark' : 'noborder_light'\n\t｝）：\n\t｝\n\t// Initialize the theme when the page loads\n\tchangeGiscusTheme ();\n\t// Create a mutation observer to watch for changes to the body's class list\n\tconst observer = new MutationObserver(function(mutations) {\n\tmutations. forEach(function(mutation) {\n\tif (mutation.attributeName === 'class') {\n\tchangeGiscusTheme () ;\n\t｝\n\t});\n\t3);\n\t// Start observing the body for changes to the class attribute\n\tobserver observe (document. body, { attributes: true });\n\t｝）；\n</script>\n```\n\n将这段代码插入post.ejs和guestbook.ejs中的`</body>`前面即可。\n\n其中后半截代码是没有用的……是我在调试成功之后发现，如果本身打开了网页的夜间模式，再进入guestbook时，giscus是不会转换成夜间模式的。要关掉网页的夜间模式再打开，giscus才会是夜间模式。问了ChatGPT，给了我后半截代码，但是输进去还是这样。暂时放弃了，哪天闲的时候再调试吧。\n\n2023-10-12更新：明明很忙，还是手痒来调试了。花了大量时间成功了。解决方法可以看[这个页面](https://github.com/giscus/giscus/issues/1200)。\n\n啊啊啊还是没解决，电脑端好了，但是手机端还有相同的问题……我又把这个issue reopen了。\n\n2023-10-13更新：勉强解决了。我已经无力复盘了，所以以下是ChatGPT的总结：\n\n> ### 问题概述\n>\n> 当使用夜间模式切换器在桌面端切换网站的颜色模式时，嵌入的 Giscus 评论区的颜色模式也会相应地切换。然而，在移动端，尽管网站的颜色模式已切换，评论区的颜色模式却保持不变。\n>\n> ### 尝试（未成功）的解决方法\n>\n> 1. **使用 JavaScript 监听颜色模式切换并刷新评论区**\n>\n>    尝试使用 JavaScript 代码来监听颜色模式的切换，并在切换发生时刷新 Giscus 评论区。这在桌面端有效，但在移动端无效。\n>\n> 2. **使用双 iframe 切换**\n>\n>    考虑了一种方法，即在页面上放置两个 Giscus 评论区的 iframe（一个用于夜间模式，一个用于日间模式），并在颜色模式切换时在它们之间切换。这个方法被认为过于复杂且可能影响页面性能，因此没有进一步尝试。\n>\n> 3. **尝试修改 Giscus 的源代码**\n>\n>    考虑直接修改 Giscus 的源代码来解决问题。然而，由于 Giscus 是一个第三方服务，我们无法直接修改其源代码。\n>\n> ### 成功的解决方法\n>\n> 1. **确定正确的移动端切换按钮选择器**\n>\n>    通过检查 HTML 代码，我们发现移动端的颜色模式切换按钮使用了一个 `id`（`mobile-toggle-theme`）而非 `class`。因此，我们需要使用正确的选择器来选中这个元素。\n>\n> 2. **使用 JavaScript 刷新页面**\n>\n>    当颜色模式切换时，我们使用 JavaScript 来刷新整个页面，而不仅仅是评论区。这样，评论区会在新的颜色模式下重新加载。\n>\n> ### 最终的代码实现\n>\n> 在你的 HTML 或 JavaScript 文件中，添加以下代码：\n>\n> ```javascript\n> document.addEventListener('DOMContentLoaded', function () {\n>     // 找到桌面端切换颜色模式的按钮\n>     const toggleDesktop = document.querySelector('label[for=\"switch_default\"]');\n>     // 找到移动端切换颜色模式的按钮\n>     const toggleMobile = document.querySelector('#mobile-toggle-theme'); // 使用了 ID 选择器\n> \n>     // 定义一个函数来处理颜色模式的切换和页面刷新\n>     function handleToggle() {\n>         location.reload();\n>     }\n> \n>     // 如果找到了桌面端的按钮，为其添加点击事件监听器\n>     if (toggleDesktop) {\n>         toggleDesktop.addEventListener('click', handleToggle);\n>     }\n> \n>     // 如果找到了移动端的按钮，为其添加点击事件监听器\n>     if (toggleMobile) {\n>         toggleMobile.addEventListener('click', handleToggle);\n>     }\n> });\n> ```\n>\n> 这段代码首先尝试选中桌面端和移动端的颜色模式切换按钮。一旦按钮被点击，`handleToggle` 函数会被调用，刷新整个页面。这样，无论在桌面端还是移动端，评论区都会在新的颜色模式下重新加载。\n>\n> 希望这个总结能够清晰地反映整个问题解决的过程！如果你有任何进一步的问题或疑虑，随时告诉我！\n\n这个方案是我想出来的，异常丑陋，因为它导致切换主题的时候整个页面都会被刷新……不过我也没有更好的办法。所以先这样吧。想把这个方案放到GitHub Issue上去，但不close，看看有没有人有更好的方式。\n\n它给我的代码和它自己总结的有点不一样，是长下面这样：\n\n```html\n<script>\ndocument.addEventListener('DOMContentLoaded', function () {\n    function getGiscusTheme() {\n        const theme = document.body.classList.contains('dark-theme') ? 'dark' : 'light';\n        return theme === 'dark' ? 'noborder_dark' : 'noborder_light';\n    }\n\n    function setGiscusTheme() {\n        function sendMessage(message) {\n            const iframe = document.querySelector('iframe.giscus-frame');\n            if (!iframe) return;\n            iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');\n        }\n        sendMessage({\n            setConfig: {\n                theme: getGiscusTheme(),\n            },\n        });\n    }\n\n    function handleToggle() {\n        location.reload();\n    }\n\n    // Update giscus theme when theme switcher is clicked\n    const toggleDesktop = document.querySelector('label[for=\"switch_default\"]');\n    const toggleMobile = document.querySelector('#mobile-toggle-theme');\n\n    if (toggleDesktop) {\n        toggleDesktop.addEventListener('click', function() {\n            setGiscusTheme();\n        });\n    }\n\n    if (toggleMobile) {\n        toggleMobile.addEventListener('click', function() {\n            handleToggle();\n        });\n    }\n\n    // Wait for 1000ms (1 second) before loading the Giscus comments to ensure theme is set\n    setTimeout(() => {\n        const giscusAttributes = {\n            \"src\": \"https://giscus.app/client.js\",\n            \"data-repo\": \"greendolphindance/greendolphindance.github.io\",\n            \"data-repo-id\": \"R_kgDOKc-MwA\",\n            \"data-category\": \"General\",\n            \"data-category-id\": \"DIC_kwDOKc-MwM4CZ8oe\",\n            \"data-mapping\": \"url\",\n            \"data-strict\": \"0\",\n            \"data-reactions-enabled\": \"1\",\n            \"data-emit-metadata\": \"0\",\n            \"data-input-position\": \"top\",\n            \"data-theme\": getGiscusTheme(),\n            \"data-lang\": \"zh-CN\",\n            \"crossorigin\": \"anonymous\",\n        };\n\n        // Dynamically create script tag\n        const giscusScript = document.createElement(\"script\");\n        Object.entries(giscusAttributes).forEach(([key, value]) => giscusScript.setAttribute(key, value));\n\n        // Append the script tag to the <article> element\n        document.querySelector('article').appendChild(giscusScript);\n    }, 1000);\n});\n\n</script>\n\n```\n\n然后我突然灵光一现，试着把中间的两个“if”里面的内容改成：\n\n```html\n   if (toggleDesktop) {\n        toggleDesktop.addEventListener('click', function() {\n            setGiscusTheme();\n        });\n    }\n\n    if (toggleMobile) {\n        toggleMobile.addEventListener('click', function() {\n            setGiscusTheme();\n        });\n    }\n```\n\n再deploy。然后就好了！不用刷新，评论框也会随着主题变化而改变颜色！可是我根本不知道为什么它就work了！\n\n## 歌单的夜间模式\n\n（这部分内容向社友neruko请教了很多，特别感谢！）\n\nAPlayer这个插件本来是没有夜间模式的，所以要自己弄一个。播放器块状部分和线状部分（边框等）的颜色需要分别指定。在About页面的index.md将歌单的代码改为如下：\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css\">   \n\n<style>\nbody {\n    transition: background-color 0.3s, color 0.3s; /* Smooth transition */\n}\n/* Light mode styles (default) */\nbody {\n    background-color: #ffffff;\n    color: #000000;\n}\n\n\n/* Dark mode styles */\nbody.dark-theme {\n    background-color: #292a2d;\n    color: #ffffff;\n}\n\n/* APlayer styles for light mode */\nbody .aplayer-body,\nbody .aplayer-info,\nbody .aplayer-notice,\nbody .aplayer-list {\n    background-color: #ffffff;\n}\n\n/* APlayer styles for dark mode */\nbody.dark-theme .aplayer-body,\nbody.dark-theme .aplayer-info,\nbody.dark-theme .aplayer-notice,\nbody.dark-theme .aplayer-list {\n    background-color: #292a2d;\n\n}\n\nbody.dark-theme .aplayer .aplayer-list .aplayer-list-light {\n    background-color: #505254 !important; \n}\n\nbody.dark-theme .aplayer .aplayer-list ol li:hover {\n    background: #414345; /* 或者你想要的其他颜色 */\n}\n\nbody.dark-theme .aplayer .aplayer-list ol li {\n    border-top: 1px solid #414345; /* 或者你想要的其他颜色 */\n}\n\nbody.dark-theme .aplayer-lrc::before,\nbody.dark-theme .aplayer-lrc::after {\n    background: linear-gradient(to bottom, #292a2d, #292a2d); /* 使用和背景相同的颜色 */\n}\n\nbody.dark-theme .aplayer-list-cur {\n    background-color: #aaaaaa !important;\n}\n\nbody.dark-theme .aplayer .aplayer-icon-volume-down:hover path,\nbody.dark-theme .aplayer .aplayer-icon-order:hover path,\nbody.dark-theme .aplayer .aplayer-icon-loop:hover path,\nbody.dark-theme .aplayer .aplayer-icon-menu:hover path {\n    fill: #eeeeee !important;\n}\n\nbody.dark-theme  .aplayer-info {\n    border-bottom: none !important;\n}\n\nbody.dark-theme .aplayer {\n    box-shadow: 0 2px 4px 0 rgba(170, 170, 170, 0.2), 0 3px 10px 0 rgba(170, 170, 170, 0.19) !important;\n}\n\n</style>\n\n<script src=\"https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js\"></script>   \n<script src=\"https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js\"></script>   \n\n{% meting \"8793002560\" \"netease\" \"playlist\" \"theme:#555\" \"mutex:true\" \"listmaxheight:2000px\" \"preload:auto\" %}\n\n```\n\n有很多乱七八糟的代码……都是我发现样式不对然后临时加上一些。然后似乎是在script.js的最后插入如下代码，但是由于我看不太懂，我也不清楚是不是确实是如下代码：\n\n```javascript\ndocument.ready(\n    // toggleTheme function.\n    // this script shouldn't be changed.\n    () => {\n        var _Blog = window._Blog || {};\n        const currentTheme = window.localStorage && window.localStorage.getItem('theme');\n        const isDark = currentTheme === 'dark';\n        const pagebody = document.getElementsByTagName('body')[0]\n        if (isDark) {\n            document.getElementById(\"switch_default\").checked = true;\n            // mobile\n            document.getElementById(\"mobile-toggle-theme\").innerText = \"· Dark\"\n        } else {\n            document.getElementById(\"switch_default\").checked = false;\n            // mobile\n            document.getElementById(\"mobile-toggle-theme\").innerText = \"· Light\"\n        }\n        _Blog.toggleTheme = function () {\n            if (isDark) {\n                pagebody.classList.add('dark-theme');\n                // mobile\n                document.getElementById(\"mobile-toggle-theme\").innerText = \"· Dark\"\n            } else {\n                pagebody.classList.remove('dark-theme');\n                // mobile\n                document.getElementById(\"mobile-toggle-theme\").innerText = \"· Light\"\n            }\n            document.getElementsByClassName('toggleBtn')[0].addEventListener('click', () => {\n                if (pagebody.classList.contains('dark-theme')) {\n                    pagebody.classList.remove('dark-theme');\n                } else {\n                    pagebody.classList.add('dark-theme');\n                }\n                window.localStorage &&\n                window.localStorage.setItem('theme', document.body.classList.contains('dark-theme') ? 'dark' : 'light',)\n            })\n            // moblie\n            document.getElementById('mobile-toggle-theme').addEventListener('click', () => {\n                if (pagebody.classList.contains('dark-theme')) {\n                    pagebody.classList.remove('dark-theme');\n                    // mobile\n                    document.getElementById(\"mobile-toggle-theme\").innerText = \"· Light\"\n\n                } else {\n                    pagebody.classList.add('dark-theme');\n                    // mobile\n                    document.getElementById(\"mobile-toggle-theme\").innerText = \"· Dark\"\n                }\n                window.localStorage &&\n                window.localStorage.setItem('theme', document.body.classList.contains('dark-theme') ? 'dark' : 'light',)\n            })\n        };\n        _Blog.toggleTheme();\n        // ready function.\n    }\n);\n```\n\n应该就可以了……吧。我也不是很确定。请原谅我这个简陋的总结……\n\n## About页面夜间模式时的字体颜色\n\n突然发现About页面在夜间模式的字体是惨白色，不仅不好看，而且和其中的链接的颜色相同，不像日间模式的时候是文字黑色、链接蓝色。参考Posts中的颜色，发现在夜间模式时，标题和正文的字体颜色是#a9a9b2，链接颜色是白色。于是想统一一下颜色。\n\n根据ChatGPT的指导，在custom.styl中插入如下代码：\n\n```css\nbody.dark-theme .post-title {\n    color: #a9a9b2;\n}\n\nbody.dark-theme .post-content {\n    color: #a9a9b2;\n}\n\n```\n\n即可。\n\n## 夜间模式随系统颜色模式开启\n\n在/js/script.js中添加如下代码：\n\n```javascript\nwindow.onload = function() {\n    const themeToggleCheckbox = document.getElementById('switch_default');\n    const themeToggleButton = document.getElementById('mobile-toggle-theme');\n\n    // 检测用户的系统主题偏好\n    const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    // 根据用户的系统主题偏好设置 toggle 的状态和 body 的类\n    if (userPrefersDark) {\n        document.body.classList.add('dark-theme');\n        themeToggleCheckbox.checked = true; // 设置 toggle 为打开状态\n        themeToggleButton.textContent = '· Dark'; // 设置按钮文本\n    } else {\n        document.body.classList.remove('dark-theme');\n        themeToggleCheckbox.checked = false; // 设置 toggle 为关闭状态\n        themeToggleButton.textContent = '· Light'; // 设置按钮文本\n    }\n\n    // 当用户手动切换 toggle 时，更新颜色模式\n    themeToggleCheckbox.addEventListener('change', function() {\n        document.body.classList.toggle('dark-theme', themeToggleCheckbox.checked);\n    });\n};\n\n```\n\n其中包括电脑端和移动端。一开始踩了个坑是在同一个页面中用了两个“window.onload”函数，结果前一个被后一个覆盖了。然后把两个合并成一个，就修好了。注释很详细，其中一部分代码是用于在网页随系统自动切换成夜间模式的时候，让Toggle呈打开状态（或是在移动端时，显示“Dark”）。一点小小强迫症。\n\n\n### 夜间模式下切换页面时发生白色闪烁\n这个问题虽然解决了，但是从日间自动切换到夜间模式的速度很慢，表现为屏幕会闪烁一下白色。问了ChatGPT，按道理来说这个不应该用JavaScript改，应该直接在CSS里面改，不过我懒得再重新研究了，于是问GPT能不能在我JavaScript代码的基础上进行优化。它给了这么一段代码：\n```javascript\ndocument.addEventListener('DOMContentLoaded', function() {\n    const themeToggleCheckbox = document.getElementById('switch_default');\n    const themeToggleButton = document.getElementById('mobile-toggle-theme');\n\n    // 检测用户的系统主题偏好\n    const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    // 根据用户的系统主题偏好设置 toggle 的状态和 body 的类\n    if (userPrefersDark) {\n        document.body.classList.add('dark-theme');\n        themeToggleCheckbox.checked = true; // 设置 toggle 为打开状态\n        themeToggleButton.textContent = '· Dark'; // 设置按钮文本\n    } else {\n        document.body.classList.remove('dark-theme');\n        themeToggleCheckbox.checked = false; // 设置 toggle 为关闭状态\n        themeToggleButton.textContent = '· Light'; // 设置按钮文本\n    }\n\n    // 当用户手动切换 toggle 时，更新颜色模式\n    themeToggleCheckbox.addEventListener('change', function() {\n        document.body.classList.toggle('dark-theme', themeToggleCheckbox.checked);\n        themeToggleButton.textContent = themeToggleCheckbox.checked ? '· Dark' : '· Light'; // 更新按钮文本\n    });\n});\n```\n改过之后还是有白色闪烁，不过加载速度是快一点了。\n\n### 新的问题\n结果又有了别的问题……在系统为夜间模式的情况下，将按钮调到日间模式，页面变白。但是当点击链接跳转到其他页面时，页面又会转为黑色。所以又让GPT生成了新的代码：\n\n```javascript\ndocument.addEventListener('DOMContentLoaded', function() {\n    const themeToggleCheckbox = document.getElementById('switch_default');\n    const themeToggleButton = document.getElementById('mobile-toggle-theme');\n\n    // 检测用户的系统主题偏好\n    const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    // 根据用户的系统主题偏好设置 toggle 的状态和 body 的类\n    if (userPrefersDark) {\n        document.body.classList.add('dark-theme');\n        themeToggleCheckbox.checked = true; // 设置 toggle 为打开状态\n        themeToggleButton.textContent = '· Dark'; // 设置按钮文本\n    } else {\n        document.body.classList.remove('dark-theme');\n        themeToggleCheckbox.checked = false; // 设置 toggle 为关闭状态\n        themeToggleButton.textContent = '· Light'; // 设置按钮文本\n    }\n\n    // 当用户手动切换 toggle 时，更新颜色模式\n    themeToggleCheckbox.addEventListener('change', function() {\n        document.body.classList.toggle('dark-theme', themeToggleCheckbox.checked);\n        themeToggleButton.textContent = themeToggleCheckbox.checked ? '· Dark' : '· Light'; // 更新按钮文本\n    });\n});\n```\n\n似乎暂时解决了问题。\n\n### 白色闪烁2\n（2023-10-19）又折腾了，想让GPT把相同的逻辑在ejs文件里操作完成，而不是js文件里，从而看看能不能减少闪烁。GPT给出的建议是：\n\n> 将 JavaScript 逻辑放在 HTML 文档的 `<head>` 部分，并直接在其中执行（而不是等待 DOMContentLoaded 事件），可能会帮助减少页面加载时的闪烁。以下是如何在 HTML 文档的 `<head>` 部分内嵌此逻辑的示例：\n> ```html\n> <!DOCTYPE html>\n> <html lang=\"<%= config.language %>\">\n> \n> <head>\n>     <%- partial('_partial/head',{cache: true}) %>\n>     <script>\n>         (function() {\n>             const savedTheme = sessionStorage.getItem('theme');\n>             const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n>             const useDarkMode = savedTheme ? savedTheme === 'dark' : userPrefersDark;\n> \n>             if (useDarkMode) {\n>                 document.documentElement.style.backgroundColor = '#121212'; // 临时背景色，可以根据你的暗主题颜色进行更改\n>                 document.documentElement.classList.add('dark-theme');\n>             }\n>         })();\n>     </script>\n> </head>\n> \n> <body>\n>     <!-- 页面内容 -->\n> \n>     <script>\n>         document.addEventListener('DOMContentLoaded', function() {\n>             const themeToggleCheckbox = document.getElementById('switch_default');\n>             const themeToggleButton = document.getElementById('mobile-toggle-theme');\n> \n>             themeToggleCheckbox.addEventListener('change', function() {\n>                 const isDark = themeToggleCheckbox.checked;\n>                 document.body.classList.toggle('dark-theme', isDark);\n>                 themeToggleButton.textContent = isDark ? '· Dark' : '· Light';\n>                 sessionStorage.setItem('theme', isDark ? 'dark' : 'light');\n>             });\n>         });\n>     </script>\n> </body>\n> \n> </html>\n> ```\n> 在这里，我做了几个改动：\n> \n> 1. 我在 `<head>` 中直接执行了一个自执行的函数，该函数会尽快地（在 DOM 完全加载之前）设置页面的主题。\n> 2. 我还设置了 <a class=\"break-link no-style\"> `document.documentElement.style.backgroundColor` </a>，这可以更快地显示正确的背景颜色，减少从默认背景色到暗主题背景色的转变所导致的闪烁。\n> \n> 你可以根据自己网站的暗主题背景颜色修改临时背景色。希望这可以帮助减少闪烁问题！\n\n改完之后体感闪烁变成了有时候有，有时候没有。于是又采纳了社友nekobus的建议：\n\n> 把css里面的transition去掉\n\n于是把base.styl里有关transition的代码都删除了。删除之后，闪烁时屏幕为白色的时间缩短了，也就是闪得更快了。\n\n虽然还是没有完全解决问题，但是折腾了这么久，有这个结果我也很是欣慰了……以后看看还有没有优化的空间吧。\n\n### 从头再来\n2023-10-20更新：草，昨天博客崩了……修好之后上面的代码出问题了，只好又弄了一个，暂时还算是正确的？\n\n```html\n<script>\n    (function() {\n        // 在页面加载时根据存储的主题或用户的系统偏好设置主题\n        const savedTheme = sessionStorage.getItem('theme') || localStorage.getItem('theme');\n        const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n        const useDarkMode = savedTheme ? savedTheme === 'dark' : userPrefersDark;\n\n        if (useDarkMode) {\n            document.documentElement.classList.add('dark-theme');\n        }\n    })();\n\n    document.addEventListener('DOMContentLoaded', function() {\n        const themeToggleMobile = document.getElementById('mobile-toggle-theme');\n\n        function updateButtonText(isDark) {\n            themeToggleMobile.textContent = isDark ? '· Dark' : '· Light';\n        }\n\n        function toggleTheme() {\n            const isDark = document.documentElement.classList.toggle('dark-theme');\n            document.body.classList.toggle('dark-theme', isDark);\n            sessionStorage.setItem('theme', isDark ? 'dark' : 'light');\n            updateButtonText(isDark);\n        }\n\n        // 初始化按钮文本\n        const initialIsDark = document.documentElement.classList.contains('dark-theme');\n        updateButtonText(initialIsDark);\n\n        // 为移动端的切换按钮添加事件监听器\n        themeToggleMobile.addEventListener('click', toggleTheme);\n    });\n</script>\n```\n\n### html元素始终是dark-theme类\n晚上更新：随着夜幕的降临，我的系统切换成了夜间模式，结果……又出现了问题……\n\n![18782d644e33b666eda1c4a6511c6a12](https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/58490fdd-cf76-4fe6-a917-f46236449e27)\n\n啊啊啊啊啊啊啊！！崩溃！\n\n冷静下来开始解决问题。通过网页检查器调试，发现问题可以被表述为：html元素的类属性始终是“dark-theme“。于是开始调教GPT。\n\n现在写prompt愈发熟练，然后又能够看得懂一点代码了，也会了一点调试方法，所以过程虽然曲折（GPT太蠢），但稳步前进。以下是GPT的总结：\n\n> ### 解决问题总结：HTML 仍是夜间模式\n>\n> #### 问题描述\n>\n> 在尝试根据用户的系统偏好和用户切换来动态更改页面主题时，我们遇到了一个问题：即使在用户切换主题后，`html` 元素的类属性仍然被设置为 `dark-theme`。\n>\n> #### 尝试和失败的方法\n>\n> 1. **尝试1：代码位置调整**\n>    \n>    首先尝试将 JavaScript 代码从 `body` 标签移到 `head` 标签，期望在页面加载前更早地应用主题。\n>    \n>    **结果：** `html` 元素仍然保留了 `dark-theme` 类。\n>\n> 2. **尝试2：调整 JavaScript 逻辑**\n>    \n>    尝试通过优化 JavaScript 逻辑来更精确地控制主题的应用，包括在页面加载时就根据存储的用户偏好设置主题。\n>    \n>    **结果：** 调整后，依然没能解决 `html` 元素始终保持 `dark-theme` 类的问题。\n>\n> 3. **尝试3：使用调试语句**\n>    \n>    通过在代码中添加调试语句来尝试找到问题所在，了解代码的实际执行流程和 `html` 元素类属性被修改的时机。\n>    \n>    **结果：** 通过调试，我们了解到了代码的执行情况，但仍然没有解决问题。\n>\n> #### 成功的方法\n>\n> **方法：专注于 `body` 标签并且改进 JavaScript 逻辑**\n>\n> 最终，我们决定集中注意力修改 `body` 元素的类属性，而不是 `html` 元素。同时，我们优化了 JavaScript 代码，使其在页面加载时更准确地根据用户的系统偏好和存储的主题偏好来设置主题。\n>\n> 在实际代码中，我们：\n>\n> - 在 DOM 加载完成后执行 JavaScript 代码。\n> - 首先根据存储的主题偏好设置主题，如果没有存储的偏好，则根据用户的系统偏好设置主题。\n> - 最终成功的代码可以实时响应用户的切换操作，并在用户重新访问页面时记住用户的主题偏好。\n>\n> 这样，我们成功解决了 `html` 元素始终保持 `dark-theme` 类的问题，并确保了网站可以根据用户的偏好和操作实时地、准确地应用日间/夜间模式。\n\n最终写出来的代码是这样的：\n\n```html\n<script>\n    document.addEventListener('DOMContentLoaded', function() {\n        const savedTheme = localStorage.getItem('theme');\n        console.log(\"Saved theme: \", savedTheme); // 输出保存的主题\n\n        const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n        console.log(\"User prefers dark theme: \", userPrefersDark); // 输出用户的系统偏好\n        \n        let useDarkMode;\n        if (savedTheme === 'dark' || savedTheme === 'light') { // 当有明确的保存主题时\n            useDarkMode = savedTheme === 'dark';\n        } else {\n            useDarkMode = userPrefersDark; // 默认使用系统偏好\n        }\n\n        console.log(\"Using dark theme: \", useDarkMode); // 输出是否使用暗主题\n\n        document.body.classList.toggle('dark-theme', useDarkMode); // 应用或移除 dark-theme 类\n\n        const themeToggleCheckbox = document.getElementById('switch_default');\n        if (themeToggleCheckbox) {\n            themeToggleCheckbox.checked = useDarkMode;\n        }\n\n        themeToggleCheckbox.addEventListener('change', function() {\n            const isChecked = themeToggleCheckbox.checked;\n            console.log(\"Checkbox is checked: \", isChecked); // 输出复选框的状态\n            \n            document.body.classList.toggle('dark-theme', isChecked);\n            localStorage.setItem('theme', isChecked ? 'dark' : 'light');\n        });\n    });\n</script>\n```\n\n祈祷不要再出问题了……\n\n### 白色闪烁3\n惊讶地发现移动端已经很少出现白色闪烁了（虽然有时候还是有），但是桌面端的闪烁则仍很频繁。GPT给出了两个方案，我同时采纳了，体感闪烁频率有所减少，而且闪烁速度加快，但还是时不时会有。GPT的总结如下：\n\n> **1. 优先执行主题设置的 JavaScript**:\n>\n>    将处理主题的 JavaScript 代码放在页面 `<head>` 部分并优先执行。这是为了确保在加载和应用其他 CSS 或 JavaScript 之前，根据本地存储或用户的偏好来设置相应的主题。\n>\n>    ```html\n>    <head>\n>        <script>\n>            (function() {\n>                const savedTheme = localStorage.getItem('theme');\n>                const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n>                let useDarkMode = savedTheme ? savedTheme === 'dark' : userPrefersDark;\n>                document.body.classList.toggle('dark-theme', useDarkMode);\n>            })();\n>        </script>\n>    </head>\n>    ```\n>\n> **2. 使用 CSS 隐藏内容**:\n>\n>    如果即便优先执行了主题设置代码仍然出现闪烁，可以考虑暂时使用 CSS 来隐藏页面的内容，直至 JavaScript 代码运行并应用了正确的主题。\n>\n>    ```css\n>    body {\n>        visibility: hidden; /* 初始隐藏内容 */\n>    }\n>    \n>    body.theme-loaded {\n>        visibility: visible; /* JavaScript 设置完主题后显示内容 */\n>    }\n>    ```\n>\n>    在 JavaScript 中，当主题被正确设置后，您可以添加一个类（例如 `theme-loaded`）来显示页面内容。\n>\n>    ```javascript\n>    document.addEventListener('DOMContentLoaded', function() {\n>        const themeToggleCheckbox = document.getElementById('switch_default');\n>\n>        themeToggleCheckbox.addEventListener('change', function() {\n>            const isChecked = themeToggleCheckbox.checked;\n>            document.body.classList.toggle('dark-theme', isChecked);\n>            localStorage.setItem('theme', isChecked ? 'dark' : 'light');\n>        });\n>\n>        document.body.classList.add('theme-loaded'); // 页面加载完成后显示内容\n>    });\n>    ```\n>\n> 这种方式尽可能减少了页面加载时的闪烁，通过在页面结构加载之前就确定并设置好用户的主题偏好。在全部内容加载完毕后再显示，从而避免了主题切换时的闪烁。\n\n好吧，看来这就是我的能力限度了。暂时先这样吧。\n\n# 版权声明\n\n我使用的是CC协议，在[这个](https://chooser-beta.creativecommons.org)网站上生成html代码。生成代码后，我进行了各种调整，包括去掉文字只显示图标、调整footer内容顺序、图标缩小、图标居中等等，把GPT烦死了。弄好之后我的footer.ejs部分内容如下：\n\n```html\n<footer id=\"footer\" class=\"footer\">\n    <div class=\"copyright\">\n        <span>\n            <a href=\"http://creativecommons.org/licenses/by-nc/4.0/?ref=chooser-v1\" target=\"_blank\" rel=\"license noopener noreferrer\" style=\"display:inline-block;\">\n                <img style=\"height:16px!important;margin-left:1px;vertical-align: middle; position: relative; top: -1px;\" src=\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\">\n                <img style=\"height:16px!important;margin-left:1px;vertical-align: middle; position: relative; top: -1px;\" src=\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\">\n                <img style=\"height:16px!important;margin-left:1px;vertical-align: middle; position: relative; top: -1px;\" src=\"https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1\">\n            </a>\n            | Powered by <a href=\"https://hexo.io\" target=\"_blank\">Hexo</a> & <a href=\"https://github.com/Siricee/hexo-theme-Chic\" target=\"_blank\">Chic</a>\n            | <script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script><span id=\"busuanzi_value_site_uv\"></span>\n        </span>\n    </div>\n```\n\n其中图标的垂直位置是手动调的相对位置，因为直接居中的话，图标……居得不是很中。这部分是我的折腾中相对容易的部分了。比较遗憾的是CC协议的图标在夜间模式下比较丑，而且这没法改。\n\n## 颜色修改\n（2023-12-7更新）之前说到CC协议的图标在夜间模式下比较丑，没法改，今天鼓起勇气着手修改，最终成功。思路是先编辑SVG文档，把协议的几个图标中间改为透明色，然后再修改CSS样式，使得在夜间模式下边框颜色为#a9a9b2（夜间模式下文字的颜色）。\n\n其中，修改SVG文档用到的是[这个网站](https://www.svgviewer.dev)。具体的修改是将<circle...\\/>中的fill从原来的\"#FFFFFF\"改成\"none\"。\n\n修改后完整的footer.ejs内容如下：\n\n```html\n<footer id=\"footer\" class=\"footer\">\n    <div class=\"copyright\">\n        <span>\n            <!-- Existing Creative Commons images and links -->\n            <a href=\"http://creativecommons.org/licenses/by-nc/4.0/?ref=chooser-v1\" target=\"_blank\" rel=\"license noopener noreferrer\" style=\"display:inline-block;\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"height:16px; width:16px; margin-left:1px;vertical-align: middle; position: relative; top: -1px;\" class=\"cc-logo\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"5.5 -3.5 64 64\" enable-background=\"new 5.5 -3.5 64 64\" xml:space=\"preserve\">\n                    <g>\n                        <circle fill=\"none\" cx=\"37.785\" cy=\"28.501\" r=\"28.836\"/>\n                        <path d=\"M37.441-3.5c8.951,0,16.572,3.125,22.857,9.372c3.008,3.009,5.295,6.448,6.857,10.314   c1.561,3.867,2.344,7.971,2.344,12.314c0,4.381-0.773,8.486-2.314,12.313c-1.543,3.828-3.82,7.21-6.828,10.143   c-3.123,3.085-6.666,5.448-10.629,7.086c-3.961,1.638-8.057,2.457-12.285,2.457s-8.276-0.808-12.143-2.429   c-3.866-1.618-7.333-3.961-10.4-7.027c-3.067-3.066-5.4-6.524-7-10.372S5.5,32.767,5.5,28.5c0-4.229,0.809-8.295,2.428-12.2   c1.619-3.905,3.972-7.4,7.057-10.486C21.08-0.394,28.565-3.5,37.441-3.5z M37.557,2.272c-7.314,0-13.467,2.553-18.458,7.657   c-2.515,2.553-4.448,5.419-5.8,8.6c-1.354,3.181-2.029,6.505-2.029,9.972c0,3.429,0.675,6.734,2.029,9.913   c1.353,3.183,3.285,6.021,5.8,8.516c2.514,2.496,5.351,4.399,8.515,5.715c3.161,1.314,6.476,1.971,9.943,1.971   c3.428,0,6.75-0.665,9.973-1.999c3.219-1.335,6.121-3.257,8.713-5.771c4.99-4.876,7.484-10.99,7.484-18.344   c0-3.543-0.648-6.895-1.943-10.057c-1.293-3.162-3.18-5.98-5.654-8.458C50.984,4.844,44.795,2.272,37.557,2.272z M37.156,23.187   l-4.287,2.229c-0.458-0.951-1.019-1.619-1.685-2c-0.667-0.38-1.286-0.571-1.858-0.571c-2.856,0-4.286,1.885-4.286,5.657   c0,1.714,0.362,3.084,1.085,4.113c0.724,1.029,1.791,1.544,3.201,1.544c1.867,0,3.181-0.915,3.944-2.743l3.942,2   c-0.838,1.563-2,2.791-3.486,3.686c-1.484,0.896-3.123,1.343-4.914,1.343c-2.857,0-5.163-0.875-6.915-2.629   c-1.752-1.752-2.628-4.19-2.628-7.313c0-3.048,0.886-5.466,2.657-7.257c1.771-1.79,4.009-2.686,6.715-2.686   C32.604,18.558,35.441,20.101,37.156,23.187z M55.613,23.187l-4.229,2.229c-0.457-0.951-1.02-1.619-1.686-2   c-0.668-0.38-1.307-0.571-1.914-0.571c-2.857,0-4.287,1.885-4.287,5.657c0,1.714,0.363,3.084,1.086,4.113   c0.723,1.029,1.789,1.544,3.201,1.544c1.865,0,3.18-0.915,3.941-2.743l4,2c-0.875,1.563-2.057,2.791-3.541,3.686   c-1.486,0.896-3.105,1.343-4.857,1.343c-2.896,0-5.209-0.875-6.941-2.629c-1.736-1.752-2.602-4.19-2.602-7.313   c0-3.048,0.885-5.466,2.658-7.257c1.77-1.79,4.008-2.686,6.713-2.686C51.117,18.558,53.938,20.101,55.613,23.187z\"/>\n                    </g>\n                    </svg>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"height:16px; width:16px; margin-left:1px;vertical-align: middle; position: relative; top: -1px;\" class=\"att-logo\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"5.5 -3.5 64 64\" enable-background=\"new 5.5 -3.5 64 64\" xml:space=\"preserve\">\n                    <g>\n                        <circle fill=\"none\" cx=\"37.637\" cy=\"28.806\" r=\"28.276\"/>\n                        <g>\n                            <path d=\"M37.443-3.5c8.988,0,16.57,3.085,22.742,9.257C66.393,11.967,69.5,19.548,69.5,28.5c0,8.991-3.049,16.476-9.145,22.456    C53.879,57.319,46.242,60.5,37.443,60.5c-8.649,0-16.153-3.144-22.514-9.43C8.644,44.784,5.5,37.262,5.5,28.5    c0-8.761,3.144-16.342,9.429-22.742C21.101-0.415,28.604-3.5,37.443-3.5z M37.557,2.272c-7.276,0-13.428,2.553-18.457,7.657    c-5.22,5.334-7.829,11.525-7.829,18.572c0,7.086,2.59,13.22,7.77,18.398c5.181,5.182,11.352,7.771,18.514,7.771    c7.123,0,13.334-2.607,18.629-7.828c5.029-4.838,7.543-10.952,7.543-18.343c0-7.276-2.553-13.465-7.656-18.571    C50.967,4.824,44.795,2.272,37.557,2.272z M46.129,20.557v13.085h-3.656v15.542h-9.944V33.643h-3.656V20.557    c0-0.572,0.2-1.057,0.599-1.457c0.401-0.399,0.887-0.6,1.457-0.6h13.144c0.533,0,1.01,0.2,1.428,0.6    C45.918,19.5,46.129,19.986,46.129,20.557z M33.042,12.329c0-3.008,1.485-4.514,4.458-4.514s4.457,1.504,4.457,4.514    c0,2.971-1.486,4.457-4.457,4.457S33.042,15.3,33.042,12.329z\"/>\n                        </g>\n                    </g>\n                </svg>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"height:16px; width:16px; margin-left:1px;vertical-align: middle; position: relative; top: -1px;\" class=\"non-logo\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"64px\" height=\"64px\" viewBox=\"5.5 -3.5 64 64\" enable-background=\"new 5.5 -3.5 64 64\" xml:space=\"preserve\">\n                    <g>\n                        <circle fill=\"none\" cx=\"37.47\" cy=\"28.736\" r=\"29.471\"/>\n                        <g>\n                            <path d=\"M37.442-3.5c8.99,0,16.571,3.085,22.743,9.256C66.393,11.928,69.5,19.509,69.5,28.5c0,8.992-3.048,16.476-9.145,22.458    C53.88,57.32,46.241,60.5,37.442,60.5c-8.686,0-16.19-3.162-22.513-9.485C8.644,44.728,5.5,37.225,5.5,28.5    c0-8.762,3.144-16.343,9.429-22.743C21.1-0.414,28.604-3.5,37.442-3.5z M12.7,19.872c-0.952,2.628-1.429,5.505-1.429,8.629    c0,7.086,2.59,13.22,7.77,18.4c5.219,5.144,11.391,7.715,18.514,7.715c7.201,0,13.409-2.608,18.63-7.829    c1.867-1.79,3.332-3.657,4.398-5.602l-12.056-5.371c-0.421,2.02-1.439,3.667-3.057,4.942c-1.622,1.276-3.535,2.011-5.744,2.2    v4.915h-3.714v-4.915c-3.543-0.036-6.782-1.312-9.714-3.827l4.4-4.457c2.094,1.942,4.476,2.913,7.143,2.913    c1.104,0,2.048-0.246,2.83-0.743c0.78-0.494,1.172-1.312,1.172-2.457c0-0.801-0.287-1.448-0.858-1.943l-3.085-1.315l-3.771-1.715    l-5.086-2.229L12.7,19.872z M37.557,2.214c-7.276,0-13.428,2.571-18.457,7.714c-1.258,1.258-2.439,2.686-3.543,4.287L27.786,19.7    c0.533-1.676,1.542-3.019,3.029-4.028c1.484-1.009,3.218-1.571,5.2-1.686V9.071h3.715v4.915c2.934,0.153,5.6,1.143,8,2.971    l-4.172,4.286c-1.793-1.257-3.619-1.885-5.486-1.885c-0.991,0-1.876,0.191-2.656,0.571c-0.781,0.381-1.172,1.029-1.172,1.943    c0,0.267,0.095,0.533,0.285,0.8l4.057,1.83l2.8,1.257l5.144,2.285l16.397,7.314c0.535-2.248,0.801-4.533,0.801-6.857    c0-7.353-2.552-13.543-7.656-18.573C51.005,4.785,44.831,2.214,37.557,2.214z\"/>\n                        </g>\n                    </g>\n                    </svg> \n            </a>\n            | 由 <a href=\"https://hexo.io\" target=\"_blank\">Hexo</a> & <a href=\"https://github.com/Siricee/hexo-theme-Chic\" target=\"_blank\">Chic</a> 驱动\n            | <script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script><span id=\"busuanzi_value_site_uv\"></span>\n            | <!-- Add the SVG logo wrapped in a link -->\n            <a href=\"https://www.travellings.cn/go.html\" target=\"_blank\" style=\"display:inline-block;\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"kaiwang\" height=\"16\" width=\"14\" viewBox=\"0 0 448 512\" style=\"height:16px!important; margin-left:1px; vertical-align: middle; position: relative; top: -1px;\">\n                    <!-- SVG Path -->\n                    <path d=\"M96 0C43 0 0 43 0 96V352c0 48 35.2 87.7 81.1 94.9l-46 46C28.1 499.9 33.1 512 43 512H82.7c8.5 0 16.6-3.4 22.6-9.4L160 448H288l54.6 54.6c6 6 14.1 9.4 22.6 9.4H405c10 0 15-12.1 7.9-19.1l-46-46c46-7.1 81.1-46.9 81.1-94.9V96c0-53-43-96-96-96H96zM64 128c0-17.7 14.3-32 32-32h80c17.7 0 32 14.3 32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V128zM272 96h80c17.7 0 32 14.3 32 32v96c0 17.7-14.3 32-32 32H272c-17.7 0-32-14.3-32-32V128c0-17.7 14.3-32 32-32zM64 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm288-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"/>\n                </svg>\n            </a>\n        </span>\n    </div>\n\n    <style>\n        .dark-theme .kaiwang {\n            fill: #a9a9b2;\n        }\n    </style>\n\n<style>\n    /* Apply fill color based on currentColor for all logos */\n    .cc-logo path, .att-logo path, .non-logo path {\n        fill: currentColor;\n    }\n\n    /* Default color (black) for day mode for all logos */\n    .cc-logo path, .att-logo path, .non-logo path {\n        color: black;\n    }\n\n    /* Color (#A9A9B2) for dark theme for all logos */\n    .dark-theme .cc-logo path,\n    .dark-theme .att-logo path,\n    .dark-theme .non-logo path {\n        color: #A9A9B2;\n    }\n</style>\n\n\n    <%- partial('totop') %>\n    <script src=\"<%- config.root %>js/totop.js\"></script>\n\n    <!-- require APlayer -->\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js\"></script>\n    <!-- require MetingJS -->\n    <script src=\"https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js\"></script>\n\n\n\n</footer>\n\n```\n\n# 搜索\n\n今天（2023-10-16）凌晨翻Chic主题的issues，发现一个[教程汇总](https://myoontyee.github.io/article/551b025b.html)。里面有[添加搜索功能的教程](https://myoontyee.github.io/article/1650c0d7.html#header内添加搜索框)。此前我也尝试过添加，参考的教程不是针对这个模板的，导致UI太丑，于是作罢。既然有特定的教程，那我来试一下吧！\n\n第一遍失败了，UI和之前添加过的一样，而且不能搜索。大概是之前添加的代码没删干净。于是把_partial文件夹的内容回滚到三天前，再重新操作一次，于是成功。\n\n然后觉得移动端搜索栏展开时有点丑，想要在搜索栏展开时把页面左上角的文字隐藏掉（否则就会和搜索图标重叠），但是没成功，而且还把菜单栏的样式整个弄坏了。于是准备放弃，又回滚重来，但是不知为何还原不了一开始成功时的样式。所以一气之下把移动端的搜索功能整个删除了！最终的搜索栏：电脑端有、手机端横屏竖屏都没有，平板端横屏有、竖屏没有（好麻烦）。 实现很简单，在styl文件中添加：\n\n```css\n@media (max-width: 1024px)\n    .search\n        display none !important\n```\n即可。\n\n后来（2023-10-20）又改成了“max-width: 800px”。实际上平板设备只有iPad Mini竖屏时不会显示搜索框了（因为实在是很丑）。\n\n# 教程汇总里的其他有用教程\n\n[Archive页面过长博文名省略](https://myoontyee.github.io/article/321a7025.html)：在博文名过长的时候将其省略，省略的部分用“…”表示。\n\n[Categories页面过长博文名省略](https://myoontyee.github.io/article/9ff0cec8.html)：与上一个教程大同小异，只是调整的是Categories页面。\n\n[添加Emoji支持](https://myoontyee.github.io/article/a150dc7d.html)：添加Emoji😈支持。\n\n[添加文章字数和阅读时长](https://myoontyee.github.io/article/11459889.html)：如题。\n\n[谷歌收录](https://myoontyee.github.io/article/264c6a00.html)：将博客部署到搜索引擎如Google上使得其能被搜索到。\n\n[打赏](https://myoontyee.github.io/article/cb001f78.html)：如题，我暂时用不到，先存在这里。\n\n[文章置顶](https://myoontyee.github.io/article/fee5a0e2.html)：也暂时用不到，先存在这里。\n\n## 过长博文名省略\n（2023-12-5更新）发现按照上面的教程操作，只有桌面端的博文名省略了，移动端依旧会超过屏幕。所以修改插入到archive.ejs中的代码如下：\n\n```css\n  @media screen and (min-width: 769px){ \n    li {\n        width: 650px;\n        height: 29.5px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n  }\n\n  /* Mobile styles */\n  @media screen and (max-width: 768px) {\n    li {\n      width: 285px;  /* Adjust the width for mobile */\n      /* Retain other properties or adjust as needed */\n      height: 29.5px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  ```\n\n  但在“分类”页面中，某些设备不显示省略号，不知何故。\n\n  （2023-12-7更新）知道是什么原因了。解决方法是微调参数。我将tag和archive页面的min-width改为768px，max-width改为767px，然后把大屏幕下的width改为600px，小屏幕下的width改为240px，问题解决。至于categories页面，我直接把所有屏幕尺寸的宽度调成了240px。\n\n## 置顶\n教程见上。但我发现教程缺少了一步，就是把主题文件夹下的_config.yml中“归档”按钮的跳转链接改掉：\n\n```yml\nnav:\n  归档: /top # 本来是/archive\n  ```\n\n但是这样一来，归档页面的链接就会变成<span>https://greendolphindance.com/top/</span>了，有点不爽。解决方法如下。首先top.js的内容改成：\n\n```javascript\nvar pagination = require('hexo-pagination');\nhexo.extend.generator.register('top', function (locals) {\n    let allPost = locals.posts;\n\n    return pagination('/archives', allPost, { //这里改成/archives\n        perPage: this.config.top_generator.per_page,\n        layout: ['top', 'archive', 'index'],\n        format: 'page' + '/%d/',\n        data: {\n            __index: true\n        }\n    });\n});\n```\n\n然后用top.ejs里的内容替换掉archive.ejs里的内容，并在“pagination”位置作如下修改：\n\n```html\n<nav class=\"pagination\">\n    <%- paginator({ prev_next: false, end_size: 1, mid_size: 2, format: 'page/%d/' ,  <!--这里top改成archives-->\n    total: Math.ceil(posts.length / perPage) }) %>\n</nav>\n```\n\n除此之外，由于我限定了桌面端li的宽度为650px，这会导致置顶栏的显示错位，于是修改CSS代码如下：\n\n```css\n@media screen and (min-width: 769px) {\n    li {\n    width: 650px;\n    height: 29.5px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    }\n}\n\n/* Mobile styles */\n@media screen and (max-width: 768px) {\n    li {\n    width: 285px;\n    /* Adjust the width for mobile */\n    /* Retain other properties or adjust as needed */\n    height: 29.5px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    }\n}\n\n.top-item-date {\n    float: right;\n    text-align: right;\n    color: #a9a9b3;\n}\n\n.top-item {\n    margin-left: 2rem;\n    line-height: 2em;\n    margin-bottom: 10px;\n}\n```\n\n### 修bug\n设置完毕发现过长博文名省略被我覆盖掉了……于是改了archive.ejs的代码。修改后的完整代码如下：\n\n```html\n  <div class=\"container top\">\n    <div class=\"post-wrap tags top\">\n      <h2 class=\"post-title top\">-&nbsp;文章&nbsp;-</h2>\n      <br>\n      <!-- <div class=\"tag-cloud-tags top\">\n                <%site.tags.forEach(item=>{%>\n                    <a href=\"<%-url_for(item.path)%>\"><%- item.name%><small>(<%-item.length%>)</small></a>\n                <%})%>\n            </div> -->\n      <!-- 2022年3月29日 添加置顶功能 -->\n      <div class=\"post top\">\n        <hr />\n        <h3>置顶</h3>\n        <!-- 判断有没有 置顶 这个标签的文章 -->\n        <%site.tags.forEach(item=>{%>\n          <% if(item.name==\"置顶\" ){ %>\n            <% item.posts.each(function (post) { %>\n              <!-- 有的情况判断有没有top数值，按top从大到小排列，当然也可以用时间，目前单独写了个top -->\n              <% if(post.top){ %>\n                <article class=\"top-item\">\n                  <a class=\"top-item-link\" href=\"<%- url_for(post.path) %>\">\n                    <li>\n                      <%= post.title %>\n                        <span class=\"top-item-date\"><%- date(post.date, theme.date_format) %></span>\n                    </li>\n                  </a>\n\n                </article>\n                <% ;} %>\n                  <% }) %>\n                    <% ;} %>\n                      <% }) %>\n                        <hr />\n      </div>\n      <!-- 2022年3月29日 添加置顶功能为上 -->\n\n      <!-- 2022年3月31日 添加每页文章数如下 -->\n      <!-- 2022年3月30日 每页条数 -->\n      <% var perPage=config.top_generator.per_page %>\n        <% var currentPage=url.match(/page\\/(.*)\\//) ? url.match(/page\\/(.*)\\//)[1] : 1 %>\n          <% var last_year='' ; %>\n            <% var posts=site.posts %>\n              <!-- 按date逆序排序 -->\n              <% posts.data=posts.data.sort((a, b)=> b.date - a.date) %>\n                <% posts.slice((currentPage - 1) * perPage, currentPage * perPage ).each(function (post) { %>\n                  <% var cur_year=post.date.year(); %>\n                    <% if(last_year !==cur_year){ %>\n                      <h3><%- cur_year %></h3>\n                      <% last_year=cur_year; } %>\n                        <article class=\"archive-item\">\n\n                          <a class=\"archive-item-link\" href=\"<%- url_for(post.path) %>\">\n                            <li class=\"title\">\n                              <%= post.title %>\n                            </li>\n                          </a>\n\n                          <span class=\"archive-item-date\"><%- date(post.date, theme.date_format) %></span>\n                        </article>\n                        <% }) %>\n\n                          <% if(Math.ceil(posts.length / perPage)> 1) { %>\n                            <nav class=\"pagination\">\n                              <%- paginator({ prev_next: false, end_size: 1, mid_size: 2, format: 'page/%d/' , total:\n                                Math.ceil(posts.length / perPage) }) %>\n                            </nav>\n                            <% } %>\n                              <!-- 2022年3月31日 添加每页文章数如上 -->\n    </div>\n  </div>\n\n  <style>\n    @media (min-width: 769px) {\n      .title {\n        width: 650px;\n        height: 29.5px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n\n    /* Mobile styles */\n    @media (max-width: 768px) {\n      .title {\n        width: 60vw !important;\n        /* Adjust the width for mobile */\n        /* Retain other properties or adjust as needed */\n        height: 29.5px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n\n    .top-item-date {\n      float: right;\n      text-align: right;\n      color: #a9a9b3;\n    }\n\n    .top-item {\n      margin-left: 2rem;\n      line-height: 2em;\n      margin-bottom: 10px;\n    }\n  </style>\n```\n\n\n\n\n# 长链接\n\n这篇博文里有一些很长的链接。这些链接，尤其在移动端的时候，无法自动断行，导致页面被撑开，很丑。\n\n我首先在post_content.styl里加入如下代码：\n\n```css\n.break-link\n    overflow-wrap break-word\n    word-break break-all\n```\n\n然后将长链接两端分别加上“\\<a class=\"break-link\">”和“\\</a>”。有效，但是会导致该链接显示为链接样式（淡蓝色、下划线），而我不希望它如此显示。于是又在post_content.styl里加入：\n\n```css\n.no-style\n    color inherit\n    text-decoration none\n```\n\n再把长链接的class改成“break-link no-style”。问题解决。以后如果想要链接断行，同时让其也显示成链接样式的话，class里不写no-style即可。\n\n# 文章目录\n参考的是[这个教程](https://cloud.tencent.com/developer/article/2065866)。之前也试过别的教程，失败了。这个能用。配置很简单。但是直接设置，这个目录是无法点击跳转的，需要再加一些话：\n\n```yaml\ntoc:\n  maxdepth: 3\n  class: toc\n  slugify: transliteration\n  decodeEntities: false\n  anchor:\n    position: before\n    symbol: ''\n    style: header-anchor\n```\n\n这样即可。\n\n## 进阶\n觉得目录作为文章的内容不太方便，于是去GitHub上提了issue，希望主题的开发者能够实现相关功能。开发者推荐了[tocbot](https://tscanlin.github.io/tocbot)这个插件。配置过程如下：\n\n在post.ejs里添加了如下代码：\n\n```javascript\n<div class=\"js-toc\"></div>\n<div class=\"post-content\"> <!-- 这里的class需要根据自身情况修改 -->\n  <!-- 博客文章内容将在这里渲染 -->\n</div>\n```\n然后在layout.ejs里添加了如下代码：\n```javascript\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/tocbot/dist/tocbot.css\" />\n<script src=\"https://cdn.jsdelivr.net/npm/tocbot/dist/tocbot.js\"></script>\n    <script>\n        document.addEventListener('DOMContentLoaded', (event) => {\n            tocbot.init({\n                tocSelector: '.js-toc',\n                contentSelector: '.post-content',\n                headingSelector: 'h1, h2, h3, h4',\n            });\n        });\n    </script>\n```\n\n最后在media.styl里添加了如下代码：\n\n```css\n/* post toc Style */\n@media screen and (max-width: 1279px) // 最大宽度1279px时应用这条规则。（最大宽度小于1279px返回false，屏蔽规则。）\n  .post-toc\n    display none\n\n.js-toc {\n    position: fixed;\n    top: 150px; /* 距离顶部的距离，可以根据需要调整 */\n    right: 20px; /* 距离右侧的距离，可以根据需要调整 */\n    width: 150px; /* 目录的宽度，可以根据需要调整 */\n    overflow-y: visible; /* 如果目录很长，这将添加滚动条 */\n    max-height: 500px; /* 最大高度，可以根据需要调整 */\n    padding: 20px; /* 内边距，可以根据需要调整 */\n    background-color: transparent; /* 背景颜色，可以根据需要调整 */\n    z-index: 1000; /* 确保目录显示在其他元素之上 */\n}\n\n/* 设置目录项为 flex 容器 */\n.toc-link {\n    display: flex;\n    align-items: center;\n}\n\n/* 调整线条的样式和位置 */\n.toc-link::before {\n    content: \"\";\n    height: 1em; /* 你可以根据需要调整这个值 */\n    margin-right: 10px; /* 添加一些右边距 */\n    margin-top: 0.2em; /* 控制线条距离目录项顶部的距离 */\n    margin-bottom: 0.2em; /* 控制线条距离目录项底部的距离 */\n}\n\n/* 去掉目录前面的数字 */\n.toc-list li {\n    list-style-type: none; /* 设置列表样式类型为 none */\n}\n\n.toc-link::before {\n    display: none !important;\n}\n```\n至于为什么是media.styl而不是别的，我也不知道，随便选了一个罢了。\n\n这样实现的目录有点丑，不过我尽力了，以后再来修改。\n\n然后还想让目录在手机和平板上不显示，这个简单，在media.styl里添加\n```css\n/* 当屏幕宽度小于或等于 1280px 时应用这些样式 */\n@media screen and (max-width: 1280px) {\n    .js-toc {\n        display: none;\n    }\n}\n```\n\n即可。\n\n2023-10-18更新：今天修改了，扒了主题设计者Demo网站上的源代码。修改后的完整代码如下：\n\n```css\n/* post toc Style */\n@media screen and (max-width: 1279px) // 最大宽度1279px时应用这条规则。（最大宽度小于1279px返回false，屏蔽规则。）\n  .post-toc\n    display none\n\n.js-toc {\n    position: fixed;\n    top: 95px; /* 距离顶部的距离，可以根据需要调整 */\n    right: 2em; /* 距离右侧的距离，可以根据需要调整 */\n    width: 15rem; /* 目录的宽度，可以根据需要调整 */\n    font-size: 0.75rem\n    overflow-y: visible; /* 如果目录很长，这将添加滚动条 */\n    max-height: 500px; /* 最大高度，可以根据需要调整 */\n    background-color: transparent; /* 背景颜色，可以根据需要调整 */\n    z-index: 1000; /* 确保目录显示在其他元素之上 */\n}\n\n.js-toc .tocbot-list {\n  max-height: 450px;\n  max-width: 250px;\n  overflow: auto;\n  position: relative;\n  padding-right: 0.875rem;\n}\n.js-toc .tocbot-list::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n.js-toc .tocbot-list::-webkit-scrollbar-thumb {\n  width: 6px;\n  background-color: #eee;\n  border-radius: 2px;\n}\n.js-toc .tocbot-list ul {\n  list-style: none;\n  position: inherit;\n  overflow: hidden;\n}\n.js-toc .tocbot-list ul li {\n  margin-left: 0.25rem;\n}\n.js-toc .toc-link::before {\n  background-color: #fff;\n}\n.js-toc .is-active-link::before {\n  background-color: #2d96bd;\n}\n.js-toc .tocbot-list-menu {\n  margin: 1rem 0.75rem;\n  font-size: 0.75rem;\n}\n.js-toc .tocbot-list-menu a {\n  display: block;\n  margin: 0.375rem 0;\n  color: #999;\n  cursor: pointer;\n}\n.js-toc .tocbot-list-menu a:hover {\n  color: #808080;\n}\n.toc{overflow-y:auto}.toc>.toc-list{overflow:hidden;position:relative}.toc>.toc-list li{list-style:none}.toc-list{margin:0;padding-left:10px}a.toc-link{color:currentColor;height:100%}.is-collapsible{max-height:1000px;overflow:hidden;transition:all 300ms ease-in-out}.is-collapsed{max-height:0}.is-position-fixed{position:fixed !important;top:0}.is-active-link{font-weight:700}.toc-link::before{background-color:#EEE;content:' ';display:inline-block;height:inherit;left:0;margin-top:-1px;position:absolute;width:2px}.is-active-link::before{background-color:#54BC4B}\n\n/* 当屏幕宽度小于或等于 1280px 时应用这些样式 */\n@media screen and (max-width: 1280px) {\n    .js-toc {\n        display: none;\n    }\n}\n\n.back-top-large {\n    display: none;\n}\n\n@media (min-width: 1281px) {\n    .back-top-small {\n        display: none;\n    }\n    .back-top-large {\n        display: block;\n    }\n}\n```\n\n## 移动端目录\n这篇文章越来越长，在移动端阅读感觉很费劲。想着要是把这个目录在移动端也实现就好了。想了一个简单的思路，在移动端右下角放一个目录图标，点击展开目录，再点击图标或点击页面空白部分收起目录。下面是GPT的实现：\n\n首先在post.ejs里添加：\n```html\n<button id=\"tocButton\">\n    <svg t=\"1697879152903\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5387\" width=\"32\" height=\"32\">\n        <path d=\"M 863.113 0 H 160.887 A 161.064 161.064 0 0 0 0 160.887 v 702.225 a 161.064 161.064 0 0 0 160.887 160.887 h 702.225 a 161.064 161.064 0 0 0 160.887 -160.887 V 160.887 a 161.064 161.064 0 0 0 -160.887 -160.887 Z M 242.94 725.908 h -6.06545 a 24.1331 24.1331 0 0 1 0 -48.2662 H 242.94 a 24.1331 24.1331 0 0 1 0 48.2662 Z m 0 -193.58 h -6.06545 a 24.1331 24.1331 0 0 1 0 -48.2662 H 242.94 a 24.1331 24.1331 0 0 1 0 48.2662 Z M 242.94 333.037 h -6.06545 a 24.1331 24.1331 0 0 1 0 -48.2662 H 242.94 a 24.1331 24.1331 0 0 1 0 48.2662 Z m 534.146 392.839 H 416.087 a 24.1331 24.1331 0 0 1 0 -48.2662 h 360.854 a 24.1331 24.1331 0 0 1 0 48.2662 Z m 0 -193.58 H 416.087 a 24.1331 24.1331 0 0 1 0 -48.2662 h 360.854 a 24.1331 24.1331 0 0 1 0 48.2662 Z M 777.086 333.037 H 416.087 a 24.1331 24.1331 0 0 1 0 -48.2662 h 360.854 a 24.1331 24.1331 0 0 1 0 48.2662 Z\" fill=\"#8a8a8a\" p-id=\"5388\"></path>\n    </svg>\n</button>\n<div class=\"overlay\" id=\"overlay\"></div>\n\n<script>\ndocument.getElementById('tocButton').addEventListener('click', function() {\n    var toc = document.querySelector('.js-toc');\n    var overlay = document.getElementById('overlay');\n    if (toc.style.display === 'none' || toc.style.display === '') {\n        toc.style.display = 'block';\n        overlay.style.display = 'block';\n    } else {\n        toc.style.display = 'none';\n        overlay.style.display = 'none';\n    }\n});\n\ndocument.getElementById('overlay').addEventListener('click', function() {\n    document.querySelector('.js-toc').style.display = 'none';\n    document.getElementById('overlay').style.display = 'none';\n});\n</script>\n```\n\n然后在media.styl里设定样式：\n\n```css\n@media screen and (min-width: 1280px) {\n    .js-toc {\n        position: fixed;\n        top: 140px; /* 距离顶部的距离，可以根据需要调整 */\n        right: 2em; /* 距离右侧的距离，可以根据需要调整 */\n        width: 13rem; /* 目录的宽度，可以根据需要调整 */\n        font-size: 0.75rem\n        overflow-y: auto !important; /* 如果目录很长，这将添加滚动条 */\n        max-height: 500px; /* 最大高度，可以根据需要调整 */\n        background-color: transparent; /* 背景颜色，可以根据需要调整 */\n        z-index: 1000; /* 确保目录显示在其他元素之上 */\n    }\n}\n\n.js-toc .tocbot-list {\n    max-height: 450px;\n    max-width: 250px;\n    overflow: auto;\n    position: relative;\n    padding-right: 0.875rem;\n}\n.js-toc .tocbot-list::-webkit-scrollbar {\n    width: 6px;\n    height: 6px;\n}\n.js-toc .tocbot-list::-webkit-scrollbar-thumb {\n    width: 6px;\n    background-color: #eee;\n    border-radius: 2px;\n}\n.js-toc .tocbot-list ul {\n    list-style: none;\n    position: inherit;\n    overflow: hidden;\n}\n.js-toc .tocbot-list ul li {\n    margin-left: 0.25rem;\n}\n.js-toc .toc-link::before {\n    background-color: #fff;\n}\n.js-toc .is-active-link::before {\n    background-color: #2d96bd;\n}\n.js-toc .tocbot-list-menu {\n    margin: 1rem 0.75rem;\n    font-size: 0.75rem;\n}\n.js-toc .tocbot-list-menu a {\n    display: block;\n    margin: 0.375rem 0;\n    color: #999;\n    cursor: pointer;\n}\n.js-toc .tocbot-list-menu a:hover {\n    color: #808080;\n}\n.toc{overflow-y:auto}.toc>.toc-list{overflow:hidden;position:relative}.toc>.toc-list li{list-style:none}.toc-list{margin:0;padding-left:10px}a.toc-link{color:currentColor;height:100%}.is-collapsible{max-height:1000px;overflow:hidden;transition:all 300ms ease-in-out}.is-collapsed{max-height:0}.is-position-fixed{position:fixed !important;top:0}.is-active-link{font-weight:700}.toc-link::before{background-color:#EEE;content:' ';display:inline-block;height:inherit;left:0;margin-top:-1px;position:absolute;width:2px}.is-active-link::before{background-color:#54BC4B}\n\n/* 去掉目录前面的数字 */\n.toc-list li {\n    list-style-type: none; /* 设置列表样式类型为 none */\n}\n\n/* 当屏幕宽度小于或等于 1279px 时应用这些样式 */\n@media screen and (max-width: 1279px) {\n    #tocButton {\n        display: block;\n        position: fixed;\n        bottom: 20px;\n        right: 5vw+1.5px;\n        z-index: 1001; /* 确保 tocButton 在 js-toc 上面 */\n        width: 32px;\n        height: 32px;\n        background-color: transparent;\n        border: none;\n    }\n\n    .overlay {\n        display: none;\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.7);\n        z-index: 999;\n    }\n\n    .js-toc {\n        position: fixed;\n        top: 50%; /* 将元素的顶部边缘定位到屏幕的垂直中央 */\n        left: 50%; /* 将元素的左边缘定位到屏幕的水平中央 */\n        transform: translate(-50%, -50%); /* 微调位置，确保元素的中心位于屏幕的中央 */\n        z-index: 1000;\n        background-color: white !important;\n        border-radius: 5px;\n        padding: 10px;\n        display: none;\n        max-width: 85vw; /* 设置最大宽度为视口宽度的 70% */\n        min-width: 60vw;\n        max-height: 70vh; /* 设置最大高度为视口高度的 70% */\n        overflow-y: auto !important; /* 如果内容超出最大高度或宽度，添加滚动条 */\n    }\n\n    body.dark-theme .js-toc {\n        background-color: #292a2d !important;\n    }\n}\n\n@media screen and (min-width: 1280px) {\n    #tocButton {\n        display: none !important;\n    }\n}\n```\n\n### 目录为空时不显示目录图标\n\n实现代码如下：\n\n```html\n<script>\n    window.onload = function() {\n        var toc = document.querySelector('.js-toc'); // 获取目录元素\n        var tocButton = document.getElementById('tocButton'); // 获取目录按钮元素\n        if (toc) { // 如果目录元素存在\n            if (toc.innerText.trim() === '') { // 如果目录内容为空\n                tocButton.style.display = 'none'; // 隐藏目录按钮\n            } else {\n                tocButton.style.display = 'block'; // 显示目录按钮\n            }\n        } else {\n            tocButton.style.display = 'none'; // 隐藏目录按钮\n        }\n    };\n</script>\n```\n\n### 在目录打开时禁用页面的滚动\n\nGPT生成了代码，并建议我合并一些事件监听器以使得代码整洁。以下是合并后的代码：\n\n```html\ndocument.getElementById('tocButton').addEventListener('click', function() {\n    var toc = document.querySelector('.js-toc');\n    var overlay = document.getElementById('overlay');\n    var body = document.body;\n\n    if (toc.style.display === 'none' || toc.style.display === '') {\n        toc.style.display = 'block'; // 显示目录\n        overlay.style.display = 'block'; // 显示遮罩层\n        body.style.overflow = 'hidden'; // 禁用页面滚动\n    } else {\n        toc.style.display = 'none'; // 隐藏目录\n        overlay.style.display = 'none'; // 隐藏遮罩层\n        body.style.overflow = ''; // 启用页面滚动\n    }\n});\n\n// 点击遮罩层时隐藏目录和遮罩层，并启用页面滚动\ndocument.getElementById('overlay').addEventListener('click', function() {\n    document.querySelector('.js-toc').style.display = 'none';\n    document.getElementById('overlay').style.display = 'none';\n    document.body.style.overflow = ''; // 启用页面滚动\n});\n\n// 页面加载时根据目录内容的有无显示或隐藏目录按钮\nwindow.onload = function() {\n    var toc = document.querySelector('.js-toc');\n    var tocButton = document.getElementById('tocButton');\n    if (toc) {\n        tocButton.style.display = toc.innerText.trim() === '' ? 'none' : 'block';\n    } else {\n        tocButton.style.display = 'none';\n    }\n};\n```\n\n### 允许垂直滚动\n\n发现在移动端滑动手指，目录不滚动。解决办法是修改overflow-y的值：\n\n```css\noverflow-y: auto !important;\n```\n\n这样即可。\n\n### 垂直滚动的下限（？）\n\n垂直滚动到底部时，本来理想的情况是目录文字的最后一行滑到底边框的上面一点点，就不能滑动了。但实际上还能滑动，一直滑到整个目录框变成空白（内容全部滑上去了），才不能滑动。 \n\n解决方案是在layout.ejs里添加如下代码（我一开始添加到post.ejs里，结果没有被调用？）：\n\n```html\n<script> \n    document.querySelector('.js-toc').addEventListener('scroll', function(e) {\n        var tocList = document.querySelector('.toc-list');\n        var maxHeight = tocList.scrollHeight - this.clientHeight + 20; // 计算最大可滚动高度\n        if (this.scrollTop >= maxHeight) {\n            this.scrollTop = maxHeight; // 如果滚动超过最大高度，则设置滚动位置为最大高度\n        }\n    });\n</script>\n```\n\n更新：放弃了这个功能，因为这样的话，当目录内容到达最底部不能再滑动时，右边的滑块还在中间，这个我不知道怎么解决。\n\n再更新：突然灵光一闪，我让滑块不显示不就可以了吗？反正感觉很多可以滑动的东西都不会显示滑块啊。说干就干：\n\n```css\n/* 针对 Chrome、Edge 和 Safari */\n.js-toc::-webkit-scrollbar {\n    display: none;\n}\n\n/* 针对 IE 和 Edge */\n.js-toc {\n    -ms-overflow-style: none;\n}\n\n/* 针对 Firefox */\n.js-toc {\n    scrollbar-width: none;\n}\n```\n搞定。我可真他妈是个天才！\n\n### “目录”按钮和“回到顶部”按钮垂直对齐\n\n这个也折腾了好久。明明两个东西right的数值设置成了一样的，但是总是对不齐。一开始GPT给的方案是弄一个，叫什么，Flexbox？就是把“目录”和“回到顶部”包裹到同一个类里面去，再设定两者的相对位置。但是不知道为什么，调了很久都不行。\n\n然后看网页检查器找线索，发现鼠标放在Element中“totop”这个类时，网页中被标示出来的区域和“目录”按钮的实际位置有错位。而我是把“totop”这个类和“目录”按钮对齐的，所以造成实际显示效果没有对齐。\n\n经查，鼠标放在“totop”下面的SVG链接时，页面上标示的区域和“目录”按钮是重叠的。于是在layout.ejs增加代码如下：\n\n```html\n<style>\n    #tocButton svg {\n        position: fixed;\n        bottom: 20px; /* 调整到你想要的位置 */\n        right: 5vw;\n    }\n\n    #totop {\n        position: fixed;\n        bottom: 20px+2rem; /* 调整到你想要的位置 */\n        right: 5vw;\n    }\n</style>\n```\n问题解决。我还做了一些小的调整，比如调整某些情况下“回到顶部”按钮的大小。\n\n修改完之后觉得两个按钮距离太近了，就改了#totop中bottom的数值，但是没有反应。经查，这一条规则没有被应用，被应用的是“totop”类中的bottom规则。于是把这一数值由50px改为60px。\n\n### 桌面端点击目录时疯狂上下抖动！\n\n如题，死马当活马医地问了一下GPT，结果轻松就解决了！方法如下：\n\n> 这个问题可能是由于浏览器尝试在点击目录条目时保持目录的当前滚动位置所导致的。当页面内容滚动以将所选条目对齐到视口顶部时，目录的滚动位置也会相应地调整，从而导致“疯狂上下抖动”的现象。\n> \n> 为了解决这个问题，你可以尝试在点击目录条目时禁用目录的滚动事件监听器，然后在跳转完成后再重新启用。这里是一个可能的解决方案：\n> \n> ```javascript\n> <script>\n>     var tocContainer = document.querySelector('.js-toc');\n> \n>     tocContainer.addEventListener('scroll', handleScroll);\n> \n>     function handleScroll(e) {\n>         // 你原来的滚动事件处理代码\n>     }\n> \n>     // 当点击目录条目时\n>     tocContainer.addEventListener('click', function(e) {\n>         // 禁用滚动事件监听器\n>         tocContainer.removeEventListener('scroll', handleScroll);\n> \n>         // 在跳转完成后重新启用滚动事件监听器\n>         setTimeout(function() {\n>             tocContainer.addEventListener('scroll', handleScroll);\n>         }, 100); // 你可以根据需要调整延迟时间\n>     });\n> </script>\n> ```\n> \n> 在这段代码中，我添加了一个点击事件监听器，当点击目录条目时，它会禁用滚动事件监听器，然后在一个延迟后重新启用。这样可以防止在跳转过程中触发滚动事件，从而避免抖动的问题。\n> \n> 你可以尝试使用这段代码，并根据你的实际情况进行相应的调整。希望这能解决你的问题！\n\n2023-10-22更新：发现没解决，我是用Chrome看到仿佛解决了，但是Chrome上其实根本就没有这个问题……只有Safari有。上面这段代码需要把原来的滚动事件处理代码放进handleScroll这个函数里，我当时没看直接复制了，所以其实根本没用。然后今天我找了半天找不到这个滚动代码……所以暂时算了吧。\n\n### 点框外屏幕时隐藏目录\n\n默认的设定是在目录展开时，只有再次点击目录按钮才会收起目录，但是这样有点反直观。所以我想设置成在目录展开时，点击屏幕除目录框之外的任何地方都可以将目录收起。实现方法如下：\n\n> 我明白了，我将详细说明应该如何修改代码：\n>\n> #### 1. **添加新函数 `hideToc()`：**\n>    在 `<script>` 标签内，你可以添加一个新函数 `hideToc()`。这个函数会隐藏目录和遮罩层，并启用页面滚动。\n>\n> #### 2. **修改 `overlay` 的 HTML：**\n>    在 `overlay` div 的 HTML 中添加一个 `onclick` 事件，使其在被点击时调用 `hideToc()` 函数。\n>\n> #### 3. **修改 `tocButton` 的事件监听器：**\n>    修改 `tocButton` 的点击事件监听器，使其在目录显示时调用 `hideToc()` 函数。\n>\n> 以下是具体的代码修改：\n>\n> #### 1. 在 `<div class=\"overlay\" id=\"overlay\"></div>` 下面添加 `onclick` 事件：\n>\n> ```html\n> <div class=\"overlay\" id=\"overlay\" onclick=\"hideToc()\"></div>\n> ```\n>\n> #### 2. 在现有 `<script>` 标签内添加新函数 `hideToc()`：\n>\n> ```javascript\n> <script>\n>     function hideToc() {\n>         var toc = document.querySelector('.js-toc');\n>         var overlay = document.getElementById('overlay');\n>         var body = document.body;\n>\n>         toc.style.display = 'none'; // 隐藏目录\n>         overlay.style.display = 'none'; // 隐藏遮罩层\n>         body.style.overflow = ''; // 启用页面滚动\n>     }\n>     // ... (保留其他代码)\n> </script>\n> ```\n>\n> #### 3. 修改 `tocButton` 的事件监听器：\n>\n> 找到以下代码：\n>\n> ```javascript\n> document.getElementById('tocButton').addEventListener('click', function() {\n>     var toc = document.querySelector('.js-toc');\n>     var overlay = document.getElementById('overlay');\n>     var body = document.body;\n>\n>     if (toc.style.display === 'none' || toc.style.display === '') {\n>         toc.style.display = 'block'; // 显示目录\n>         overlay.style.display = 'block'; // 显示遮罩层\n>         body.style.overflow = 'hidden'; // 禁用页面滚动\n>     } else {\n>         toc.style.display = 'none'; // 隐藏目录\n>         overlay.style.display = 'none'; // 隐藏遮罩层\n>         body.style.overflow = ''; // 启用页面滚动\n>     }\n> });\n> ```\n>\n> 并将其修改为：\n>\n> ```javascript\n> document.getElementById('tocButton').addEventListener('click', function() {\n>     var toc = document.querySelector('.js-toc');\n>     var overlay = document.getElementById('overlay');\n>     var body = document.body;\n>\n>     if (toc.style.display === 'none' || toc.style.display === '') {\n>         toc.style.display = 'block'; // 显示目录\n>         overlay.style.display = 'block'; // 显示遮罩层\n>         body.style.overflow = 'hidden'; // 禁用页面滚动\n>     } else {\n>         hideToc();\n>     }\n> });\n> ```\n>\n> 这样，无论是点击目录按钮还是页面的其他部分，目录都应该能够正确显示和隐藏。\n\n### 目录各条目的间距\n\n我希望目录框里，每个条目之间有0.5rem的间距。实现方式：\n\n```css\nli.toc-list-item {\n    margin-bottom: 0.5rem; /* 添加间距 */\n}\n```\n\n## 代码整理\n\n其实我也不记得我是怎么整理的了，总之记录一下我确实有整理过这回事……\n\n起因是突然发现在宽度大于等于1280px的页面也会显示目录按钮，也会出现展开的目录。点击按钮会隐藏目录，再点击会显示目录，然后页面就不能滚动了。总之肯定是哪里搞错了，于是开始逐一排查，期间听从GPT的建议整理了大量代码。记得的操作有：\n\n1. 把同一个函数写了两遍的内容合并到一起。\n2. 调整边界数值。比如我一开始自己也没搞清自己到底是要宽度大于1280还是大于等于1280，所以写得很混乱。后来统一成了min-width为1280（后改成1380）和max-width为1279（后改成1379）。\n3. 调整缩进。由于我很多代码是复制来的，有时候原网页上没有缩进或缩进不对，所以这些缺陷全被我继承过来了……\n4. 想起来了再补充。\n\n整理的过程中，有一次编译后等了很久网站也没有变化，经查，在文件里已改成“1279”的数值，在网页检查器中仍是“1280”，其他修改过的属性也没有变化。我思考了很久……花了很多时间，查了很多资料，使用了很多方法，包括删库重建，均无效果。最后发现我之前用博客文件夹的本地备份替换了原来的文件夹（方式是删除原文件夹，再重命名备份文件夹），而这之后必须在终端里重新cd一下，做的更改才可以成功生效。下次一定记住……\n\n# 优化宽度<300px的手机上的显示\n不多说，放代码。代码放在media.styl里。\n```css\n/* 在封面页减小标题栏、nickname、description、copyright的字体大小 */\n@media (max-width: 299px) {\n    .wrapper header .navbar-header,\n    .wrapper header .navbar-header a,\n    .menu-toggle {\n        font-size: 12px !important;\n    }\n    .wrapper footer .copyright,\n    .wrapper footer .copyright * {\n        font-size: 10px !important;\n    }\n    \n    .wrapper .nickname {\n        font-size: 20px !important;\n    }\n    .wrapper .description {\n        font-size: 12px !important;\n    }\n}\n\n/* 在其他页面减小标题栏、copyright的字体大小 */\n@media (max-width: 299px) {\n    body:not(.wrapper) .navbar-header,\n    body:not(.wrapper) .navbar-header * {\n        font-size: 12px !important;\n    }\n    body:not(.wrapper) footer .copyright，\n    body:not(.wrapper) footer .copyright * {\n        font-size: 10px !important;\n    }\n}\n\n@media (max-width: 299px) {\n    .menu.active .menu-item {\n        font-size: 12px !important;\n    }\n}\n\n@media (max-width: 299px) {\n    .post-wrap {\n        padding-top: 2rem;\n        width: 80%; /* 调整内容宽度 */\n        overflow: hidden; /* 防止内容溢出容器 */\n    }\n}\n\n@media (max-width: 299px) {\n    .archive-item-link {\n        display: block; /* 确保链接作为块级元素显示 */\n        overflow: hidden; /* 隐藏溢出的文本 */\n        white-space: nowrap; /* 防止文本换行 */\n        text-overflow: ellipsis; /* 将溢出的文本显示为省略号 */\n        width: 100%; /* 确保链接元素占据全部可用宽度 */\n    }\n}\n\n@media (max-width: 299px) {\n    li {\n        width: 100% !important;\n    }\n}\n\n@media (max-width: 299px) {\n    .post-wrap .post-title {\n        font-size: 1.5em;\n    }\n}\n```\n\n总之就是各种调整各种打补丁……\n\n调整前示例：\n\n<img width=\"300\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/0a4c3782-c9f5-444a-ac1e-66e919f62452\">\n\n调整后示例：\n\n<img width=\"300\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d5ea8b72-7d94-40e3-91cb-4489ed8889aa\">\n\n还是有点丑，不过我尽力了。希望看我博客的没有Galaxy Fold用户……这是什么反人类手机啊。\n\n# 解决点击“About”和“Links”时页面微妙的横向晃动\n又是一个微小的细节！但是一旦注意到就忍不了！\n\n解决方案很简单，在CSS文件中添加如下代码：\n\n```css\n/* 固定页面宽度 */\nbody {\n    width: 100vw; /* 设置页面宽度为视口宽度的百分比 */\n    overflow-x: hidden; /* 隐藏水平滚动条，防止页面宽度变化 */\n}\n```\n即可。\n\n# 页面标题对齐\n\n今天发现Categories和Tags页面、About和Links页面、文章的标题不在同一高度上。我希望把它们全部调整成和Categories与Tags的标题等高（从网页检查器得知需要设置margin-top为2rem）。\n\nAbout和Links页面标题的高度在/themes/Chic/source/css/_page/page.styl中调整，将padding-top改为2rem即可。\n\n文章标题的高度在<a class=\"break-link no-style\"> /themes/Chic/source/css/_page/_post/post_header.styl </a>中调整，需要进行两步操作：（1）将post-title的margin-top设置为2rem;(2)将post-header h1下的“margin 0 !important”删除，否则标题高度将不会发生变化。\n\n但是，我没有改Archives页面标题的高度，即便这一页面的标题比其他的标题位置高。因为（1）Archives中的标题“2023”字号比其他页面标题的字号小，那么将前者与页面其他内容排列得更紧凑似乎要美观一些。（2）其实Archives标题的padding-top也是2rem，但是它可能是按这个标题的字号计算的，所以这个2rem的绝对长度比别的页面的2rem要短；然后我懒得计算它们的绝对高度了，所以就算了吧。\n\n# 浏览器顶栏的标题显示\n所谓的浏览器顶栏，就是这个栏，我也不知道学名应该叫什么：\n\n<img width=\"220\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/81e0ce29-52d1-40f5-bad9-2806b3716fcc\">\n\n在修改之前，顶栏标题中“｜”前面的内容都乱七八糟的，有“归档”、“Categories”、“- 关于我 -”之类的。于是想把它们统一起来。\n\n首先了解到顶栏标题和md文件的title有关，于是把分类和留言板等的title改成了中文，显示正常。但是由于Chic主题默认的分类和标签页面的标题是左右带“-”的，我就把关于和友链页面的title改成了“- 关于我 -”和“- 友情链接 -”，这样顶栏标题也是带“-”的，不统一。\n\n修改方法如下：首先在md文件的FrontMatter中添加一个新的变量，如：\n\n```markdown\ntitle: \"- 关于我 -\"\nbrowser_title: \"关于\"\n```\n\n然后找到负责渲染页面标题的模板文件（我的是/themes/Chic/layout/_partial/head.ejs），修改这段代码：\n\n```javascript\n<title><% if (title){ %><%= title %> | <% } %><%= config.title %></title>\n```\n\n如下：\n\n```javascript\n<title><% if (page.browser_title){ %><%= page.browser_title %> | <% } else if (title){ %><%= title %> | <% } %><%= config.title %></title>\n```\n\n即可。\n\n# 分类和标签页面的排序\n（2023-12-11更新）首先说明一下这两个页面的结构。分类主页面如下图所示：\n\n<img width=\"600\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d1e06696-a3f6-4fd3-9d47-621a6788d7b9\">\n\n其中，“折腾”“随笔”等分类名都可以点开，点开后出现如下界面：\n\n<img width=\"400\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/989e9276-734c-4624-9045-011ade52edff\">\n\n我希望主页面的各个分类、各个分类下的文章名，以及点开某个分类后其下的文章名，都按字母顺序排列。\n\n标签主页面如下图所示：\n\n<img width=\"600\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/80eda191-3c39-4f8b-b7de-fd474e53abc6\">\n\n其中，点开任意标签可以进入类似如下的界面：\n\n<img width=\"600\" alt=\"image\" src=\"https://github.com/greendolphindance/greendolphindance.github.io/assets/87912044/d5ac9cd6-9c67-4b4a-8feb-9d94f345e51f\">\n\n我希望每个标签，以及点开某个标签后其下的文章名，都按字母顺序排列。\n\n## 分类\n这个事情的本质是让categories页面的每个card-item按照其下h3的文本的字母顺序排列。ChatGPT解决方案的原理是：\n\n> 为了让 categories 页面的每个 card-item 按照其下 h3 标签的文本（即分类名称）的字母顺序排列，您需要在循环之前对 site.categories 进行排序。\n\n给出的代码如下，修改后blog/themes/Chic/layout/category.ejs中的代码如下：\n\n```html\n<%# single category page %>\n<% if(is_category()){ %>\n    <%- partial('_page/category', {pagination: config.category, index: true}) %>\n<% }else{ %>\n\n    <div class=\"container\">\n        <div class=\"post-wrap categories\">\n            <h2 class=\"post-title\">-&nbsp;分类&nbsp;-</h2>\n            <div class=\"categories-card\">\n                <% \n                    // Convert categories to an array and sort them alphabetically by name\n                    var sortedCategories = site.categories.toArray().sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n                %>\n                <% sortedCategories.forEach(category_item => { %>\n                    <div class=\"card-item\">\n                        <div class=\"categories\">\n                            <a href=\"<%- url_for(category_item.path) %>\">\n                                <h3>\n                                    <i class=\"iconfont icon-category\" style=\"padding-right:3px\"></i>\n                                    <%- category_item.name %>\n                                </h3>\n                            </a>\n                            <% category_item.posts.forEach((post_item, index = 0) => { %>\n                                <% if(++index <= 5){ %>\n                                    <article class=\"archive-item\">\n                                        <a class=\"archive-item-link\" href=\"<%- url_for(post_item.path) %>\">\n                                           <li><%- post_item.title %></li>\n                                        </a>\n                                    </article>\n                                <% } %>\n                            <% }) %>\n                            <% if(category_item.posts.length > 5){ %>\n                                <a class=\"more-post-link\" href=\"<%- url_for(category_item.path) %>\">更多 >></a>\n                            <% } %>\n                        </div>\n                    </div>\n                <% }) %>\n            </div>\n        </div>\n    </div>\n<% } %>\n\n<!-- Style for handling ellipsis in post titles -->\n<style>\n    /* Existing styles for li elements */\n</style>\n```\n\n## 各分类下的文章标题\n这个需要在blog/themes/Chic/layout/_page/category.ejs中进行修改。修改后改文件的代码如下：\n```html\n<%# single category page%>\n<div class=\"container\">\n    <div class=\"post-wrap categories\">\n        <h2 class=\"post-title\">-&nbsp;<i class=\"iconfont icon-fenlei\" style=\"font-size: 1em;\"></i>分类&nbsp;·&nbsp;<%-page.category%>-</h2>\n        \n        <% var posts = site.categories.findOne({name: page.category}).posts %>\n        <!-- 按title字母顺序排序 -->\n        <% posts.data.sort((a, b) => a.title.toLowerCase().localeCompare(b.title.toLowerCase())) %>\n        <% posts.each(function (post) { %>\n            <article class=\"archive-item\">\n                <a class=\"archive-item-link\" href=\"<%- url_for(post.path) %>\">\n                <li class=\"category-page-post\">\n                    <%= post.title %>\n                </li>\n                </a>\n            </article>\n        <% }) %>\n    </div>\n</div>\n```\n\n## 标签\n类似地，标签本身的顺序在blog/themes/Chic/layout/tag.ejs里改，点开每个标签后列表文章的排列顺序在blog/themes/Chic/layout/_page/tag.ejs里改。修改后，第一个文档里的代码如下：\n\n```html\n<%#\n\nthis page will judge whether current page is 'tag.'\nurl:'http://localhost:4000/tag/' return false.\nurl:'http://localhost:4000/tags/test/' return true.\n\nif you enter 'tag' page by click link will show all tags.\notherwise if you enter 'tags' by click post header link will show the single tag of this post.\n\nhow to add a tag page:\n\n    1. hexo new page \"tag\"\n    2. cd source/tag/index.md\n    3. add layout pattern like this:\n    ---\n    title: '''tag'''\n    date: 2019-06-09 09:56:49\n    layout: tag\n    ---\n\n %>\n \n <% if(is_tag()){ %>\n    <%- partial('_page/tag', {pagination: config.tag, index: true}) %>\n<% }else{ %>\n    <div class=\"container\">\n        <div class=\"post-wrap tags\">\n            <h2 class=\"post-title\">-&nbsp;标签&nbsp;-</h2>\n\n            <div class=\"tag-cloud-tags\">\n                <% \n                    // Convert tags to an array and sort them alphabetically by name\n                    var sortedTags = site.tags.toArray().sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n                %>\n                <% sortedTags.forEach(function(tag) { %>\n                    <a href=\"<%- url_for(tag.path) %>\"><%- tag.name %><small>(<%- tag.length %>)</small></a>\n                <% }); %>\n            </div>\n        </div>\n    </div>\n<% } %>\n```\n\n第二个文档里的则如下：\n\n```html\n<%# single tag page %>\n<div class=\"container\">\n    <div class=\"post-wrap tags\">\n        <h2 class=\"post-title\">-&nbsp;<i class=\"iconfont icon-biaoqian\" style=\"font-size: 1em;\"></i>标签&nbsp;·&nbsp;<%-page.tag%>-</h2>\n        \n        <% var posts = site.tags.findOne({name: page.tag}).posts %>\n        <!-- 按title字母顺序排序 -->\n        <% posts.data.sort((a, b) => a.title.toLowerCase().localeCompare(b.title.toLowerCase())) %>\n        <% posts.each(function (post) { %>\n            <article class=\"archive-item\">\n                <a class=\"archive-item-link\" href=\"<%- url_for(post.path) %>\">\n                    <li class=\"tag-page-post\">\n                        <%= post.title %>\n                    </li>\n                </a>\n            </article>\n        <% }) %>\n    </div>\n</div>\n\n<!-- Style for handling ellipsis in post titles -->\n<style>\n    /* Existing desktop styles */\n    @media screen and (min-width: 768px){ \n        li {\n            width: 600px;\n            height: 29.5px;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n    }\n  \n    /* Mobile styles */\n    @media screen and (max-width: 767px) {\n        li {\n            width: 285px; /* Adjust the width for mobile */\n            height: 29.5px;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n    }\n</style>\n```\n\n# 本站运行时间\n\n参考的是[这个教程](https://www.fadai.cc/posts/8fda83f9/)，很简单。\n\n# 最后更新时间\n部分参考了[这个教程](https://blog.vanxnf.top/2018/09/03/Hexo-%E5%8D%9A%E5%AE%A2-Hiker-%E4%B8%BB%E9%A2%98%E5%A2%9E%E5%8A%A0%E6%96%87%E7%AB%A0%E6%9C%80%E5%90%8E%E7%BC%96%E8%BE%91%E6%97%B6%E9%97%B4%EF%BC%8C%E5%B9%B6%E6%8C%89%E7%85%A7%E6%9C%80%E5%90%8E%E7%BC%96%E8%BE%91%E6%97%B6%E9%97%B4%E6%8E%92%E5%BA%8F/)（虽然ta和我用的主题不一样）。\n\n首先修改blog/scaffolds/post.md。在frontmatter里添加一行：\n\n```markdown\nupdated: {{ date }}\n```\n\n然后每修改一次文章内容，都要手动修改一下updated后面的时间（好麻烦）。\n\n接着修改blog/themes/Chic/layout/_page/post.ejs，增加下面一段：\n\n```html\n<% if(page.updated){ %>\n     <span class=\"updated-time\">\n        最后更新: <a href=\"#\"><%- date(page.updated, theme.date_format) %>&nbsp;&nbsp;<%- time(page.updated, theme.time_format)%></a>\n    </span>\n<% } %>\n```\n即可。\n\n# 代码复制按钮\n首先去GitHub下载[clipboard.js文件](https://github.com/zenorocha/clipboard.js/releases)。将dist/clipboard.min.js放入博客主题目录下的source/js文件夹中。\n\n然后在post.ejs中插入如下代码：\n\n```html\n<script src=\"/js/clipboard.min.js\"></script>\n<script>\n    document.addEventListener('DOMContentLoaded', function () {\n        var codeBlocks = document.querySelectorAll('article pre code');\n\n        codeBlocks.forEach(function (codeBlock) {\n            var copyButton = document.createElement('button');\n            copyButton.className = 'copy-button';\n            copyButton.innerText = 'Copy';\n\n            // Check if the code block is in the article content\n            if (codeBlock.closest('article')) {\n                codeBlock.parentNode.style.position = 'relative';\n                codeBlock.parentNode.appendChild(copyButton); // 将按钮添加到 codeBlock 的父节点内\n\n                var isCopying = false;\n\n                copyButton.addEventListener('click', function () {\n                    if (!isCopying) {\n                        var codeText = codeBlock.innerText;\n                        navigator.clipboard.writeText(codeText).then(function () {\n                            copyButton.innerText = 'Copied!';\n                            isCopying = true;\n                            setTimeout(function () {\n                                copyButton.innerText = 'Copy';\n                                isCopying = false;\n                            }, 1500);\n                        }).catch(function (err) {\n                            console.error('Copy failed', err);\n                        });\n                    }\n                });\n            }\n        });\n    });\n</script>\n\n<style>\n    .copy-button {\n        position: absolute;\n        top: 0;\n        right: 0;\n        background-color: #2d96bd;\n        color: #fff;\n        border: none;\n        border-radius: 10%;\n        padding: 5px 10px;\n        cursor: pointer;\n    }\n</style>\n```","tags":["博客","置顶"],"categories":["折腾"]},{"title":"塔罗牌为什么不会出错","url":"/2023/10/06/塔罗牌为什么不会出错/","content":"最近迷上了塔罗牌，有时候会给自己或者别人算。说是“迷上”，实际上是感兴趣其中的故事以及它的运行机制，至于相不相信则是另外一回事。\n\n前几天读到一位“科学主义者”写的批判塔罗牌的文章，其论证大致是：他利用相信塔罗牌的朋友来做实验，测试了十次，准确率仅为40%，和随机猜测的概率（50%）接近。因此他断言，塔罗牌是无效的。\n\n很多人会认为这个论证有效，是因为他们不了解塔罗牌的运行机制。包括塔罗牌在内的许多算命手段都一条重要的原则，那就是“不能戏卜”。也就是说，如果你本身不相信塔罗牌，只是为了“试一试”它，那它测算的结果是不会准的。所以，此人的实验无法证伪它的有效性。\n\n此外，此人的朋友对于这一结果的说辞是她的能力不够，如果由灵力更强的占卜师来算的话，准确率会大大提高。所以，即便一个相信塔罗牌的人算出来的结果没能应验，ta也可以归咎于占卜师，而不是牌本身。这也是很巧妙的。\n\n我当然并不是在说塔罗牌一定有效。我想说明的是，塔罗牌有自己的一套内在逻辑，根据这套逻辑，你对它只谈得上相信或不相信，而谈不上证明或证伪。任何证明或证伪其有效性的努力都会像是证明或证伪上帝存在一样，是徒劳的。\n\n这里不得不提到部分塔罗爱好者热衷于介绍的所谓“塔罗牌的原理”——荣格心理学。我对荣格没有什么了解，只通过道听途说而觉得他的理论玄之又玄，叫人不是很想相信的样子。许多塔罗爱好者想要使用这一理论来证明塔罗牌的有效性，我觉得没有必要。首先，这个理论连我都说服不了，更别说那些科学主义者了。其次，它确实就是没有必要。相信它的人自然会相信，不相信它的人也不会因为它有一些理论支撑就转而相信它。命运的存在与否仅仅关乎信仰。\n\n我自己使用塔罗牌的体验是它很少有不准的时候。最差的结果也不过是牌面给出的是一些套话，例如踏实肯干方可成功、有挫折但前途光明，等等。对于这种现象，我有一种推测：每一张塔罗牌都包含了围绕着一个主题的丰富意义，而对于每一种情况，我们基本上都可以找出一种意义，使得对于塔罗牌的这种解读符合这一情况。\n\n此外还必须补充的是，塔罗牌预测的未来不同于东方玄学的不可改变之未来，而是未来发展的一种模糊趋势，人可以通过自己的努力去改变它。因此，比起“预测未来”，塔罗牌的作用更多是“提出建议”，也就是说对于预测出的坏结果，塔罗牌要追求的反而是“不准”，期望问卜者能够成功改变坏的未来。这也使得准或不准不再是衡量占卜师水平的唯一尺度。\n\n不过这只能解释部分情况。对于为自己占卜的场合，由于每个人对自己的情况都是全知的，在解牌时就自然而然能够将自己的情况适合的牌意对应上，这样就会显得比较准。但是给别人占卜时又怎么解释呢？我前几天准确地算出了我妈最近和一个年轻男子有很多交集（实为她和比自己小的领导大吵一架，吓死，我以为她包养了男大学生x），以前也算准过一些具体的事情。我还没搞清楚其中的原理，也许根本就无法解释也说不定。\n\n我目前的态度是：我会用塔罗牌来帮我做一些比较难以选择的决定，但不会滥用，比如不会占卜今天晚上要吃什么这样的琐碎问题，当然也不会妄图用这些问题来测试其准确性。不过，我也并没有对它全盘相信。因为不知其原理，所以对它保有怀疑对我来说是一个比较安全的态度。再但是，占卜很好玩！给人一种仪式感和掌控感，解牌的过程像是有趣版的看图说话，而且如果算准了也会很开心。开心最重要！所以我应该还是会继续使用它！\n","tags":["占卜"],"categories":["随笔"]}]